// RO data = 5056/5056 bytes
// RW data = 560/12120 bytes
// Stack size = 131072 bytes

// Instructions = 9495
// Code size = 30361 bytes

      : @0
     0: jump @1723
      : @1
     5: jump @1723
      : @2
    10: jump @1723
      : @3
    15: jump @1723
      : @4 [@dyn 1]
    18: ret
      : @5 [@dyn 2]
    20: u64 [0x30230] = s1
    25: fallthrough
      : @6
    26: a0 = u64 [s1]
    28: s1 = s1 + 0x8
    31: jump @6 if a0 != 0
      : @7
    34: a4 = 0x30008
    39: u64 [0x30010] = s1
    44: a1 = u64 [s1]
    46: jump @14 if a1 == 0
      : @8
    49: s1 = s1 + 0x10
    52: a0 = 0x25
    55: a2 = sp + 0x30
    58: jump @10
      : @9
    60: a1 = u64 [s1]
    62: s1 = s1 + 0x10
    65: jump @12 if a1 == 0
      : @10
    68: jump @9 if a0 <u a1
      : @11
    71: a3 = u64 [s1 + 0xfffffffffffffff8]
    74: a1 = a1 << 0x3
    77: a1 = a1 + a2
    80: u64 [a1] = a3
    82: jump @9
      : @12
    84: a1 = u64 [sp + 0xb0]
    88: a0 = u64 [sp + 0x130]
    92: u64 [0x303d8] = a1
    97: jump @15 if a0 == 0
      : @13
   100: u64 [0x303c0] = a0
   105: jump @15
      : @14
   107: u64 [0x303d8] = 0
   112: fallthrough
      : @15
   113: a0 = u64 [sp + 0x60]
   116: a1 = u64 [sp + 0x128]
   120: s1 = a4
   122: u64 [a4 + 0x30] = a0
   125: a1 = s0 if s0 != 0
   128: a4 = 0x303d0
   133: a0 = 0x303c8
   138: a2 = 0x10113
   143: a2 = a1 if a1 != 0
   146: u64 [0x303d0] = a2
   151: u64 [0x303c8] = a2
   156: a1 = a2 + 0x1
   159: a2 = 0x2f
   162: jump @18
      : @16
   164: u64 [a0] = a1
   166: a1 = a1 + 0x1
   169: jump @18
      : @17
   171: a1 = a1 + 0x1
   174: fallthrough
      : @18
   175: a3 = u8 [a1 + 0xffffffffffffffff]
   178: jump @16 if a3 == a2
      : @19
   181: jump @17 if a3 != 0
      : @20
   184: a0 = sp + 0x30
   187: ra = 6, jump @49
      : @21 [@dyn 3]
   192: a0 = u64 [sp + 0x88]
   196: a1 = u64 [sp + 0x90]
   200: jump @24 if a0 != a1
      : @22
   203: a0 = u64 [sp + 0x98]
   207: a1 = u64 [sp + 0xa0]
   211: jump @24 if a0 != a1
      : @23
   214: a0 = u64 [sp + 0xe8]
   218: jump @36 if a0 == 0
      : @24
   222: u64 [sp + 24] = 0
   225: u64 [sp + 32] = 0x1
   229: u64 [sp + 40] = 0x2
   233: u64 [sp + 8] = 0
   236: u64 [sp + 16] = 0
   239: a0 = 0x49
   242: a1 = sp + 0x18
   245: a2 = 0x3
   248: a3 = sp + 0x8
   251: a5 = 0x8
   254: u64 [sp + 0] = 0
   256: a4 = 0
   258: ra = 8, jump @1737
      : @25 [@dyn 4]
   263: a0 = a0 << 0x20
   266: jump @38 if a0 <s 0
      : @26
   270: a0 = u16 [sp + 0x1e]
   273: a0 = a0 & 0x20
   276: jump @29 if a0 == 0
      : @27
   279: a0 = 0x38
   282: a2 = 0x107a1
   287: a3 = 0x8002
   292: a1 = 0xffffffffffffff9c
   295: u64 [sp + 0] = 0
   297: a4 = 0
   299: a5 = 0
   301: ra = 10, jump @1737
      : @28 [@dyn 5]
   306: jump @37 if a0 <s 0
      : @29
   309: a0 = u16 [sp + 0x26]
   312: a0 = a0 & 0x20
   315: jump @32 if a0 == 0
      : @30
   318: a0 = 0x38
   321: a2 = 0x107a1
   326: a3 = 0x8002
   331: a1 = 0xffffffffffffff9c
   334: u64 [sp + 0] = 0
   336: a4 = 0
   338: a5 = 0
   340: ra = 12, jump @1737
      : @31 [@dyn 6]
   345: jump @37 if a0 <s 0
      : @32
   348: a0 = u16 [sp + 0x2e]
   351: a0 = a0 & 0x20
   354: jump @35 if a0 == 0
      : @33
   357: a0 = 0x38
   360: a2 = 0x107a1
   365: a3 = 0x8002
   370: a1 = 0xffffffffffffff9c
   373: u64 [sp + 0] = 0
   375: a4 = 0
   377: a5 = 0
   379: ra = 14, jump @1737
      : @34 [@dyn 7]
   384: jump @37 if a0 <s 0
      : @35
   387: a0 = 0x1
   390: u8 [s1 + 0x2] = a0
   393: fallthrough
      : @36
   394: ra = u64 [sp + 0x170]
   398: s0 = u64 [sp + 0x168]
   402: s1 = u64 [sp + 0x160]
   406: sp = sp + 0x178
   410: ret
      : @37
   412: trap
      : @38
   413: trap
      : @39
   414: s0 = 0x30230
   419: s1 = 0x30230
   424: jump @42 if s1 >=u s0
      : @40
   427: a0 = u64 [s1]
   429: ra = 16, jump [a0]
      : @41 [@dyn 8]
   433: s1 = s1 + 0x8
   436: jump @40 if s1 <u s0
      : @42
   439: ra = u64 [sp + 0x10]
   442: s0 = u64 [sp + 0x8]
   445: s1 = u64 [sp]
   447: sp = sp + 0x18
   450: ret
      : @43 [@dyn 9]
   452: a5 = 0x14
   455: a0 = u64 [sp]
   457: a1 = s1
   459: a2 = s0
   461: ra = u64 [sp + 0x18]
   464: s0 = u64 [sp + 0x10]
   467: s1 = u64 [sp + 0x8]
   470: sp = sp + 0x20
   473: fallthrough
      : @44 [@dyn 10]
   474: sp = sp + 0xffffffffffffffd8
   477: u64 [sp + 0x20] = ra
   480: u64 [sp + 0x18] = s0
   483: u64 [sp + 0x10] = s1
   486: s0 = a2
   488: s1 = a1
   490: u64 [sp + 0x8] = a0
   493: a0 = a1 << 0x3
   496: a0 = a0 + a2
   499: a0 = a0 + 0x8
   502: u64 [sp] = a0
   504: ra = 0x16
   507: sp = sp + 0xffffffffffffffe8
   510: u64 [sp + 0x10] = ra
   513: u64 [sp + 0x8] = s0
   516: u64 [sp] = s1
   518: jump @39
      : @45 [@dyn 11]
   520: a0 = s1
   522: a1 = s0
   524: a2 = u64 [sp]
   526: a3 = u64 [sp + 0x8]
   529: ra = 24, jump [a3]
      : @46 [@dyn 12]
   533: ra = 0x1a
   536: sp = sp + 0xfffffffffffffff0
   539: u64 [sp + 0x8] = ra
   542: u64 [sp] = s0
   544: s0 = a0
   546: ra = 0x28
   549: jump @73
      : @47 [@dyn 13]
   552: sp = sp + 0xffffffffffffffe0
   555: u64 [sp + 0x18] = ra
   558: u64 [sp + 0x10] = s0
   561: u64 [sp + 0x8] = s1
   564: s0 = a0
   566: u64 [a0] = a0
   568: s1 = 0x30008
   573: u32 [s0 + 56] = 0x2
   577: a1 = 0x30238
   582: a0 = 0x60
   585: u64 [sp + 0] = 0
   587: a2 = 0
   589: a3 = 0
   591: a4 = 0
   593: a5 = 0
   595: ra = 28, jump @1737
      : @48 [@dyn 14]
   600: a1 = a0
   602: a0 = 0
   604: u32 [s0 + 0x30] = a1
   607: a1 = s1 + 0x38
   610: u64 [s0 + 0xa8] = a1
   614: a1 = s0 + 0x88
   618: u64 [s0 + 0x88] = a1
   622: a1 = u64 [0x303c0]
   627: u64 [s0 + 0x10] = s0
   630: u64 [s0 + 0x18] = s0
   633: u64 [s0 + 0x20] = a1
   636: ra = u64 [sp + 0x18]
   639: s0 = u64 [sp + 0x10]
   642: s1 = u64 [sp + 0x8]
   645: sp = sp + 0x20
   648: ret
      : @49
   650: sp = sp + 0xffffffffffffffc8
   653: u64 [sp + 0x30] = ra
   656: u64 [sp + 0x28] = s0
   659: u64 [sp + 0x20] = s1
   662: a4 = u64 [a0 + 0x28]
   665: t1 = 0x30238
   670: s0 = 0x30008
   675: u64 [sp + 0x10] = s0
   678: jump @59 if a4 == 0
      : @50
   682: ra = 0
   684: a2 = 0
   686: a3 = u64 [a0 + 0x18]
   689: a0 = u64 [a0 + 0x20]
   692: u64 [sp + 0x18] = a1
   695: s0 = u32 [0x30228]
   700: t0 = 0x6
   703: a1 = 0x6474e551
   709: s1 = a3
   711: jump @53
      : @51
   713: a5 = u64 [s1 + 0x10]
   716: ra = a3 - a5
   719: fallthrough
      : @52
   720: a4 = a4 + 0xffffffffffffffff
   723: s1 = s1 + a0
   726: jump @57 if a4 == 0
      : @53
   729: t2 = i32 [s1]
   731: jump @51 if t2 == t0
      : @54
   734: a5 = t2 + 0xfffffffffffffff9
   737: a2 = s1 if a5 == 0
   740: jump @52 if t2 != a1
      : @55
   743: a5 = u64 [s1 + 0x28]
   746: jump @52 if s0 >=u a5
      : @56
   749: s0 = 0x800000
   755: s0 = minu(a5, s0)
   758: u32 [0x30228] = s0
   763: jump @52
      : @57
   765: s0 = u64 [sp + 0x10]
   768: jump @59 if a2 == 0
      : @58
   771: a1 = t1 + 0x8
   774: a3 = u64 [a2 + 0x10]
   777: a5 = u64 [a2 + 0x20]
   780: a0 = u64 [a2 + 0x28]
   783: a4 = u64 [a2 + 0x30]
   786: ra = ra + a3
   789: u64 [t1 + 0x10] = ra
   792: u64 [t1 + 0x18] = a5
   795: u64 [t1 + 0x28] = a4
   798: u64 [s0 + 0x10] = a1
   801: u64 [s0 + 40] = 0x1
   805: jump @60
      : @59
   807: ra = u64 [t1 + 0x10]
   810: a0 = u64 [t1 + 0x20]
   813: a4 = u64 [t1 + 0x28]
   816: fallthrough
      : @60
   817: ra = ra + a0
   820: a1 = a4 + 0xffffffffffffffff
   823: a2 = -ra
   825: a1 = a1 & a2
   828: a0 = a0 + a1
   831: u64 [t1 + 0x20] = a0
   834: u64 [t1 + 0x30] = a0
   837: jump @62 if a4 >u 7
      : @61
   841: a4 = 0x8
   844: u64 [t1 + 0x28] = a4
   847: fallthrough
      : @62
   848: a0 = a0 + a4
   851: a2 = a0 + 0xdf
   855: a2 = a2 & 0xfffffffffffffff8
   858: u64 [s0 + 0x18] = a2
   861: u64 [s0 + 0x20] = a4
   864: jump @65 if a2 <u 337
      : @63
   869: a0 = 0xde
   873: a3 = 0x3
   876: a4 = 0x22
   879: a5 = 0xffffffffffffffff
   882: u64 [sp + 0] = 0
   884: a1 = 0
   886: ra = 30, jump @1737
      : @64 [@dyn 15]
   891: a2 = u64 [s0 + 0x18]
   894: a4 = u64 [s0 + 0x20]
   897: jump @66
      : @65
   899: a0 = t1 + 0x38
   902: fallthrough
      : @66
   903: s1 = u64 [s0 + 0x10]
   906: u64 [sp + 0x8] = a0
   909: a2 = a2 + a0
   912: a0 = a2 + 0xffffffffffffff38
   916: a1 = -a4
   918: a0 = a0 & a1
   921: jump @70 if s1 == 0
      : @67
   924: s0 = u64 [sp + 0x8]
   927: s0 = s0 + 0x8
   930: u64 [sp + 0x18] = a0
   933: fallthrough
      : @68
   934: a1 = u64 [s1 + 0x28]
   937: a1 = a0 - a1
   940: a1 = a1 + 0x7ff
   944: a1 = a1 + 0x1
   947: u64 [s0] = a1
   949: a3 = u64 [s1 + 0x28]
   952: a1 = u64 [s1 + 0x8]
   955: a2 = u64 [s1 + 0x10]
   958: a0 = a0 - a3
   961: ra = 32, jump @1272
      : @69 [@dyn 16]
   966: a0 = u64 [sp + 0x18]
   969: s1 = u64 [s1]
   971: s0 = s0 + 0x8
   974: jump @68 if s1 != 0
      : @70
   977: s0 = u64 [sp + 0x10]
   980: a2 = u64 [s0 + 0x28]
   983: a1 = u64 [sp + 0x8]
   986: u64 [a1] = a2
   988: u64 [a0] = a0
   990: u64 [a0 + 0x8] = a1
   993: s1 = a0
   995: u32 [s1 + 56] = 0x2
   999: a1 = 0x30238
  1004: a0 = 0x60
  1007: u64 [sp + 0] = 0
  1009: a2 = 0
  1011: a3 = 0
  1013: a4 = 0
  1015: a5 = 0
  1017: ra = 34, jump @1737
      : @71 [@dyn 17]
  1022: u32 [s1 + 0x30] = a0
  1025: a0 = s0 + 0x38
  1028: a1 = s1 + 0x88
  1032: u64 [s1 + 0xa8] = a0
  1036: u64 [s1 + 0x88] = a1
  1040: a0 = u64 [0x303c0]
  1045: u64 [s1 + 0x10] = s1
  1048: u64 [s1 + 0x18] = s1
  1051: u64 [s1 + 0x20] = a0
  1054: ra = u64 [sp + 0x30]
  1057: s0 = u64 [sp + 0x28]
  1060: s1 = u64 [sp + 0x20]
  1063: sp = sp + 0x38
  1066: ret
      : @72 [@dyn 18]
  1068: ret
      : @73
  1070: sp = sp + 0xffffffffffffffe8
  1073: u64 [sp + 0x10] = ra
  1076: u64 [sp + 0x8] = s0
  1079: u64 [sp] = s1
  1081: a0 = 0x30230
  1086: s0 = 0x30230
  1091: jump @76 if s0 >=u a0
      : @74
  1094: a1 = u64 [a0 + 0xfffffffffffffff8]
  1097: s1 = a0 + 0xfffffffffffffff8
  1100: ra = 38, jump [a1]
      : @75 [@dyn 19]
  1104: a0 = s1
  1106: jump @74 if s0 <u s1
      : @76
  1109: ra = u64 [sp + 0x10]
  1112: s0 = u64 [sp + 0x8]
  1115: s1 = u64 [sp]
  1117: sp = sp + 0x18
  1120: ret
      : @77 [@dyn 20]
  1122: ra = 0x2a
  1125: sp = sp + 0xfffffffffffffff0
  1128: u64 [sp + 0x8] = ra
  1131: u64 [sp] = s0
  1133: ra = 0x58
  1136: sp = sp + 0xfffffffffffffff0
  1139: u64 [sp + 0x8] = ra
  1142: u64 [sp] = s0
  1144: s0 = 0x303f0
  1149: a0 = 0x303f0
  1154: ra = 0x70
  1157: jump @1355
      : @78 [@dyn 21]
  1160: a0 = s0
  1162: ra = 44, jump @79
      : @79 [@dyn 22]
  1166: sp = sp + 0xffffffffffffffe8
  1169: u64 [sp + 0x10] = ra
  1172: u64 [sp + 0x8] = s0
  1175: s0 = a0
  1177: a0 = 0x5e
  1180: u64 [sp + 0] = 0
  1182: a1 = s0
  1184: a2 = 0
  1186: a3 = 0
  1188: a4 = 0
  1190: a5 = 0
  1192: ra = 46, jump @1737
      : @80 [@dyn 23]
  1197: a0 = 0x5d
  1200: u64 [sp + 0] = 0
  1202: a1 = s0
  1204: a2 = 0
  1206: a3 = 0
  1208: a4 = 0
  1210: a5 = 0
  1212: ra = 48, jump @1737
      : @81 [@dyn 24]
  1217: jump @80
      : @82
  1219: sp = sp + 0xffffffffffffffc0
  1222: u64 [sp + 0x8] = ra
  1225: t0 = a0
  1227: u64 [sp + 0x38] = a5
  1230: u64 [sp + 0x18] = a1
  1233: u64 [sp + 0x20] = a2
  1236: u64 [sp + 0x28] = a3
  1239: u64 [sp + 0x30] = a4
  1242: a0 = sp + 0x18
  1245: u64 [sp] = a0
  1247: a0 = 0x30138
  1252: a2 = sp + 0x18
  1255: a1 = t0
  1257: ra = 50, jump @250
      : @83 [@dyn 25]
  1262: ra = u64 [sp + 0x8]
  1265: sp = sp + 0x40
  1268: ret
      : @84
  1270: sp = sp + 0xffffffffffffffe0
  1273: u64 [sp + 0x18] = ra
  1276: u64 [sp + 0x10] = s0
  1279: u64 [sp + 0x8] = s1
  1282: a1 = i32 [0x301c4]
  1287: jump @87 if a1 <s 0
      : @85
  1290: s0 = a0
  1292: a0 = 0x30138
  1297: ra = 52, jump @100
      : @86 [@dyn 26]
  1302: a1 = a0
  1304: a0 = s0
  1306: a1 = a1 <u 0x1
  1309: jump @88
      : @87
  1311: a1 = 0x1
  1314: fallthrough
      : @88
  1315: u64 [sp] = a1
  1317: s1 = 0x30138
  1322: a1 = 0x30138
  1327: ra = 0x36
  1330: sp = sp + 0xffffffffffffffe0
  1333: u64 [sp + 0x18] = ra
  1336: u64 [sp + 0x10] = s0
  1339: u64 [sp + 0x8] = s1
  1342: u64 [sp] = a1
  1344: s1 = a0
  1346: ra = 0x46
  1349: jump @1324
      : @89 [@dyn 27]
  1352: jump @98 if a0 <s 0
      : @90
  1355: a0 = i32 [s1 + 0x90]
  1359: jump @94 if a0 == 10
      : @91
  1363: a1 = u64 [s1 + 0x20]
  1366: a0 = u64 [s1 + 0x28]
  1369: jump @94 if a0 == a1
      : @92
  1372: s0 = 0
  1374: a1 = a0 + 0x1
  1377: u64 [s1 + 0x28] = a1
  1380: a1 = 0xa
  1383: u8 [a0] = a1
  1385: a0 = u64 [sp]
  1387: jump @96 if a0 == 0
      : @93
  1390: jump @97
      : @94
  1392: a0 = 0x30138
  1397: a1 = 0xa
  1400: ra = 56, jump @208
      : @95 [@dyn 28]
  1405: s0 = a0 >>a 0x1f
  1408: a0 = u64 [sp]
  1410: jump @97 if a0 != 0
      : @96
  1413: a0 = 0x30138
  1418: ra = 58, jump @129
      : @97 [@dyn 29]
  1423: a0 = s0
  1425: ra = u64 [sp + 0x18]
  1428: s0 = u64 [sp + 0x10]
  1431: s1 = u64 [sp + 0x8]
  1434: sp = sp + 0x20
  1437: ret
      : @98
  1439: s0 = 0xffffffffffffffff
  1442: a0 = u64 [sp]
  1444: jump @96 if a0 == 0
      : @99
  1447: jump @97
      : @100
  1449: sp = sp + 0xffffffffffffffd0
  1452: u64 [sp + 0x28] = ra
  1455: u64 [sp + 0x20] = s0
  1458: u64 [sp + 0x18] = s1
  1461: s0 = a0
  1463: s1 = i32 [a0 + 0x8c]
  1467: ra = 0x3c
  1470: a0 = 0x30070
  1475: fallthrough
      : @101 [@dyn 30]
  1476: a1 = i32 [a0 + 0x30]
  1479: a0 = 0x40000000
  1485: a0 = s1 & ~a0
  1488: jump @103 if a0 != a1
      : @102
  1491: a0 = 0
  1493: jump @128
      : @103
  1496: s0 = s0 + 0x8c
  1500: fallthrough
      : @104
  1501: a2 = i32 [s0]
  1503: jump @106 if a2 != 0
      : @105
  1506: u32 [s0] = a1
  1508: a3 = 0
  1510: fallthrough
      : @106
  1511: i32 a2 = a2 + 0
  1513: a0 = 0x1
  1516: jump @128 if a2 == 0
      : @107
  1520: a2 = 0
  1522: a3 = a1 | 0x40000000
  1528: u64 [sp + 0x10] = a3
  1531: fallthrough
      : @108
  1532: s1 = i32 [s0]
  1534: jump @110 if s1 != 0
      : @109
  1537: u32 [s0] = a3
  1539: fallthrough
      : @110
  1540: i32 a1 = s1 + 0
  1542: jump @128 if a1 == 0
      : @111
  1545: u64 [sp + 8] = 0
  1548: jump @116
      : @112
  1550: a1 = u64 [sp + 0x10]
  1553: a2 = u64 [sp + 0x8]
  1556: fallthrough
      : @113
  1557: s1 = i32 [s0]
  1559: jump @115 if s1 != a2
      : @114
  1562: u32 [s0] = a1
  1564: fallthrough
      : @115
  1565: i32 a0 = s1 + 0
  1567: jump @127 if a0 == 0
      : @116
  1570: a0 = s1 << 0x21
  1573: jump @122 if a0 <s 0
      : @117
  1576: a0 = s1 | 0x40000000
  1582: i32 a1 = s1 + 0
  1584: i32 s1 = a0 + 0
  1586: fallthrough
      : @118
  1587: a0 = i32 [s0]
  1589: jump @120 if a0 != a1
      : @119
  1592: u32 [s0] = s1
  1594: fallthrough
      : @120
  1595: i32 a0 = a0 + 0
  1597: jump @112 if a0 != a1
      : @121
  1600: jump @123
      : @122
  1602: i32 s1 = s1 + 0
  1604: fallthrough
      : @123
  1605: a0 = 0x62
  1608: a2 = 0x80
  1612: u64 [sp + 0] = 0
  1614: a1 = s0
  1616: a3 = s1
  1618: a4 = 0
  1620: a5 = 0
  1622: ra = 62, jump @1737
      : @124 [@dyn 31]
  1627: jump @112 if a0 != 4294967258
      : @125
  1631: a0 = 0x62
  1634: u64 [sp + 0] = 0
  1636: a1 = s0
  1638: a2 = 0
  1640: a3 = s1
  1642: a4 = 0
  1644: a5 = 0
  1646: ra = 64, jump @1737
      : @126 [@dyn 32]
  1651: jump @112
      : @127
  1653: a0 = 0x1
  1656: fallthrough
      : @128
  1657: ra = u64 [sp + 0x28]
  1660: s0 = u64 [sp + 0x20]
  1663: s1 = u64 [sp + 0x18]
  1666: sp = sp + 0x30
  1669: ret
      : @129
  1671: sp = sp + 0xffffffffffffffe8
  1674: u64 [sp + 0x10] = ra
  1677: u64 [sp + 0x8] = s0
  1680: a1 = 0
  1682: s0 = a0 + 0x8c
  1686: a0 = i32 [s0]
  1688: jump @131
      : @130
  1690: a0 = i32 [s0]
  1692: fallthrough
      : @131
  1693: a2 = i32 [s0]
  1695: jump @133 if a2 != a0
      : @132
  1698: u32 [s0] = a1
  1700: a3 = 0
  1702: fallthrough
      : @133
  1703: i32 a2 = a2 + 0
  1705: jump @130 if a2 != a0
      : @134
  1708: a0 = a0 << 0x21
  1711: jump @138 if a0 >=s 0
      : @135
  1714: a0 = 0x62
  1717: a2 = 0x81
  1721: a3 = 0x1
  1724: u64 [sp + 0] = 0
  1726: a1 = s0
  1728: a4 = 0
  1730: a5 = 0
  1732: ra = 66, jump @1737
      : @136 [@dyn 33]
  1737: a1 = 0xffffffffffffffda
  1740: jump @138 if a0 != a1
      : @137
  1743: a0 = 0x62
  1746: a2 = 0x1
  1749: a3 = 0x1
  1752: u64 [sp + 0] = 0
  1754: a1 = s0
  1756: a4 = 0
  1758: a5 = 0
  1760: ra = 68, jump @1737
      : @138 [@dyn 34]
  1765: ra = u64 [sp + 0x10]
  1768: s0 = u64 [sp + 0x8]
  1771: sp = sp + 0x18
  1774: ret
      : @139 [@dyn 35]
  1776: s0 = a0
  1778: a0 = s1
  1780: a2 = s0
  1782: a3 = u64 [sp]
  1784: ra = 72, jump @161
      : @140 [@dyn 36]
  1789: a0 = a0 ^ s0
  1792: a0 = a0 <u 0x1
  1795: a0 = a0 + 0xffffffffffffffff
  1798: ra = u64 [sp + 0x18]
  1801: s0 = u64 [sp + 0x10]
  1804: s1 = u64 [sp + 0x8]
  1807: sp = sp + 0x20
  1810: ret
      : @141
  1812: sp = sp + 0xffffffffffffffd0
  1815: u64 [sp + 0x28] = ra
  1818: u64 [sp + 0x20] = s0
  1821: u64 [sp + 0x18] = s1
  1824: s1 = a2
  1826: s0 = a1
  1828: a1 = u64 [a2 + 0x20]
  1831: t0 = a0
  1833: jump @150 if a1 == 0
      : @142
  1836: a0 = u64 [s1 + 0x28]
  1839: a1 = a1 - a0
  1842: jump @144 if a1 >=u s0
      : @143
  1845: a5 = u64 [s1 + 0x48]
  1848: a0 = s1
  1850: a1 = t0
  1852: a2 = s0
  1854: ra = u64 [sp + 0x28]
  1857: s0 = u64 [sp + 0x20]
  1860: s1 = u64 [sp + 0x18]
  1863: sp = sp + 0x30
  1866: jump [a5]
      : @144
  1868: a1 = i32 [s1 + 0x90]
  1872: jump @153 if a1 <s 0
      : @145
  1875: jump @153 if s0 == 0
      : @146
  1878: a5 = s1
  1880: s1 = 0
  1882: a4 = t0 + s0
  1885: a1 = 0xffffffffffffffff
  1888: a2 = 0xa
  1891: fallthrough
      : @147
  1892: a3 = a4 + a1
  1895: a3 = u8 [a3]
  1897: jump @155 if a3 == a2
      : @148
  1900: s1 = s1 + 0x1
  1903: a1 = a1 + 0xffffffffffffffff
  1906: jump @147 if s0 != s1
      : @149
  1909: u64 [sp + 16] = 0
  1912: s1 = a5
  1914: jump @158
      : @150
  1916: u64 [sp + 0x10] = t0
  1919: a0 = s1
  1921: ra = 74, jump @173
      : @151 [@dyn 37]
  1926: jump @154 if a0 == 0
      : @152
  1929: a0 = 0
  1931: jump @160
      : @153
  1933: u64 [sp + 16] = 0
  1936: jump @158
      : @154
  1938: a1 = u64 [s1 + 0x20]
  1941: t0 = u64 [sp + 0x10]
  1944: jump @142
      : @155
  1946: u64 [sp + 0x8] = a4
  1949: a0 = a5
  1951: a3 = u64 [a5 + 0x48]
  1954: s0 = s0 - s1
  1957: u64 [sp] = a5
  1959: a1 = t0
  1961: a2 = s0
  1963: ra = 76, jump [a3]
      : @156 [@dyn 38]
  1967: jump @160 if a0 <u s0
      : @157
  1970: u64 [sp + 0x10] = s0
  1973: a2 = u64 [sp]
  1975: a0 = u64 [a2 + 0x28]
  1978: a1 = u64 [sp + 0x8]
  1981: t0 = a1 - s1
  1984: s0 = s1
  1986: s1 = a2
  1988: fallthrough
      : @158
  1989: a1 = t0
  1991: a2 = s0
  1993: ra = 78, jump @1272
      : @159 [@dyn 39]
  1998: a0 = u64 [s1 + 0x28]
  2001: a0 = a0 + s0
  2004: u64 [s1 + 0x28] = a0
  2007: a0 = u64 [sp + 0x10]
  2010: a0 = a0 + s0
  2013: fallthrough
      : @160
  2014: ra = u64 [sp + 0x28]
  2017: s0 = u64 [sp + 0x20]
  2020: s1 = u64 [sp + 0x18]
  2023: sp = sp + 0x30
  2026: ret
      : @161
  2028: sp = sp + 0xffffffffffffffc8
  2031: u64 [sp + 0x30] = ra
  2034: u64 [sp + 0x28] = s0
  2037: u64 [sp + 0x20] = s1
  2040: s1 = a3
  2042: a3 = a0
  2044: a0 = i32 [s1 + 0x8c]
  2048: u64 [sp + 24] = 0x1
  2052: u64 [sp + 0x10] = a2
  2055: s0 = a2 * 0x1
  2058: jump @169 if a0 <s 0
      : @162
  2061: a0 = s1
  2063: u64 [sp + 0x8] = a3
  2066: ra = 80, jump @100
      : @163 [@dyn 40]
  2071: u64 [sp] = a0
  2073: a0 = u64 [sp + 0x8]
  2076: u64 [sp + 0x8] = s0
  2079: a1 = s0
  2081: a2 = s1
  2083: ra = 82, jump @141
      : @164 [@dyn 41]
  2088: a1 = a0
  2090: a0 = u64 [sp]
  2092: jump @167 if a0 == 0
      : @165
  2095: a0 = s1
  2097: s0 = a1
  2099: ra = 84, jump @129
      : @166 [@dyn 42]
  2104: a1 = s0
  2106: fallthrough
      : @167
  2107: s0 = u64 [sp + 0x8]
  2110: jump @171 if a1 != s0
      : @168
  2113: a0 = u64 [sp + 0x18]
  2116: a1 = u64 [sp + 0x10]
  2119: a1 = 0 if a0 == 0
  2121: a0 = a1
  2123: jump @172
      : @169
  2125: a0 = a3
  2127: a1 = s0
  2129: a2 = s1
  2131: ra = 86, jump @141
      : @170 [@dyn 43]
  2136: a1 = a0
  2138: jump @168 if a0 == s0
      : @171
  2141: a0 = u64 [sp + 0x18]
  2144: a0 = a1 /u a0
  2147: fallthrough
      : @172
  2148: ra = u64 [sp + 0x30]
  2151: s0 = u64 [sp + 0x28]
  2154: s1 = u64 [sp + 0x20]
  2157: sp = sp + 0x38
  2160: ret
      : @173
  2162: a2 = i32 [a0 + 0x88]
  2166: a1 = u32 [a0]
  2168: a3 = a2 + 0xffffffffffffffff
  2171: a2 = a2 | a3
  2174: a3 = a1 & 0x8
  2177: u32 [a0 + 0x88] = a2
  2181: jump @175 if a3 != 0
      : @174
  2184: a2 = u64 [a0 + 0x58]
  2187: a3 = u64 [a0 + 0x60]
  2190: u64 [a0 + 0x38] = a2
  2193: a3 = a3 + a2
  2196: u64 [a0 + 8] = 0
  2199: u64 [a0 + 16] = 0
  2202: u64 [a0 + 0x20] = a3
  2205: u64 [a0 + 0x28] = a2
  2208: a0 = 0
  2210: ret
      : @175
  2212: a1 = a1 | 0x20
  2215: u32 [a0] = a1
  2217: a0 = 0xffffffffffffffff
  2220: ret
      : @176 [@dyn 44]
  2222: s0 = u64 [a0]
  2224: jump @199 if s0 != 0
      : @177
  2228: s0 = u64 [0x303e8]
  2233: jump @184 if s0 == 0
      : @178
  2236: a0 = i32 [s0 + 0x8c]
  2240: jump @180 if a0 <s 0
      : @179
  2243: a0 = s0
  2245: ra = 90, jump @100
      : @180 [@dyn 45]
  2250: a0 = u64 [s0 + 0x28]
  2253: a1 = u64 [s0 + 0x38]
  2256: jump @182 if a0 == a1
      : @181
  2259: a3 = u64 [s0 + 0x48]
  2262: a0 = s0
  2264: a1 = 0
  2266: a2 = 0
  2268: ra = 92, jump [a3]
      : @182 [@dyn 46]
  2272: a0 = u64 [s0 + 0x8]
  2275: a1 = u64 [s0 + 0x10]
  2278: jump @184 if a0 == a1
      : @183
  2281: a3 = u64 [s0 + 0x50]
  2284: a1 = a0 - a1
  2287: a2 = 0x1
  2290: a0 = s0
  2292: ra = 94, jump [a3]
      : @184 [@dyn 47]
  2296: s0 = u64 [0x30220]
  2301: jump @191 if s0 == 0
      : @185
  2304: a0 = i32 [s0 + 0x8c]
  2308: jump @187 if a0 <s 0
      : @186
  2311: a0 = s0
  2313: ra = 96, jump @100
      : @187 [@dyn 48]
  2318: a0 = u64 [s0 + 0x28]
  2321: a1 = u64 [s0 + 0x38]
  2324: jump @189 if a0 == a1
      : @188
  2327: a3 = u64 [s0 + 0x48]
  2330: a0 = s0
  2332: a1 = 0
  2334: a2 = 0
  2336: ra = 98, jump [a3]
      : @189 [@dyn 49]
  2340: a0 = u64 [s0 + 0x8]
  2343: a1 = u64 [s0 + 0x10]
  2346: jump @191 if a0 == a1
      : @190
  2349: a3 = u64 [s0 + 0x50]
  2352: a1 = a0 - a1
  2355: a2 = 0x1
  2358: a0 = s0
  2360: ra = 100, jump [a3]
      : @191 [@dyn 50]
  2364: s0 = u64 [0x303e8]
  2369: jump @206 if s0 == 0
      : @192
  2373: a0 = i32 [s0 + 0x8c]
  2377: jump @194 if a0 <s 0
      : @193
  2380: a0 = s0
  2382: ra = 102, jump @100
      : @194 [@dyn 51]
  2387: a0 = u64 [s0 + 0x28]
  2390: a1 = u64 [s0 + 0x38]
  2393: jump @196 if a0 == a1
      : @195
  2396: a3 = u64 [s0 + 0x48]
  2399: a0 = s0
  2401: a1 = 0
  2403: a2 = 0
  2405: ra = 104, jump [a3]
      : @196 [@dyn 52]
  2409: a0 = u64 [s0 + 0x8]
  2412: a1 = u64 [s0 + 0x10]
  2415: jump @206 if a0 == a1
      : @197
  2418: a5 = u64 [s0 + 0x50]
  2421: a1 = a0 - a1
  2424: a2 = 0x1
  2427: a0 = s0
  2429: ra = u64 [sp + 0x8]
  2432: s0 = u64 [sp]
  2434: sp = sp + 0x10
  2437: jump [a5]
      : @198
  2439: s0 = u64 [s0 + 0x70]
  2442: jump @177 if s0 == 0
      : @199
  2446: a0 = i32 [s0 + 0x8c]
  2450: jump @201 if a0 <s 0
      : @200
  2453: a0 = s0
  2455: ra = 106, jump @100
      : @201 [@dyn 53]
  2460: a0 = u64 [s0 + 0x28]
  2463: a1 = u64 [s0 + 0x38]
  2466: jump @203 if a0 == a1
      : @202
  2469: a3 = u64 [s0 + 0x48]
  2472: a0 = s0
  2474: a1 = 0
  2476: a2 = 0
  2478: ra = 108, jump [a3]
      : @203 [@dyn 54]
  2482: a0 = u64 [s0 + 0x8]
  2485: a1 = u64 [s0 + 0x10]
  2488: jump @198 if a0 == a1
      : @204
  2491: a3 = u64 [s0 + 0x50]
  2494: a1 = a0 - a1
  2497: a2 = 0x1
  2500: a0 = s0
  2502: ra = 110, jump [a3]
      : @205 [@dyn 55]
  2506: jump @198
      : @206
  2508: ra = u64 [sp + 0x8]
  2511: s0 = u64 [sp]
  2513: sp = sp + 0x10
  2516: ret
      : @207 [@dyn 56]
  2518: a0 = s0 + 0x8
  2521: ra = u64 [sp + 0x8]
  2524: s0 = u64 [sp]
  2526: sp = sp + 0x10
  2529: ret
      : @208
  2531: sp = sp + 0xffffffffffffffe0
  2534: u64 [sp + 0x18] = ra
  2537: u64 [sp + 0x10] = s0
  2540: u64 [sp + 0x8] = s1
  2543: a3 = u64 [0x30158]
  2548: u8 [sp + 7] = 0xa
  2552: jump @214 if a3 == 0
      : @209
  2555: a2 = u64 [0x30160]
  2560: jump @211 if a2 == a3
      : @210
  2563: a4 = i32 [a0 + 0x90]
  2567: a5 = a1 & 0xff
  2571: jump @217 if a4 != a5
      : @211
  2574: a3 = u64 [a0 + 0x48]
  2577: a1 = sp + 0x7
  2580: a2 = 0x1
  2583: s0 = 0x1
  2586: ra = 114, jump [a3]
      : @212 [@dyn 57]
  2590: jump @216 if a0 != s0
      : @213
  2593: a0 = u8 [sp + 0x7]
  2596: jump @218
      : @214
  2598: s0 = 0xa
  2601: s1 = 0x30138
  2606: ra = 116, jump @173
      : @215 [@dyn 58]
  2611: jump @219 if a0 == 0
      : @216
  2614: a0 = 0xffffffffffffffff
  2617: jump @218
      : @217
  2619: a4 = a2 + 0x1
  2622: u64 [a0 + 0x28] = a4
  2625: u8 [a2] = a1
  2627: a0 = a5
  2629: fallthrough
      : @218
  2630: ra = u64 [sp + 0x18]
  2633: s0 = u64 [sp + 0x10]
  2636: s1 = u64 [sp + 0x8]
  2639: sp = sp + 0x20
  2642: ret
      : @219
  2644: a0 = s1
  2646: a3 = u64 [s1 + 0x20]
  2649: a1 = s0
  2651: a2 = u64 [s1 + 0x28]
  2654: jump @210 if a2 != a3
      : @220
  2657: jump @211
      : @221
  2659: sp = sp + 0xffffffffffffffd0
  2662: u64 [sp + 0x8] = ra
  2665: u64 [sp + 0x18] = a3
  2668: u64 [sp + 0x20] = a4
  2671: u64 [sp + 0x28] = a5
  2674: a3 = sp + 0x18
  2677: u64 [sp] = a3
  2679: ra = 0x76
  2682: sp = sp + 0xfffffffffffffee0
  2686: u64 [sp + 0x118] = ra
  2690: u64 [sp + 0x110] = s0
  2694: u64 [sp + 0x108] = s1
  2698: u64 [sp] = a3
  2700: s1 = a2
  2702: s0 = sp + 0x106
  2706: s0 = a0 if a1 != 0
  2709: a0 = 0x1
  2712: a0 = maxu(a1, a0)
  2715: a0 = a0 + 0xffffffffffffffff
  2718: u64 [sp + 0xf0] = s0
  2722: u64 [sp + 0xf8] = a0
  2726: a0 = sp + 0x8
  2729: a2 = 0xe8
  2733: a1 = 0
  2735: ra = 0x1cc
  2739: jump @1314
      : @222 [@dyn 59]
  2742: ra = u64 [sp + 0x8]
  2745: sp = sp + 0x30
  2748: ret
      : @223 [@dyn 60]
  2750: sp = sp + 0xfffffffffffffff0
  2753: u64 [sp + 0x8] = ra
  2756: a0 = i32 [a0 + 0x78]
  2759: a1 = a0
  2761: a0 = 0x39
  2764: u64 [sp + 0] = 0
  2766: a2 = 0
  2768: a3 = 0
  2770: a4 = 0
  2772: a5 = 0
  2774: ra = 122, jump @1737
      : @224 [@dyn 61]
  2779: ra = 124, jump @226
      : @225 [@dyn 62]
  2783: i32 a0 = a0 + 0
  2785: ra = u64 [sp + 0x8]
  2788: sp = sp + 0x10
  2791: ret
      : @226
  2793: a1 = 0xfffffffffffff001
  2797: jump @229 if a0 <u a1
      : @227
  2800: sp = sp + 0xfffffffffffffff0
  2803: u64 [sp + 0x8] = ra
  2806: u64 [sp] = s0
  2808: i32 s0 = -a0
  2810: ra = 126, jump @230
      : @228 [@dyn 63]
  2814: u32 [a0] = s0
  2816: a0 = 0xffffffffffffffff
  2819: ra = u64 [sp + 0x8]
  2822: s0 = u64 [sp]
  2824: sp = sp + 0x10
  2827: ret
      : @229
  2829: ret
      : @230
  2831: sp = sp + 0xfffffffffffffff8
  2834: u64 [sp] = ra
  2836: a0 = 0x30070
  2841: a0 = a0 + 0x34
  2844: ra = u64 [sp]
  2846: sp = sp + 0x8
  2849: ret
      : @231 [@dyn 64]
  2851: sp = sp + 0xffffffffffffffd0
  2854: u64 [sp + 0x28] = ra
  2857: u64 [sp + 0x20] = s0
  2860: u64 [sp + 0x18] = s1
  2863: a3 = u8 [a0]
  2865: a4 = 0x86
  2869: a3 = a3 & 0x40
  2872: u64 [a0 + 0x48] = a4
  2875: jump @235 if a3 != 0
      : @232
  2878: a4 = i32 [a0 + 0x78]
  2881: u64 [sp + 0x8] = a0
  2884: a0 = 0x1d
  2887: a3 = sp + 0x10
  2890: u64 [sp + 0] = 0
  2892: s1 = a1
  2894: a1 = a4
  2896: s0 = a2
  2898: a2 = 0x5413
  2902: a4 = 0
  2904: a5 = 0
  2906: ra = 130, jump @1737
      : @233 [@dyn 65]
  2912: a1 = s1
  2914: a2 = s0
  2916: a3 = a0
  2918: a0 = u64 [sp + 0x8]
  2921: jump @235 if a3 == 0
      : @234
  2924: u32 [a0 + 144] = 0xffffffffffffffff
  2929: ra = 0x84
  2933: jump @237
      : @235
  2935: ra = 132, jump @237
      : @236 [@dyn 66]
  2940: ra = u64 [sp + 0x28]
  2943: s0 = u64 [sp + 0x20]
  2946: s1 = u64 [sp + 0x18]
  2949: sp = sp + 0x30
  2952: ret
      : @237 [@dyn 67]
  2954: sp = sp + 0xffffffffffffffa8
  2957: u64 [sp + 0x50] = ra
  2960: u64 [sp + 0x48] = s0
  2963: u64 [sp + 0x40] = s1
  2966: s0 = a2
  2968: a3 = u64 [a0 + 0x28]
  2971: a2 = u64 [a0 + 0x38]
  2974: u64 [sp + 0x10] = a0
  2977: a4 = i32 [a0 + 0x78]
  2980: a0 = a3 - a2
  2983: u64 [sp + 0x20] = a2
  2986: u64 [sp + 0x28] = a0
  2989: u64 [sp + 0x30] = a1
  2992: u64 [sp + 0x38] = s0
  2995: u64 [sp + 0x8] = s0
  2998: s1 = a0 + s0
  3001: u64 [sp + 0] = 0
  3003: a0 = 0x42
  3006: a2 = sp + 0x20
  3009: a3 = 0x2
  3012: u64 [sp + 0x18] = a3
  3015: a1 = a4
  3017: a4 = 0
  3019: a5 = 0
  3021: ra = 136, jump @1737
      : @238 [@dyn 68]
  3027: ra = 138, jump @226
      : @239 [@dyn 69]
  3033: s0 = sp + 0x20
  3036: jump @245 if a0 == s1
      : @240
  3039: a5 = s1
  3041: fallthrough
      : @241
  3042: jump @247 if a0 <s 0
      : @242
  3046: a1 = u64 [s0 + 0x8]
  3049: a2 = a1 <u a0
  3052: s1 = a2 << 0x4
  3055: t1 = s0 + s1
  3058: a3 = u64 [t1]
  3060: a1 = 0 if a2 == 0
  3062: a4 = a0 - a1
  3065: a3 = a3 + a4
  3068: u64 [t1] = a3
  3070: a1 = 0x18
  3073: a1 = 0x8 if a2 == 0
  3076: s0 = s0 + a1
  3079: t0 = u64 [s0]
  3081: s1 = a5 - a0
  3084: a0 = u64 [sp + 0x10]
  3087: a1 = i32 [a0 + 0x78]
  3090: a3 = u64 [sp + 0x18]
  3093: i32 a3 = a3 - a2
  3096: a5 = t0 - a4
  3099: u64 [s0] = a5
  3101: a0 = 0x42
  3104: u64 [sp + 0] = 0
  3106: s0 = t1
  3108: a2 = t1
  3110: u64 [sp + 0x18] = a3
  3113: a4 = 0
  3115: a5 = 0
  3117: ra = 140, jump @1737
      : @243 [@dyn 70]
  3123: ra = 142, jump @226
      : @244 [@dyn 71]
  3129: a5 = s1
  3131: jump @241 if a0 != s1
      : @245
  3134: a2 = u64 [sp + 0x10]
  3137: a0 = u64 [a2 + 0x58]
  3140: a1 = u64 [a2 + 0x60]
  3143: a1 = a1 + a0
  3146: u64 [a2 + 0x20] = a1
  3149: u64 [a2 + 0x28] = a0
  3152: u64 [a2 + 0x38] = a0
  3155: a0 = u64 [sp + 0x8]
  3158: fallthrough
      : @246
  3159: ra = u64 [sp + 0x50]
  3162: s0 = u64 [sp + 0x48]
  3165: s1 = u64 [sp + 0x40]
  3168: sp = sp + 0x58
  3171: ret
      : @247
  3173: a0 = 0
  3175: a3 = u64 [sp + 0x10]
  3178: a1 = i32 [a3]
  3180: a2 = 0x2
  3183: a1 = a1 | 0x20
  3186: u32 [a3] = a1
  3188: u64 [a3 + 32] = 0
  3191: u64 [a3 + 40] = 0
  3194: u64 [a3 + 56] = 0
  3197: a1 = u64 [sp + 0x18]
  3200: jump @246 if a1 == a2
      : @248
  3203: a0 = u64 [s0 + 0x8]
  3206: a1 = u64 [sp + 0x8]
  3209: a0 = a1 - a0
  3212: jump @246
      : @249 [@dyn 72]
  3214: a0 = i32 [a0 + 0x78]
  3217: sp = sp + 0xfffffffffffffff0
  3220: u64 [sp + 0x8] = ra
  3223: a3 = a2
  3225: a2 = a1
  3227: a1 = a0
  3229: a0 = 0x3e
  3232: u64 [sp + 0] = 0
  3234: a4 = 0
  3236: a5 = 0
  3238: ra = 0x1dc
  3242: jump @1737
      : @250
  3245: sp = sp + 0xfffffffffffffe90
  3249: u64 [sp + 0x168] = ra
  3253: u64 [sp + 0x160] = s0
  3257: u64 [sp + 0x158] = s1
  3261: s0 = sp + 0x170
  3265: sp = sp & 0xfffffffffffffff0
  3268: s1 = a0
  3270: u64 [sp + 0x150] = a2
  3274: u64 [sp + 320] = 0
  3278: u64 [sp + 288] = 0
  3282: u64 [sp + 296] = 0
  3286: u64 [sp + 304] = 0
  3290: u64 [sp + 312] = 0
  3294: u64 [sp + 0x148] = a2
  3298: a2 = sp + 0x148
  3302: a3 = sp + 0x80
  3306: a4 = sp + 0x120
  3310: a0 = 0
  3312: u64 [sp + 0x18] = a1
  3315: ra = 146, jump @274
      : @251 [@dyn 73]
  3321: jump @255 if a0 <s 0
      : @252
  3324: a0 = i32 [s1 + 0x8c]
  3328: a5 = s1
  3330: u64 [sp + 0x20] = s1
  3333: jump @256 if a0 <s 0
      : @253
  3336: a0 = a5
  3338: ra = 148, jump @100
      : @254 [@dyn 74]
  3344: a5 = u64 [sp + 0x20]
  3347: a0 = a0 <u 0x1
  3350: jump @257
      : @255
  3352: s1 = 0xffffffffffffffff
  3355: jump @273
      : @256
  3358: a0 = 0x1
  3361: fallthrough
      : @257
  3362: u64 [sp + 0x10] = a0
  3365: s1 = i32 [a5]
  3367: a0 = u64 [a5 + 0x60]
  3370: a1 = s1 & 0xffffffffffffffdf
  3373: u32 [a5] = a1
  3375: jump @260 if a0 == 0
      : @258
  3378: a0 = u64 [a5 + 0x20]
  3381: u64 [sp + 40] = 0
  3384: jump @265 if a0 != 0
      : @259
  3387: jump @261
      : @260
  3389: a0 = u64 [a5 + 0x58]
  3392: u64 [sp + 0x28] = a0
  3395: a0 = sp + 0x30
  3398: u64 [a5 + 32] = 0
  3401: u64 [a5 + 40] = 0
  3404: u64 [a5 + 56] = 0
  3407: u64 [a5 + 0x58] = a0
  3410: u64 [a5 + 96] = 0x50
  3414: a0 = a5
  3416: ra = 0x96
  3420: jump @173
      : @261
  3423: a0 = a5
  3425: ra = 150, jump @173
      : @262 [@dyn 75]
  3431: jump @264 if a0 == 0
      : @263
  3434: a3 = 0xffffffffffffffff
  3437: jump @267
      : @264
  3439: a5 = u64 [sp + 0x20]
  3442: fallthrough
      : @265
  3443: a2 = sp + 0x148
  3447: a3 = sp + 0x80
  3451: a4 = sp + 0x120
  3455: a0 = a5
  3457: a1 = u64 [sp + 0x18]
  3460: ra = 152, jump @274
      : @266 [@dyn 76]
  3466: a3 = a0
  3468: fallthrough
      : @267
  3469: a4 = s1 & 0x20
  3472: a0 = u64 [sp + 0x28]
  3475: jump @270 if a0 == 0
      : @268
  3478: s1 = u64 [sp + 0x20]
  3481: u64 [sp + 0x18] = a3
  3484: a3 = u64 [s1 + 0x48]
  3487: u64 [sp + 0x28] = a0
  3490: a0 = s1
  3492: a1 = 0
  3494: a2 = 0
  3496: u64 [sp + 0x8] = a4
  3499: ra = 154, jump [a3]
      : @269 [@dyn 77]
  3504: a4 = u64 [sp + 0x8]
  3507: a3 = u64 [sp + 0x18]
  3510: a0 = s1
  3512: a2 = u64 [s1 + 0x28]
  3515: u64 [s1 + 32] = 0
  3518: u64 [s1 + 40] = 0
  3521: u64 [s1 + 56] = 0
  3524: a5 = u64 [sp + 0x28]
  3527: u64 [s1 + 0x58] = a5
  3530: a3 = 0xffffffffffffffff if a2 == 0
  3533: u64 [s1 + 96] = 0
  3536: jump @271
      : @270
  3538: a0 = u64 [sp + 0x20]
  3541: fallthrough
      : @271
  3542: a2 = i32 [a0]
  3544: s1 = 0xffffffffffffffff
  3547: a1 = a2 & 0x20
  3550: a2 = a2 | a4
  3553: s1 = a3 if a1 == 0
  3556: u32 [a0] = a2
  3558: a1 = u64 [sp + 0x10]
  3561: jump @273 if a1 != 0
      : @272
  3564: ra = 156, jump @129
      : @273 [@dyn 78]
  3570: a0 = s1
  3572: sp = s0 + 0xfffffffffffffe90
  3576: ra = u64 [sp + 0x168]
  3580: s0 = u64 [sp + 0x160]
  3584: s1 = u64 [sp + 0x158]
  3588: sp = sp + 0x170
  3592: ret
      : @274
  3594: sp = sp + 0xfffffffffffffe10
  3598: u64 [sp + 0x1e8] = ra
  3602: u64 [sp + 0x1e0] = s0
  3606: u64 [sp + 0x1d8] = s1
  3610: s0 = sp + 0x1f0
  3614: sp = sp + 0xffffffffffffe220
  3618: sp = sp & 0xfffffffffffffff0
  3621: u64 [sp + 0x100] = a4
  3625: u64 [sp + 0x110] = a3
  3629: u64 [sp + 0x128] = a2
  3633: a5 = a1
  3635: u64 [sp + 0x160] = a0
  3639: u64 [sp + 304] = 0
  3643: t1 = 0
  3645: a3 = 0
  3647: u64 [sp + 288] = 0x12889
  3654: u64 [sp + 312] = 0xccccccc
  3662: a2 = 0x41b0000000000000
  3672: u64 [sp + 0xf0] = a2
  3676: a0 = 0x4020000000000000
  3686: u64 [sp + 0xf8] = a0
  3690: u64 [sp + 264] = 0xffffffffcccccccd
  3698: a0 = 0x3f8f000000000000
  3708: u64 [sp + 0xd8] = a0
  3712: a0 = 0x3fe0000000000000
  3722: u64 [sp + 0xd0] = a0
  3726: a0 = 0x3ff0000000000000
  3736: u64 [sp + 0xc0] = a0
  3740: a0 = 0x3ff8000000000000
  3750: u64 [sp + 0xb8] = a0
  3754: u64 [sp + 200] = 0x19999999
  3762: a2 = sp + 0x1f0
  3766: a0 = a2 + 0xfffffffffffefffc
  3771: u64 [sp + 0xb0] = a0
  3775: a2 = 0x3b9ad000
  3781: u64 [sp + 360] = 0x7fffffff
  3789: u64 [sp + 280] = 0x3b9aca00
  3797: u64 [sp + 232] = 0x38e38e39
  3805: a1 = 0x38e38e3900000000
  3815: u64 [sp + 0xe0] = a1
  3819: jump @276
      : @275
  3821: jump @295 if s1 == 0
      : @276 [@dyn 79]
  3825: a0 = u64 [sp + 0x168]
  3829: i32 a0 = a0 - t1
  3832: i32 a1 = a3 + 0
  3834: u64 [sp + 0x170] = a5
  3838: jump @278 if a0 >=s a1
      : @277
  3841: jump @890
      : @278
  3844: a4 = u64 [sp + 0x170]
  3848: a0 = u8 [a4]
  3850: i32 t1 = a3 + t1
  3853: jump @280 if a0 != 0
      : @279
  3856: jump @892
      : @280
  3859: a1 = a4
  3861: a3 = 0x25
  3864: jump @283 if a0 == 0
      : @281
  3867: jump @284 if a0 == a3
      : @282
  3870: a0 = u8 [a1 + 0x1]
  3873: a1 = a1 + 0x1
  3876: jump @281 if a0 != 0
      : @283
  3879: a5 = a1
  3881: a0 = a1
  3883: jump @289
      : @284
  3885: a0 = a1
  3887: fallthrough
      : @285
  3888: a2 = u8 [a1 + 0x1]
  3891: jump @288 if a2 != a3
      : @286
  3894: a2 = u8 [a1 + 0x2]
  3897: a1 = a1 + 0x2
  3900: a0 = a0 + 0x1
  3903: a5 = a1
  3905: jump @285 if a2 == a3
      : @287
  3908: jump @289
      : @288
  3910: a5 = a1
  3912: fallthrough
      : @289
  3913: a3 = a0 - a4
  3916: a0 = u64 [sp + 0x168]
  3920: i32 a0 = a0 - t1
  3923: u64 [sp + 0x158] = a0
  3927: jump @291 if a0 >=s a3
      : @290
  3930: jump @890
      : @291
  3933: i32 s1 = a3 + 0
  3935: a2 = u64 [sp + 0x160]
  3939: jump @275 if a2 == 0
      : @292
  3942: a0 = u8 [a2]
  3944: a0 = a0 & 0x20
  3947: jump @275 if a0 != 0
      : @293
  3950: a0 = u64 [sp + 0x170]
  3954: a1 = s1
  3956: u64 [sp + 0x148] = t1
  3960: u64 [sp + 0x150] = a5
  3964: u64 [sp + 0x140] = a3
  3968: ra = 160, jump @141
      : @294 [@dyn 80]
  3974: a3 = u64 [sp + 0x140]
  3978: a5 = u64 [sp + 0x150]
  3982: t1 = u64 [sp + 0x148]
  3986: jump @275
      : @295
  3989: a1 = u8 [a5 + 0x1]
  3992: ra = a5 + 0x1
  3995: a3 = a1 + 0xffffffffffffffd0
  3998: t0 = 0xffffffffffffffff
  4001: jump @298 if a3 >u 9
      : @296
  4005: a4 = u8 [a5 + 0x2]
  4008: s1 = u64 [sp + 0x120]
  4012: jump @299 if a4 != 36
      : @297
  4016: a1 = u8 [a5 + 0x3]
  4019: ra = a5 + 0x3
  4022: u64 [sp + 304] = 0x1
  4027: t0 = a3
  4029: jump @299
      : @298
  4031: s1 = u64 [sp + 0x120]
  4035: fallthrough
      : @299
  4036: a3 = a1 + 0xffffffffffffffe0
  4039: jump @305 if a3 >u 31
      : @300
  4043: a0 = 0x1
  4046: i32 a3 = a0 << a3
  4049: a2 = 0
  4051: a4 = a3 & s1
  4054: jump @306 if a4 == 0
      : @301
  4057: a4 = ra + 0x1
  4060: fallthrough
      : @302
  4061: ra = a4
  4063: a1 = u8 [a4]
  4065: a4 = a1 + 0xffffffffffffffe0
  4068: a2 = a2 | a3
  4071: a3 = 0x20
  4074: jump @306 if a4 >=u a3
      : @303
  4077: i32 a3 = a0 << a4
  4080: a5 = a3 & s1
  4083: a4 = ra + 0x1
  4086: jump @302 if a5 != 0
      : @304
  4089: jump @306
      : @305
  4091: a2 = 0
  4093: fallthrough
      : @306
  4094: u64 [sp + 0x140] = a2
  4098: u64 [sp + 0x98] = t0
  4102: jump @311 if a1 != 42
      : @307
  4106: a1 = u8 [ra + 0x1]
  4109: a1 = a1 + 0xffffffffffffffd0
  4112: jump @317 if a1 >u 9
      : @308
  4116: a3 = u8 [ra + 0x2]
  4119: jump @317 if a3 != 36
      : @309
  4123: a0 = u64 [sp + 0x160]
  4127: jump @325 if a0 == 0
      : @310
  4131: a1 = a1 << 0x4
  4134: a0 = u64 [sp + 0x110]
  4138: a1 = a1 + a0
  4141: s1 = i32 [a1]
  4143: jump @326
      : @311
  4146: a1 = a1 + 0xffffffffffffffd0
  4149: s1 = 0
  4151: jump @328 if a1 >u 9
      : @312
  4156: a3 = ra
  4158: jump @314
      : @313
  4160: t2 = 0xa
  4163: i32 a2 = s1 * t2
  4166: i32 a4 = a1 + 0
  4168: t0 = u8 [a3 + 0x1]
  4171: a5 = u64 [sp + 0x168]
  4175: a5 = a5 ^ a2
  4178: i32 s1 = a2 + a1
  4181: a0 = a5 <u a4
  4184: ra = a3 + 0x1
  4187: a1 = t0 + 0xffffffffffffffd0
  4190: s1 = 0xffffffffffffffff if a0 != 0
  4193: a3 = ra
  4195: jump @323 if a1 >=u t2
      : @314
  4198: i32 a2 = s1 + 0
  4200: a0 = u64 [sp + 0x138]
  4204: jump @313 if a0 >=u a2
      : @315
  4207: a0 = u8 [a3 + 0x1]
  4210: a3 = a3 + 0x1
  4213: a1 = a0 + 0xffffffffffffffd0
  4216: s1 = 0xffffffffffffffff
  4219: jump @314 if a1 <u 10
      : @316
  4223: jump @890
      : @317
  4226: a0 = u64 [sp + 0x130]
  4230: jump @319 if a0 == 0
      : @318
  4233: jump @927
      : @319
  4236: ra = ra + 0x1
  4239: a0 = u64 [sp + 0x160]
  4243: jump @322 if a0 == 0
      : @320
  4246: a0 = u64 [sp + 0x128]
  4250: a1 = u64 [a0]
  4252: a3 = a1 + 0x8
  4255: u64 [a0] = a3
  4257: s1 = i32 [a1]
  4259: u64 [sp + 304] = 0
  4263: a2 = u64 [sp + 0x140]
  4267: jump @328 if s1 >=s 0
      : @321
  4270: jump @327
      : @322
  4272: u64 [sp + 304] = 0
  4276: s1 = 0
  4278: jump @328
      : @323
  4280: jump @328 if a5 >=u a4
      : @324
  4283: jump @890
      : @325
  4286: s1 = 0
  4288: a1 = a1 << 0x2
  4291: a0 = u64 [sp + 0x100]
  4295: a1 = a1 + a0
  4298: u32 [a1 + 0] = 0xa
  4301: fallthrough
      : @326
  4302: ra = ra + 0x3
  4305: u64 [sp + 304] = 0x1
  4310: jump @328 if s1 >=s 0
      : @327
  4313: a2 = a2 | 0x2000
  4317: u64 [sp + 0x140] = a2
  4321: i32 s1 = -s1
  4323: fallthrough
      : @328
  4324: u64 [sp + 0xa8] = s1
  4328: a0 = u8 [ra]
  4330: jump @334 if a0 != 46
      : @329
  4334: a1 = u8 [ra + 0x1]
  4337: a2 = 0xa
  4340: jump @335 if a1 != 42
      : @330
  4344: a0 = u8 [ra + 0x2]
  4347: a1 = a0 + 0xffffffffffffffd0
  4350: a5 = 0x3a
  4353: a4 = 0x8
  4356: jump @341 if a1 >u 9
      : @331
  4361: a0 = u8 [ra + 0x3]
  4364: jump @341 if a0 != 36
      : @332
  4369: a0 = u64 [sp + 0x160]
  4373: jump @348 if a0 == 0
      : @333
  4377: a1 = a1 << 0x4
  4380: a0 = u64 [sp + 0x110]
  4384: a1 = a1 + a0
  4387: s1 = u64 [a1]
  4389: ra = ra + 0x4
  4392: a3 = 0xffffffffffffffc6
  4395: jump @349
      : @334
  4398: u64 [sp + 144] = 0
  4402: u64 [sp + 160] = 0xffffffffffffffff
  4407: a3 = 0xffffffffffffffc6
  4410: a5 = 0x3a
  4413: a4 = 0x8
  4416: a1 = 0
  4418: jump @350
      : @335
  4421: ra = ra + 0x1
  4424: a1 = a1 + 0xffffffffffffffd0
  4427: u64 [sp + 144] = 0x1
  4432: a5 = 0x3a
  4435: a4 = 0x8
  4438: jump @345 if a1 >u 9
      : @336
  4442: s1 = 0
  4444: jump @339
      : @337
  4446: i32 a0 = s1 * a2
  4449: i32 a3 = a1 + 0
  4451: a4 = u64 [sp + 0x168]
  4455: a4 = a4 ^ a0
  4458: a3 = a4 <u a3
  4461: a4 = 0x8
  4464: i32 s1 = a0 + a1
  4467: s1 = 0xffffffffffffffff if a3 != 0
  4470: fallthrough
      : @338
  4471: a0 = u8 [ra + 0x1]
  4474: a3 = ra + 0x1
  4477: a1 = a0 + 0xffffffffffffffd0
  4480: ra = a3
  4482: jump @346 if a1 >=u a2
      : @339
  4485: i32 a0 = s1 + 0
  4487: a3 = u64 [sp + 0x138]
  4491: jump @337 if a3 >=u a0
      : @340
  4494: s1 = 0xffffffffffffffff
  4497: jump @338
      : @341
  4499: a0 = u64 [sp + 0x130]
  4503: a3 = 0xffffffffffffffc6
  4506: jump @343 if a0 == 0
      : @342
  4509: jump @927
      : @343
  4512: ra = ra + 0x2
  4515: a0 = u64 [sp + 0x160]
  4519: jump @347 if a0 == 0
      : @344
  4522: a3 = u64 [sp + 0x128]
  4526: a0 = u64 [a3]
  4528: a1 = a0 + 0x8
  4531: u64 [a3] = a1
  4533: a3 = 0xffffffffffffffc6
  4536: s1 = i32 [a0]
  4538: jump @349
      : @345
  4540: u64 [sp + 160] = 0
  4544: a3 = 0xffffffffffffffc6
  4547: a1 = 0
  4549: jump @350
      : @346
  4551: u64 [sp + 0xa0] = s1
  4555: ra = a3
  4557: a3 = 0xffffffffffffffc6
  4560: a1 = 0
  4562: jump @350
      : @347
  4564: s1 = 0
  4566: jump @349
      : @348
  4568: s1 = 0
  4570: a1 = a1 << 0x2
  4573: a0 = u64 [sp + 0x100]
  4577: a1 = a1 + a0
  4580: u32 [a1 + 0] = 0xa
  4583: ra = ra + 0x4
  4586: a3 = 0xffffffffffffffc6
  4589: fallthrough
      : @349
  4590: u64 [sp + 0xa0] = s1
  4594: i32 a0 = s1 + 0
  4596: a0 = a0 <s 0
  4598: a0 = a0 ^ 0x1
  4601: u64 [sp + 0x90] = a0
  4605: a1 = 0
  4607: fallthrough
      : @350
  4608: a2 = u8 [ra]
  4610: a0 = a2 + 0xffffffffffffff85
  4613: jump @352 if a0 >=u a3
      : @351
  4616: jump @927
      : @352
  4619: s1 = a1
  4621: a0 = a1 * a5
  4624: a1 = 0x10930
  4629: a0 = a0 + a1
  4632: a0 = a0 + a2
  4635: a1 = u8 [a0 + 0xffffffffffffffbf]
  4638: a0 = a1 + 0xffffffffffffffff
  4641: a0 = a0 & 0xff
  4645: ra = ra + 0x1
  4648: jump @350 if a0 <u a4
      : @353
  4651: u64 [sp + 0x150] = ra
  4655: jump @359 if a1 == 27
      : @354
  4659: jump @356 if a1 != 0
      : @355
  4662: jump @927
      : @356
  4665: t0 = u64 [sp + 0x98]
  4669: jump @363 if t0 <s 0
      : @357
  4672: a0 = u64 [sp + 0x110]
  4676: a2 = u64 [sp + 0x160]
  4680: jump @376 if a2 == 0
      : @358
  4684: t0 = t0 << 0x4
  4687: t0 = t0 + a0
  4690: a0 = u64 [t0]
  4692: a1 = u64 [t0 + 0x8]
  4695: u64 [sp + 0x1a0] = a0
  4699: u64 [sp + 0x1a8] = a1
  4703: a5 = u64 [sp + 0x150]
  4707: t0 = u64 [sp + 0xa8]
  4711: jump @367
      : @359
  4713: a5 = u64 [sp + 0x150]
  4717: a1 = u64 [sp + 0x98]
  4721: jump @361 if a1 <s 0
      : @360
  4724: jump @927
      : @361
  4727: a3 = 0
  4729: t0 = u64 [sp + 0xa8]
  4733: a0 = u64 [sp + 0x160]
  4737: jump @367 if a0 != 0
      : @362
  4740: jump @276
      : @363
  4743: a0 = u64 [sp + 0x160]
  4747: jump @365 if a0 != 0
      : @364
  4750: jump @913
      : @365
  4753: a0 = sp + 0x1a0
  4757: a2 = u64 [sp + 0x128]
  4761: u64 [sp + 0x148] = t1
  4765: ra = 162, jump @931
      : @366 [@dyn 81]
  4771: t1 = u64 [sp + 0x148]
  4775: a5 = u64 [sp + 0x150]
  4779: t0 = u64 [sp + 0xa8]
  4783: fallthrough
      : @367
  4784: a0 = u64 [sp + 0x160]
  4788: a0 = u8 [a0]
  4790: a0 = a0 & 0x20
  4793: jump @369 if a0 == 0
      : @368
  4796: jump @929
      : @369
  4799: a1 = u8 [a5 + 0xffffffffffffffff]
  4802: a0 = 0xffffffffffff0000
  4807: ra = 0xfffffffffffeffff
  4812: a2 = s1 >u 0
  4814: a3 = a1 & 0xf
  4817: a3 = a3 + 0xfffffffffffffffd
  4820: a3 = a3 <u 0x1
  4823: a2 = a2 & a3
  4826: a3 = a1 & 0xd3
  4830: a3 = a1 if a2 == 0
  4833: a2 = u64 [sp + 0x140]
  4837: a1 = a2 & 0x2000
  4841: a4 = a2 & ra
  4844: a2 = a4 if a1 != 0
  4847: a1 = a3 + 0xffffffffffffffbf
  4850: i32 a2 = a2 + 0
  4852: u64 [sp + 0x70] = a2
  4855: u64 [sp + 0x148] = t1
  4859: jump @417 if a1 >u 55
      : @370
  4864: a1 = a1 << 0x2
  4867: a2 = 0x107e8
  4872: a1 = a1 + a2
  4875: a1 = i32 [a1]
  4877: a1 = a1 + a2
  4880: t2 = 0x10b00
  4885: jump [a1]
      : @371 [@dyn 82]
  4887: a1 = i32 [sp + 0xa0]
  4891: a2 = a1 <s 0
  4893: a0 = u64 [sp + 0x90]
  4897: u64 [sp + 0x140] = a2
  4901: a0 = a0 & a2
  4904: jump @373 if a0 == 0
      : @372
  4907: jump @890
      : @373
  4910: u64 [sp + 0x58] = a1
  4913: u64 [sp + 0x80] = t2
  4917: u64 [sp + 0x68] = a3
  4920: a0 = u64 [sp + 0x1a0]
  4924: s1 = u64 [sp + 0x1a8]
  4928: u32 [sp + 492] = 0
  4932: u64 [sp + 0x170] = a0
  4936: a1 = s1
  4938: a0 = a1 >> 0x3f
  4941: fallthrough
      : @374
  4942: jump @377 if a0 == 0
      : @375
  4945: u64 [sp + 72] = 0
  4948: a1 = 0x8000000000000000
  4958: a0 = 0x100de
  4963: u64 [sp + 0x78] = a0
  4966: s1 = s1 ^ a1
  4969: u64 [sp + 96] = 0x1
  4973: jump @383
      : @376
  4975: a3 = 0
  4977: t0 = t0 << 0x2
  4980: a0 = u64 [sp + 0x100]
  4984: t0 = t0 + a0
  4987: u32 [t0] = a1
  4989: a5 = u64 [sp + 0x150]
  4993: jump @276
      : @377
  4996: a2 = u64 [sp + 0x70]
  4999: a1 = a2 << 0x34
  5002: a0 = 0x100de
  5007: jump @382 if a1 <s 0
      : @378
  5010: a2 = a2 & 0x1
  5013: a1 = a0 + 0x6
  5016: a0 = a0 + 0x1
  5019: a3 = a2 <u 0x1
  5022: u64 [sp + 0x48] = a3
  5025: u64 [sp + 0x60] = a2
  5028: a0 = a1 if a2 != 0
  5031: u64 [sp + 0x78] = a0
  5034: jump @383
      : @379 [@dyn 83]
  5036: a1 = u64 [sp + 0x1a0]
  5040: jump @515 if a1 <s 0
      : @380
  5044: a4 = u64 [sp + 0x70]
  5047: a3 = a4 << 0x34
  5050: a2 = 0x10000
  5055: jump @540 if a3 <s 0
      : @381
  5059: t2 = a4 & 0x1
  5062: a3 = t2 << 0x1
  5065: a2 = a2 + a3
  5068: jump @541
      : @382
  5071: u64 [sp + 72] = 0
  5074: a0 = a0 + 0x3
  5077: u64 [sp + 0x78] = a0
  5080: u64 [sp + 96] = 0x1
  5084: fallthrough
      : @383
  5085: a0 = u64 [sp + 0x170]
  5089: u64 [sp + 0x170] = s1
  5093: a1 = s1
  5095: s1 = a0
  5097: jump @957
      : @384
  5100: jump @394 if a0 <=s 1
      : @385
  5105: a2 = sp + 0x1ec
  5109: a0 = s1
  5111: a1 = u64 [sp + 0x170]
  5115: ra = 168, jump @962
      : @386 [@dyn 84]
  5121: s1 = a0
  5123: u64 [sp + 0x170] = a1
  5127: a0 = 0x2
  5130: ra = 170, jump @1067
      : @387 [@dyn 85]
  5136: a2 = a0
  5138: a3 = a1
  5140: a0 = s1
  5142: a1 = u64 [sp + 0x170]
  5146: ra = 172, jump @1005
      : @388 [@dyn 86]
  5152: u64 [sp + 0x158] = a0
  5156: u64 [sp + 0x170] = a1
  5160: a2 = 0
  5162: a3 = 0
  5164: ra = 174, jump @973
      : @389 [@dyn 87]
  5170: jump @404 if a0 == 0
      : @390
  5174: s1 = i32 [sp + 0x1ec]
  5178: a0 = s1 + 0xffffffffffffffff
  5181: a1 = u64 [sp + 0x68]
  5184: a1 = a1 | 0x20
  5187: u32 [sp + 0x1ec] = a0
  5191: u64 [sp + 0x50] = a1
  5194: jump @405 if a1 == 97
      : @391
  5199: a1 = u64 [sp + 0xa0]
  5203: a2 = u64 [sp + 0x140]
  5207: a1 = 0x6 if a2 != 0
  5210: u64 [sp + 0xa0] = a1
  5214: a0 = u64 [sp + 0xf0]
  5218: ra = 176, jump @994
      : @392 [@dyn 88]
  5224: a2 = a0
  5226: a3 = a1
  5228: a0 = u64 [sp + 0x158]
  5232: a1 = u64 [sp + 0x170]
  5236: ra = 178, jump @1005
      : @393 [@dyn 89]
  5242: u64 [sp + 0x158] = a0
  5246: a2 = a1
  5248: i32 s1 = s1 + 0xffffffffffffffe3
  5251: u32 [sp + 0x1ec] = s1
  5255: jump @470
      : @394
  5258: a0 = s1
  5260: a1 = u64 [sp + 0x170]
  5264: a2 = s1
  5266: a3 = a1
  5268: ra = 180, jump @973
      : @395 [@dyn 90]
  5274: u64 [sp + 0x158] = a0
  5278: a0 = u64 [sp + 0x70]
  5281: a0 = a0 << 0x32
  5284: s1 = u64 [sp + 0x60]
  5287: s1 = s1 + 0x3
  5290: u64 [sp + 0x170] = s1
  5294: a3 = u64 [sp + 0xa8]
  5298: jump @493 if a0 <s 0
      : @396
  5302: i32 a0 = a3 + 0
  5304: a1 = u64 [sp + 0x170]
  5308: jump @493 if a1 >=u a0
      : @397
  5312: a0 = u64 [sp + 0x170]
  5316: i32 s1 = a3 - a0
  5319: a0 = 0x100
  5323: a2 = minu(s1, a0)
  5326: a0 = sp + 0x1eb8
  5330: a1 = 0x20
  5333: ra = 182, jump @1314
      : @398 [@dyn 91]
  5339: jump @489 if s1 <u 256
      : @399
  5345: a2 = u64 [sp + 0x160]
  5349: a3 = u64 [sp + 0xa8]
  5353: jump @401
      : @400
  5355: i32 s1 = s1 + 0xffffffffffffff00
  5359: jump @490 if s1 <=u 255
      : @401
  5365: a0 = u8 [a2]
  5367: a0 = a0 & 0x20
  5370: jump @400 if a0 != 0
      : @402
  5373: a0 = sp + 0x1eb8
  5377: a1 = 0x100
  5381: ra = 184, jump @141
      : @403 [@dyn 92]
  5387: a3 = u64 [sp + 0xa8]
  5391: a2 = u64 [sp + 0x160]
  5395: jump @400
      : @404
  5397: a0 = u64 [sp + 0x68]
  5400: a1 = a0 | 0x20
  5403: u64 [sp + 0x50] = a1
  5406: jump @469 if a1 != 97
      : @405
  5411: a0 = u64 [sp + 0xf8]
  5415: ra = 186, jump @994
      : @406 [@dyn 93]
  5421: a2 = u64 [sp + 0x68]
  5424: a2 = a2 << 0x3a
  5427: a2 = a2 >>a 0x3f
  5430: a2 = a2 & 0x9
  5433: a3 = u64 [sp + 0x78]
  5436: a2 = a2 + a3
  5439: u64 [sp + 0x48] = a2
  5442: a2 = 0x1a
  5445: t1 = u64 [sp + 0x58]
  5448: jump @619 if a2 <u t1
      : @407
  5452: s1 = a0
  5454: a0 = 0x2
  5457: u64 [sp + 0x140] = a1
  5461: ra = 188, jump @1067
      : @408 [@dyn 94]
  5467: a2 = a0
  5469: a3 = a1
  5471: a0 = s1
  5473: a1 = u64 [sp + 0x140]
  5477: ra = 190, jump @1005
      : @409 [@dyn 95]
  5483: a2 = a0
  5485: a3 = a1
  5487: s1 = u64 [sp + 0xa0]
  5491: s1 = s1 + 0xffffffffffffffe5
  5494: fallthrough
      : @410
  5495: u64 [sp + 0x98] = a2
  5499: u64 [sp + 0x140] = a3
  5503: a0 = 0x10
  5506: ra = 192, jump @1067
      : @411 [@dyn 96]
  5512: a2 = a0
  5514: a3 = a1
  5516: a0 = u64 [sp + 0x98]
  5520: a1 = u64 [sp + 0x140]
  5524: ra = 194, jump @1005
      : @412 [@dyn 97]
  5530: a2 = a0
  5532: i32 s1 = s1 + 0x1
  5535: a3 = a1
  5537: jump @410 if s1 != 0
      : @413
  5540: a0 = u64 [sp + 0x48]
  5543: a0 = u8 [a0]
  5545: u64 [sp + 0x140] = a3
  5549: jump @616 if a0 != 45
      : @414
  5554: s1 = 0x8000000000000000
  5564: u64 [sp + 0x98] = s1
  5568: a1 = u64 [sp + 0x170]
  5572: a1 = a1 ^ s1
  5575: a0 = u64 [sp + 0x158]
  5579: s1 = a2
  5581: ra = 0xc4
  5585: a4 = 0x8000000000000000
  5595: a3 = a3 ^ a4
  5598: jump @1073
      : @415 [@dyn 98]
  5601: a2 = s1
  5603: a3 = u64 [sp + 0x140]
  5607: ra = 198, jump @1073
      : @416 [@dyn 99]
  5613: u64 [sp + 0x158] = a0
  5617: a0 = u64 [sp + 0x98]
  5621: a1 = a1 ^ a0
  5624: u64 [sp + 0x170] = a1
  5628: t1 = u64 [sp + 0x58]
  5631: jump @619
      : @417 [@dyn 100]
  5634: t2 = 0
  5636: a0 = 0x10000
  5641: u64 [sp + 0x88] = a0
  5645: a0 = sp + 0x1a0
  5649: a3 = u64 [sp + 0xa0]
  5653: a4 = u64 [sp + 0x70]
  5656: s1 = u64 [sp + 0x170]
  5660: jump @552
      : @418 [@dyn 101]
  5663: u64 [sp + 0x140] = a4
  5667: a0 = u64 [sp + 0x1a0]
  5671: s1 = 0x107ab
  5676: s1 = a0 if a0 != 0
  5679: jump @422
      : @419 [@dyn 102]
  5681: u64 [sp + 0x140] = a4
  5685: ra = 206, jump @230
      : @420 [@dyn 103]
  5691: a0 = i32 [a0]
  5693: ra = 0xd0
  5697: sp = sp + 0xfffffffffffffff0
  5700: u64 [sp + 0x8] = ra
  5703: u64 [sp] = s0
  5705: s0 = a0
  5707: a0 = u64 [0x30118]
  5712: a1 = s0 <u 0x84
  5716: s0 = 0 if a1 == 0
  5718: s0 = s0 << 0x1
  5721: a1 = 0x1128a
  5726: a1 = a1 + s0
  5729: a2 = u16 [a1 ]
  5731: a1 = u64 [a0 + 0x28]
  5734: a0 = 0x10b10
  5739: a0 = a0 + a2
  5742: ra = u64 [sp + 0x8]
  5745: s0 = u64 [sp]
  5747: sp = sp + 0x10
  5750: ret
      : @421 [@dyn 104]
  5752: s1 = a0
  5754: fallthrough
      : @422
  5755: a1 = i32 [sp + 0xa0]
  5759: u64 [sp + 0x170] = a1
  5763: a0 = u64 [sp + 0x168]
  5767: a1 = minu(a1, a0)
  5770: a0 = s1
  5772: ra = 0xd2
  5776: sp = sp + 0xffffffffffffffe8
  5779: u64 [sp + 0x10] = ra
  5782: u64 [sp + 0x8] = s0
  5785: u64 [sp] = s1
  5787: s0 = a1
  5789: s1 = a0
  5791: a1 = 0
  5793: a2 = s0
  5795: ra = 0x1d6
  5799: jump @1336
      : @423 [@dyn 105]
  5802: a3 = a0
  5804: a2 = s1
  5806: a0 = a0 + s1
  5809: t1 = u64 [sp + 0x148]
  5813: a5 = u64 [sp + 0x150]
  5817: t0 = u64 [sp + 0xa8]
  5821: a1 = u64 [sp + 0x170]
  5825: jump @426 if a1 >=s 0
      : @424
  5828: a1 = u8 [a0]
  5830: jump @426 if a1 == 0
      : @425
  5833: jump @890
      : @426
  5836: t2 = 0
  5838: a1 = 0x10000
  5843: u64 [sp + 0x88] = a1
  5847: a4 = u64 [sp + 0x140]
  5851: s1 = a2
  5853: jump @552
      : @427 [@dyn 106]
  5856: a1 = u64 [sp + 0x1a0]
  5860: a4 = sp + 0x1a0
  5864: jump @430 if a1 == 0
      : @428
  5867: a2 = sp + 0x1a0
  5871: a3 = a1
  5873: fallthrough
      : @429
  5874: a4 = a3 & 0x7
  5877: s1 = a2 + 0xffffffffffffffff
  5880: a4 = a4 | 0x30
  5883: a3 = a3 >> 0x3
  5886: u8 [a2 + 0xffffffffffffffff] = a4
  5889: a4 = s1
  5891: a2 = s1
  5893: jump @429 if a3 != 0
      : @430
  5896: u64 [sp + 0x170] = a4
  5900: a4 = u64 [sp + 0x70]
  5903: a2 = a4 & 0x8
  5906: a0 = 0x10000
  5911: u64 [sp + 0x88] = a0
  5915: jump @446 if a2 == 0
      : @431
  5919: a3 = i32 [sp + 0xa0]
  5923: a2 = sp + 0x1a0
  5927: s1 = u64 [sp + 0x170]
  5931: a2 = a2 - s1
  5934: jump @446 if a2 <s a3
      : @432
  5938: t2 = 0
  5940: a2 = a2 + 0x1
  5943: u64 [sp + 0xa0] = a2
  5947: a2 = a4
  5949: jump @546
      : @433 [@dyn 107]
  5952: a0 = s1 & 0xff
  5956: a3 = 0
  5958: jump @276 if a0 >u 7
      : @434
  5963: a0 = a0 << 0x2
  5966: a1 = 0x108c8
  5971: a0 = a0 + a1
  5974: a0 = i32 [a0]
  5976: a0 = a0 + a1
  5979: jump [a0]
      : @435 [@dyn 108]
  5981: a3 = 0
  5983: a0 = u64 [sp + 0x1a0]
  5987: u64 [a0] = t1
  5989: jump @276
      : @436 [@dyn 109]
  5992: t2 = 0
  5994: a1 = u64 [sp + 0x1a0]
  5998: a2 = 0x10000
  6003: a4 = u64 [sp + 0x70]
  6006: jump @541
      : @437 [@dyn 110]
  6009: a0 = u64 [sp + 0x1a0]
  6013: jump @440 if a0 == 0
      : @438
  6016: u32 [sp + 0x180] = a0
  6020: u32 [sp + 388] = 0
  6024: s1 = sp + 0x180
  6028: u64 [sp + 0x1a0] = s1
  6032: a4 = 0xffffffffffffffff
  6035: jump @450
      : @439 [@dyn 111]
  6038: a0 = u64 [sp + 0x1a0]
  6042: fallthrough
      : @440
  6043: t2 = 0
  6045: u8 [sp + 0x19f] = a0
  6049: a0 = 0x10000
  6054: u64 [sp + 0x88] = a0
  6058: a3 = 0x1
  6061: a0 = sp + 0x1a0
  6065: s1 = sp + 0x19f
  6069: jump @552
      : @441 [@dyn 112]
  6072: a1 = i32 [sp + 0xa0]
  6076: a2 = u64 [sp + 0x70]
  6079: a2 = a2 | 0x8
  6082: u64 [sp + 0x70] = a2
  6085: a2 = 0x10
  6088: a1 = maxu(a1, a2)
  6091: u64 [sp + 0xa0] = a1
  6095: a3 = 0x78
  6098: fallthrough
      : @442 [@dyn 113]
  6099: a1 = u64 [sp + 0x1a0]
  6103: a0 = 0x10000
  6108: u64 [sp + 0x88] = a0
  6112: jump @447 if a1 == 0
      : @443
  6115: u64 [sp + 0x68] = a3
  6118: a2 = a3 & 0x20
  6121: a4 = sp + 0x1a0
  6125: s1 = t2
  6127: a0 = u64 [sp + 0x70]
  6130: fallthrough
      : @444
  6131: a3 = a1 & 0xf
  6134: a3 = a3 + s1
  6137: a3 = u8 [a3]
  6139: a1 = a1 >> 0x4
  6142: a3 = a3 | a2
  6145: u8 [a4 + 0xffffffffffffffff] = a3
  6148: a4 = a4 + 0xffffffffffffffff
  6151: jump @444 if a1 != 0
      : @445
  6154: u64 [sp + 0x170] = a4
  6158: a2 = a0 & 0x8
  6161: a1 = 0x1
  6164: a4 = a0
  6166: jump @514 if a2 != 0
      : @446
  6170: t2 = 0
  6172: a2 = a4
  6174: jump @546
      : @447
  6177: t2 = 0
  6179: a2 = sp + 0x1a0
  6183: u64 [sp + 0x170] = a2
  6187: a2 = u64 [sp + 0x70]
  6190: jump @546
      : @448 [@dyn 114]
  6193: a4 = i32 [sp + 0xa0]
  6197: jump @714 if a4 == 0
      : @449
  6201: s1 = u64 [sp + 0x1a0]
  6205: fallthrough
      : @450
  6206: a2 = u64 [sp + 0x160]
  6210: a3 = 0
  6212: u64 [sp + 0x158] = s1
  6216: u64 [sp + 0x140] = a4
  6220: fallthrough
      : @451
  6221: a1 = i32 [s1]
  6223: jump @457 if a1 == 0
      : @452
  6226: u64 [sp + 0x170] = a3
  6230: a0 = sp + 0x17c
  6234: ra = 230, jump @1158
      : @453 [@dyn 115]
  6240: jump @455 if a0 >=s 0
      : @454
  6243: jump @929
      : @455
  6246: a3 = u64 [sp + 0x170]
  6250: a4 = u64 [sp + 0x140]
  6254: a1 = a4 - a3
  6257: a2 = u64 [sp + 0x160]
  6261: t0 = u64 [sp + 0xa8]
  6265: jump @457 if a1 <u a0
      : @456
  6268: a3 = a3 + a0
  6271: s1 = s1 + 0x4
  6274: jump @451 if a3 <u a4
      : @457
  6277: a1 = a3 >> 0x1f
  6280: s1 = u64 [sp + 0x70]
  6283: jump @459 if a1 == 0
      : @458
  6286: jump @890
      : @459
  6289: a0 = a2
  6291: i32 a2 = t0 + 0
  6293: a1 = 0x20
  6296: a4 = s1
  6298: u64 [sp + 0x170] = a3
  6302: ra = 232, jump @944
      : @460 [@dyn 116]
  6308: a5 = u64 [sp + 0x170]
  6312: jump @716 if a5 == 0
      : @461
  6316: s1 = 0
  6318: a2 = u64 [sp + 0x160]
  6322: a3 = u64 [sp + 0xa8]
  6326: a0 = u64 [sp + 0x158]
  6330: jump @463
      : @462
  6332: a0 = u64 [sp + 0x158]
  6336: a0 = a0 + 0x4
  6339: a3 = u64 [sp + 0xa8]
  6343: jump @721 if s1 >=u a5
      : @463
  6347: u64 [sp + 0x158] = a0
  6351: a1 = i32 [a0]
  6353: jump @721 if a1 == 0
      : @464
  6357: a0 = sp + 0x17c
  6361: ra = 234, jump @1158
      : @465 [@dyn 117]
  6367: a5 = u64 [sp + 0x170]
  6371: s1 = s1 + a0
  6374: jump @720 if a5 <u s1
      : @466
  6378: a1 = a0
  6380: a2 = u64 [sp + 0x160]
  6384: a0 = u8 [a2]
  6386: a0 = a0 & 0x20
  6389: jump @462 if a0 != 0
      : @467
  6392: a0 = sp + 0x17c
  6396: ra = 236, jump @141
      : @468 [@dyn 118]
  6402: a5 = u64 [sp + 0x170]
  6406: a2 = u64 [sp + 0x160]
  6410: jump @462
      : @469
  6412: s1 = i32 [sp + 0x1ec]
  6416: a1 = u64 [sp + 0xa0]
  6420: a2 = u64 [sp + 0x140]
  6424: a1 = 0x6 if a2 != 0
  6427: u64 [sp + 0xa0] = a1
  6431: a2 = u64 [sp + 0x170]
  6435: fallthrough
      : @470
  6436: u64 [sp + 0x80] = s1
  6440: a1 = s1 <s 0
  6442: a0 = 0x1b00
  6446: u64 [sp + 0x58] = a1
  6449: a0 = 0 if a1 != 0
  6451: a1 = sp + 0x1f0
  6455: s1 = a1 + a0
  6458: u64 [sp + 0x88] = s1
  6462: a1 = a2
  6464: u64 [sp + 0x170] = a1
  6468: a0 = u64 [sp + 0x158]
  6472: jump @1179
      : @471
  6475: u64 [sp + 0x170] = a1
  6479: a0 = u64 [sp + 0x158]
  6483: jump @1179
      : @472
  6486: u64 [sp + 0x90] = a0
  6490: u32 [s1] = a0
  6492: a0 = u64 [sp + 0x118]
  6496: ra = 238, jump @1067
      : @473 [@dyn 119]
  6502: u64 [sp + 0x140] = a0
  6506: u64 [sp + 0x98] = a1
  6510: s1 = s1 + 0x4
  6513: a0 = u64 [sp + 0x90]
  6517: jump @1186
      : @474
  6520: a2 = a0
  6522: a3 = a1
  6524: a0 = u64 [sp + 0x158]
  6528: a1 = u64 [sp + 0x170]
  6532: ra = 0xf0
  6536: a4 = 0x8000000000000000
  6546: a3 = a3 ^ a4
  6549: jump @1073
      : @475 [@dyn 120]
  6552: a2 = a0
  6554: a3 = a1
  6556: a0 = u64 [sp + 0x140]
  6560: a1 = u64 [sp + 0x98]
  6564: ra = 242, jump @1005
      : @476 [@dyn 121]
  6570: u64 [sp + 0x170] = a1
  6574: u64 [sp + 0x158] = a0
  6578: a2 = 0
  6580: a3 = 0
  6582: ra = 244, jump @973
      : @477 [@dyn 122]
  6588: a1 = u64 [sp + 0x170]
  6592: jump @471 if a0 != 0
      : @478
  6595: a2 = u64 [sp + 0x80]
  6599: jump @516 if a2 <=s 0
      : @479
  6603: a5 = u64 [sp + 0x88]
  6607: t2 = u64 [sp + 0x160]
  6611: t0 = 0x1d
  6614: t1 = u64 [sp + 0x118]
  6618: jump @481
      : @480
  6620: a1 = i32 [sp + 0x1ec]
  6624: i32 a2 = a1 - a0
  6627: u32 [sp + 0x1ec] = a2
  6631: s1 = ra
  6633: jump @517 if a2 <=s 0
      : @481
  6637: a1 = s1 + 0xfffffffffffffffc
  6640: a0 = minu(a2, t0)
  6643: jump @486 if a1 <u a5
      : @482
  6646: a2 = 0
  6648: fallthrough
      : @483
  6649: a3 = u32 [a1]
  6651: a2 = a2 << 0x20
  6654: a2 = a2 >> 0x20
  6657: a4 = 0x44b82fa09b5a53
  6667: a3 = a3 << a0
  6670: a3 = a3 + a2
  6673: a2 = a3 >> 0x9
  6676: a2 = a2 mulhu a4
  6679: a2 = a2 >> 0xb
  6682: a4 = a2 * t1
  6685: i32 a4 = a3 - a4
  6688: u32 [a1] = a4
  6690: a1 = a1 + 0xfffffffffffffffc
  6693: jump @483 if a1 >=u a5
      : @484
  6696: jump @486 if a3 <u t1
      : @485
  6699: a1 = a5 + 0xfffffffffffffffc
  6702: u32 [a5 + 0xfffffffffffffffc] = a2
  6705: a5 = a1
  6707: fallthrough
      : @486
  6708: ra = s1
  6710: jump @480 if a5 >=u s1
      : @487
  6713: a1 = i32 [ra + 0xfffffffffffffffc]
  6716: s1 = ra + 0xfffffffffffffffc
  6719: jump @486 if a1 == 0
      : @488
  6722: jump @480
      : @489
  6724: a2 = u64 [sp + 0x160]
  6728: a3 = u64 [sp + 0xa8]
  6732: fallthrough
      : @490
  6733: a0 = u8 [a2]
  6735: a0 = a0 & 0x20
  6738: jump @493 if a0 != 0
      : @491
  6741: a0 = sp + 0x1eb8
  6745: a1 = s1
  6747: a2 = u64 [sp + 0x160]
  6751: ra = 246, jump @141
      : @492 [@dyn 123]
  6757: a3 = u64 [sp + 0xa8]
  6761: fallthrough
      : @493
  6762: a2 = u64 [sp + 0x160]
  6766: a0 = u32 [a2]
  6768: a1 = a0 & 0x20
  6771: jump @496 if a1 != 0
      : @494
  6774: a0 = u64 [sp + 0x78]
  6777: a1 = u64 [sp + 0x60]
  6780: ra = 248, jump @141
      : @495 [@dyn 124]
  6786: a3 = u64 [sp + 0xa8]
  6790: a2 = u64 [sp + 0x160]
  6794: a0 = i32 [a2]
  6796: fallthrough
      : @496
  6797: a0 = a0 & 0x20
  6800: jump @499 if a0 != 0
      : @497
  6803: a0 = u64 [sp + 0x68]
  6806: a1 = a0 & 0x20
  6809: a0 = 0x101dd
  6814: a4 = 0x10584
  6819: a4 = a0 if a1 != 0
  6822: a3 = 0x10727
  6827: a0 = 0x106d1
  6832: a0 = a3 if a1 != 0
  6835: a1 = u64 [sp + 0x158]
  6839: a0 = a4 if a1 == 0
  6842: a1 = 0x3
  6845: ra = 250, jump @141
      : @498 [@dyn 125]
  6851: a3 = u64 [sp + 0xa8]
  6855: fallthrough
      : @499
  6856: a1 = u64 [sp + 0x70]
  6859: a0 = a1 & 0x12000
  6864: t1 = u64 [sp + 0x148]
  6868: a5 = u64 [sp + 0x150]
  6872: jump @512 if a0 != 8192
      : @500
  6878: i32 a0 = a3 + 0
  6880: a1 = u64 [sp + 0x170]
  6884: jump @512 if a1 >=u a0
      : @501
  6888: a0 = u64 [sp + 0x170]
  6892: i32 s1 = a3 - a0
  6895: a0 = 0x100
  6899: a2 = minu(s1, a0)
  6902: a0 = sp + 0x1eb8
  6906: a1 = 0x20
  6909: ra = 252, jump @1314
      : @502 [@dyn 126]
  6915: jump @508 if s1 <u 256
      : @503
  6920: t1 = u64 [sp + 0x148]
  6924: a2 = u64 [sp + 0x160]
  6928: a5 = u64 [sp + 0x150]
  6932: a3 = u64 [sp + 0xa8]
  6936: jump @505
      : @504
  6938: i32 s1 = s1 + 0xffffffffffffff00
  6942: jump @509 if s1 <=u 255
      : @505
  6947: a0 = u8 [a2]
  6949: a0 = a0 & 0x20
  6952: jump @504 if a0 != 0
      : @506
  6955: a0 = sp + 0x1eb8
  6959: a1 = 0x100
  6963: ra = 254, jump @141
      : @507 [@dyn 127]
  6969: a3 = u64 [sp + 0xa8]
  6973: a5 = u64 [sp + 0x150]
  6977: a2 = u64 [sp + 0x160]
  6981: t1 = u64 [sp + 0x148]
  6985: jump @504
      : @508
  6987: t1 = u64 [sp + 0x148]
  6991: a2 = u64 [sp + 0x160]
  6995: a5 = u64 [sp + 0x150]
  6999: a3 = u64 [sp + 0xa8]
  7003: fallthrough
      : @509
  7004: a0 = u8 [a2]
  7006: a0 = a0 & 0x20
  7009: jump @512 if a0 != 0
      : @510
  7012: a0 = sp + 0x1eb8
  7016: a1 = s1
  7018: ra = 256, jump @141
      : @511 [@dyn 128]
  7024: a3 = u64 [sp + 0xa8]
  7028: a5 = u64 [sp + 0x150]
  7032: t1 = u64 [sp + 0x148]
  7036: fallthrough
      : @512
  7037: i32 a0 = a3 + 0
  7039: a1 = u64 [sp + 0x170]
  7043: a3 = maxu(a0, a1)
  7046: jump @276 if a3 >=s 0
      : @513
  7050: jump @890
      : @514
  7053: a2 = u64 [sp + 0x68]
  7056: a2 = a2 >> 0x4
  7059: a3 = 0x10000
  7064: a2 = a2 + a3
  7067: u64 [sp + 0x88] = a2
  7071: t2 = 0x2
  7074: a2 = a4
  7076: jump @546
      : @515
  7079: a1 = -a1
  7081: u64 [sp + 0x1a0] = a1
  7085: a0 = 0x10000
  7090: u64 [sp + 0x88] = a0
  7094: t2 = 0x1
  7097: jump @542
      : @516
  7100: ra = s1
  7102: a5 = u64 [sp + 0x88]
  7106: t2 = u64 [sp + 0x160]
  7110: fallthrough
      : @517
  7111: a0 = u64 [sp + 0x50]
  7114: t0 = a0 + 0xffffffffffffff9a
  7117: jump @531 if a2 <s 0
      : @518
  7121: s1 = a5
  7123: fallthrough
      : @519
  7124: a4 = s1
  7126: jump @524 if s1 >=u ra
      : @520
  7129: a1 = i32 [a4]
  7131: a0 = u64 [sp + 0x88]
  7135: a0 = a0 - a4
  7138: a2 = a0 >> 0x2
  7141: a0 = a0 << 0x1
  7144: i32 a5 = a0 + a2
  7147: s1 = 0xa
  7150: jump @525 if a1 <u s1
      : @521
  7153: a2 = 0xa
  7156: fallthrough
      : @522
  7157: i32 a2 = a2 * s1
  7160: i32 a5 = a5 + 0x1
  7163: jump @522 if a1 >=u a2
      : @523
  7166: jump @525
      : @524
  7168: a5 = 0
  7170: s1 = 0xa
  7173: fallthrough
      : @525
  7174: a0 = a5
  7176: a3 = u64 [sp + 0xa0]
  7180: i32 t1 = a3 + 0
  7182: a1 = u64 [sp + 0x50]
  7185: a1 = a1 + 0xffffffffffffff99
  7188: a2 = u64 [sp + 0x88]
  7192: a2 = ra - a2
  7195: a0 = 0 if t0 == 0
  7197: t0 = a3
  7199: a1 = a1 <u 0x1
  7202: a3 = t1 >u 0
  7204: a1 = a1 & a3
  7207: a3 = a2 >>a 0x2
  7210: a2 = a2 << 0x1
  7213: a2 = a2 + a3
  7216: i32 a0 = t0 - a0
  7219: i32 a0 = a0 - a1
  7222: a2 = a2 + 0xfffffffffffffff7
  7225: jump @530 if a0 >=s a2
      : @526
  7228: i32 a1 = a0 + 0x24000
  7233: a0 = u64 [sp + 0xe8]
  7237: a0 = a1 * a0
  7240: a2 = a0 >> 0x3f
  7243: a0 = a0 >>a 0x21
  7246: a0 = a0 + a2
  7249: a2 = a0 << 0x3
  7252: a2 = a2 + a0
  7255: i32 a1 = a1 - a2
  7258: u64 [sp + 0x90] = t1
  7262: u64 [sp + 0xa0] = t0
  7266: jump @646 if a1 >s 7
      : @527
  7271: a1 = a1 + 0xfffffffffffffff8
  7274: a2 = 0xa
  7277: fallthrough
      : @528
  7278: i32 a1 = a1 + 0x1
  7281: i32 a2 = a2 * s1
  7284: jump @528 if a1 != 0
      : @529
  7287: jump @647
      : @530
  7290: s1 = ra
  7292: a3 = u64 [sp + 0x68]
  7295: a0 = u64 [sp + 0x88]
  7299: a1 = s1 - a0
  7302: jump @749
      : @531
  7305: a0 = u64 [sp + 0xa0]
  7309: a1 = a0 + 0x2d
  7312: a1 = a1 << 0x20
  7315: a0 = u64 [sp + 0xe0]
  7319: a1 = a1 mulhu a0
  7322: a1 = a1 >> 0x21
  7325: t1 = a1 + 0x1
  7328: s1 = a5
  7330: u64 [sp + 0x170] = t0
  7334: jump @534
      : @532
  7336: a3 = i32 [s1]
  7338: a4 = a3 <u 0x1
  7341: a4 = a4 << 0x2
  7344: fallthrough
      : @533
  7345: s1 = s1 + a4
  7348: a0 = u64 [sp + 0x88]
  7352: a1 = t1 << 0x2
  7355: a3 = i32 [sp + 0x1ec]
  7359: a0 = s1 if t0 != 0
  7362: a1 = a1 + a0
  7365: a0 = ra - a0
  7368: a0 = a0 >>a 0x2
  7371: a0 = t1 <s a0
  7374: i32 a2 = a2 + a3
  7377: ra = a1 if a0 != 0
  7380: u32 [sp + 0x1ec] = a2
  7384: jump @519 if a2 >=s 0
      : @534
  7388: i32 a2 = -a2
  7390: a0 = 0x9
  7393: a2 = minu(a2, a0)
  7396: jump @532 if s1 >=u ra
      : @535
  7399: a3 = 0
  7401: i32 a4 = 0xffffffffffffffff << a2
  7404: a1 = a4 ^ 0xffffffffffffffff
  7407: a0 = u64 [sp + 0x118]
  7411: i32 a5 = a0 >> a2
  7414: t0 = s1
  7416: fallthrough
      : @536
  7417: a0 = i32 [s1]
  7419: a4 = a0 & a1
  7422: i32 a0 = a0 >> a2
  7425: a0 = a0 + a3
  7428: u32 [s1] = a0
  7430: s1 = s1 + 0x4
  7433: i32 a3 = a4 * a5
  7436: jump @536 if s1 <u ra
      : @537
  7439: a0 = i32 [t0]
  7441: a4 = a0 <u 0x1
  7444: a4 = a4 << 0x2
  7447: jump @539 if a3 == 0
      : @538
  7450: a0 = ra + 0x4
  7453: u32 [ra] = a3
  7455: ra = a0
  7457: s1 = t0
  7459: t0 = u64 [sp + 0x170]
  7463: jump @533
      : @539
  7465: s1 = t0
  7467: t0 = u64 [sp + 0x170]
  7471: jump @533
      : @540
  7473: a2 = a2 + 0x1
  7476: t2 = 0x1
  7479: fallthrough
      : @541
  7480: u64 [sp + 0x88] = a2
  7484: jump @545 if a1 == 0
      : @542
  7487: a2 = sp + 0x1a0
  7491: a5 = u64 [sp + 0x108]
  7495: s1 = 0x9
  7498: a0 = 0xa
  7501: fallthrough
      : @543
  7502: a3 = a1
  7504: a1 = a5 << 0x20
  7507: a1 = a1 + a5
  7510: a1 = a3 mulhu a1
  7513: a1 = a1 >> 0x3
  7516: a4 = a1 * a0
  7519: i32 a4 = a3 - a4
  7522: a4 = a4 | 0x30
  7525: u8 [a2 + 0xffffffffffffffff] = a4
  7528: a2 = a2 + 0xffffffffffffffff
  7531: jump @543 if s1 <u a3
      : @544
  7534: u64 [sp + 0x170] = a2
  7538: a1 = 0x1
  7541: a2 = u64 [sp + 0x70]
  7544: a5 = u64 [sp + 0x150]
  7548: jump @546
      : @545
  7550: a2 = sp + 0x1a0
  7554: u64 [sp + 0x170] = a2
  7558: a2 = a4
  7560: fallthrough
      : @546
  7561: a3 = i32 [sp + 0xa0]
  7565: a4 = a3 <s 0
  7567: s1 = u64 [sp + 0x90]
  7571: a4 = a4 & s1
  7574: jump @548 if a4 == 0
      : @547
  7577: jump @890
      : @548
  7580: a4 = a2 & ra
  7583: a0 = u64 [sp + 0x90]
  7587: a4 = a2 if a0 == 0
  7590: jump @551 if a1 != 0
      : @549
  7593: jump @551 if a3 != 0
      : @550
  7596: s1 = sp + 0x1a0
  7600: a0 = s1
  7602: jump @552
      : @551
  7604: a0 = a1 <u 0x1
  7607: a2 = sp + 0x1a0
  7611: s1 = u64 [sp + 0x170]
  7615: a1 = a2 - s1
  7618: a0 = a0 + a1
  7621: a3 = maxs(a0, a3)
  7624: a0 = a2
  7626: fallthrough
      : @552
  7627: i32 a1 = a3 + 0
  7629: u64 [sp + 0x170] = s1
  7633: a0 = a0 - s1
  7636: u64 [sp + 0x98] = a0
  7640: a1 = maxs(a0, a1)
  7643: i32 a2 = a1 + 0
  7645: a0 = u64 [sp + 0x168]
  7649: i32 a0 = a0 - t2
  7652: jump @554 if a0 >=s a2
      : @553
  7655: jump @890
      : @554
  7658: i32 a0 = t2 + a1
  7661: i32 t0 = t0 + 0
  7663: u64 [sp + 0xa8] = a0
  7667: u64 [sp + 0xa0] = t0
  7671: a3 = maxs(t0, a0)
  7674: a0 = u64 [sp + 0x158]
  7678: jump @556 if a0 >=s a3
      : @555
  7681: jump @890
      : @556
  7684: u64 [sp + 0x90] = a2
  7688: u64 [sp + 0x78] = a1
  7691: u64 [sp + 0x80] = t2
  7695: a0 = a4 & 0x12000
  7700: u64 [sp + 0x140] = a3
  7704: a2 = u64 [sp + 0x160]
  7708: u64 [sp + 0x158] = a0
  7712: jump @569 if a0 != 0
      : @557
  7716: a0 = u64 [sp + 0xa8]
  7720: a1 = u64 [sp + 0xa0]
  7724: jump @569 if a0 >=s a1
      : @558
  7728: a0 = u64 [sp + 0xa8]
  7732: i32 s1 = a3 - a0
  7735: a0 = 0x100
  7739: a2 = minu(s1, a0)
  7742: a0 = sp + 0x1f0
  7746: a1 = 0x20
  7749: ra = 258, jump @1314
      : @559 [@dyn 129]
  7755: jump @565 if s1 <u 256
      : @560
  7760: t1 = u64 [sp + 0x148]
  7764: a2 = u64 [sp + 0x160]
  7768: a5 = u64 [sp + 0x150]
  7772: a3 = u64 [sp + 0x140]
  7776: jump @562
      : @561
  7778: i32 s1 = s1 + 0xffffffffffffff00
  7782: jump @566 if s1 <=u 255
      : @562
  7787: a0 = u8 [a2]
  7789: a0 = a0 & 0x20
  7792: jump @561 if a0 != 0
      : @563
  7795: a0 = sp + 0x1f0
  7799: a1 = 0x100
  7803: ra = 260, jump @141
      : @564 [@dyn 130]
  7809: a3 = u64 [sp + 0x140]
  7813: a5 = u64 [sp + 0x150]
  7817: a2 = u64 [sp + 0x160]
  7821: t1 = u64 [sp + 0x148]
  7825: jump @561
      : @565
  7827: t1 = u64 [sp + 0x148]
  7831: a2 = u64 [sp + 0x160]
  7835: a5 = u64 [sp + 0x150]
  7839: a3 = u64 [sp + 0x140]
  7843: fallthrough
      : @566
  7844: a0 = u8 [a2]
  7846: a0 = a0 & 0x20
  7849: jump @569 if a0 != 0
      : @567
  7852: a0 = sp + 0x1f0
  7856: a1 = s1
  7858: ra = 262, jump @141
      : @568 [@dyn 131]
  7864: a3 = u64 [sp + 0x140]
  7868: a5 = u64 [sp + 0x150]
  7872: a2 = u64 [sp + 0x160]
  7876: t1 = u64 [sp + 0x148]
  7880: fallthrough
      : @569
  7881: a0 = u8 [a2]
  7883: a0 = a0 & 0x20
  7886: jump @572 if a0 != 0
      : @570
  7889: a0 = u64 [sp + 0x88]
  7893: a1 = u64 [sp + 0x80]
  7897: ra = 264, jump @141
      : @571 [@dyn 132]
  7903: a3 = u64 [sp + 0x140]
  7907: a5 = u64 [sp + 0x150]
  7911: a2 = u64 [sp + 0x160]
  7915: t1 = u64 [sp + 0x148]
  7919: fallthrough
      : @572
  7920: a1 = u64 [sp + 0x158]
  7924: jump @585 if a1 != 65536
      : @573
  7931: a0 = u64 [sp + 0xa8]
  7935: a1 = u64 [sp + 0xa0]
  7939: jump @585 if a0 >=s a1
      : @574
  7943: a0 = u64 [sp + 0xa8]
  7947: i32 s1 = a3 - a0
  7950: a0 = 0x100
  7954: a2 = minu(s1, a0)
  7957: a0 = sp + 0x1f0
  7961: a1 = 0x30
  7964: ra = 266, jump @1314
      : @575 [@dyn 133]
  7970: jump @581 if s1 <u 256
      : @576
  7975: t1 = u64 [sp + 0x148]
  7979: a2 = u64 [sp + 0x160]
  7983: a5 = u64 [sp + 0x150]
  7987: a3 = u64 [sp + 0x140]
  7991: jump @578
      : @577
  7993: i32 s1 = s1 + 0xffffffffffffff00
  7997: jump @582 if s1 <=u 255
      : @578
  8002: a0 = u8 [a2]
  8004: a0 = a0 & 0x20
  8007: jump @577 if a0 != 0
      : @579
  8010: a0 = sp + 0x1f0
  8014: a1 = 0x100
  8018: ra = 268, jump @141
      : @580 [@dyn 134]
  8024: a3 = u64 [sp + 0x140]
  8028: a5 = u64 [sp + 0x150]
  8032: a2 = u64 [sp + 0x160]
  8036: t1 = u64 [sp + 0x148]
  8040: jump @577
      : @581
  8042: t1 = u64 [sp + 0x148]
  8046: a2 = u64 [sp + 0x160]
  8050: a5 = u64 [sp + 0x150]
  8054: a3 = u64 [sp + 0x140]
  8058: fallthrough
      : @582
  8059: a0 = u8 [a2]
  8061: a0 = a0 & 0x20
  8064: jump @585 if a0 != 0
      : @583
  8067: a0 = sp + 0x1f0
  8071: a1 = s1
  8073: ra = 270, jump @141
      : @584 [@dyn 135]
  8079: a3 = u64 [sp + 0x140]
  8083: a5 = u64 [sp + 0x150]
  8087: a2 = u64 [sp + 0x160]
  8091: t1 = u64 [sp + 0x148]
  8095: fallthrough
      : @585
  8096: a0 = i32 [sp + 0x98]
  8100: a1 = u64 [sp + 0x90]
  8104: jump @597 if a0 >=s a1
      : @586
  8108: a0 = u64 [sp + 0x98]
  8112: a1 = u64 [sp + 0x78]
  8115: i32 s1 = a1 - a0
  8118: a0 = 0x100
  8122: a2 = minu(s1, a0)
  8125: a0 = sp + 0x1f0
  8129: a1 = 0x30
  8132: ra = 272, jump @1314
      : @587 [@dyn 136]
  8138: jump @593 if s1 <u 256
      : @588
  8143: t1 = u64 [sp + 0x148]
  8147: a2 = u64 [sp + 0x160]
  8151: a5 = u64 [sp + 0x150]
  8155: a3 = u64 [sp + 0x140]
  8159: jump @590
      : @589
  8161: i32 s1 = s1 + 0xffffffffffffff00
  8165: jump @594 if s1 <=u 255
      : @590
  8170: a0 = u8 [a2]
  8172: a0 = a0 & 0x20
  8175: jump @589 if a0 != 0
      : @591
  8178: a0 = sp + 0x1f0
  8182: a1 = 0x100
  8186: ra = 274, jump @141
      : @592 [@dyn 137]
  8192: a3 = u64 [sp + 0x140]
  8196: a5 = u64 [sp + 0x150]
  8200: a2 = u64 [sp + 0x160]
  8204: t1 = u64 [sp + 0x148]
  8208: jump @589
      : @593
  8210: t1 = u64 [sp + 0x148]
  8214: a2 = u64 [sp + 0x160]
  8218: a5 = u64 [sp + 0x150]
  8222: a3 = u64 [sp + 0x140]
  8226: fallthrough
      : @594
  8227: a0 = u8 [a2]
  8229: a0 = a0 & 0x20
  8232: jump @597 if a0 != 0
      : @595
  8235: a0 = sp + 0x1f0
  8239: a1 = s1
  8241: ra = 276, jump @141
      : @596 [@dyn 138]
  8247: a3 = u64 [sp + 0x140]
  8251: a5 = u64 [sp + 0x150]
  8255: a2 = u64 [sp + 0x160]
  8259: t1 = u64 [sp + 0x148]
  8263: fallthrough
      : @597
  8264: a0 = u8 [a2]
  8266: a0 = a0 & 0x20
  8269: jump @600 if a0 != 0
      : @598
  8272: a0 = u64 [sp + 0x170]
  8276: a1 = u64 [sp + 0x98]
  8280: ra = 278, jump @141
      : @599 [@dyn 139]
  8286: a3 = u64 [sp + 0x140]
  8290: a5 = u64 [sp + 0x150]
  8294: t1 = u64 [sp + 0x148]
  8298: fallthrough
      : @600
  8299: a1 = u64 [sp + 0x158]
  8303: jump @602 if a1 == 8192
      : @601
  8308: jump @276
      : @602
  8311: a0 = u64 [sp + 0xa8]
  8315: a1 = u64 [sp + 0xa0]
  8319: jump @604 if a0 <s a1
      : @603
  8322: jump @276
      : @604
  8325: a0 = u64 [sp + 0xa8]
  8329: i32 s1 = a3 - a0
  8332: a0 = 0x100
  8336: a2 = minu(s1, a0)
  8339: a0 = sp + 0x1f0
  8343: a1 = 0x20
  8346: ra = 280, jump @1314
      : @605 [@dyn 140]
  8352: jump @611 if s1 <u 256
      : @606
  8357: t1 = u64 [sp + 0x148]
  8361: a2 = u64 [sp + 0x160]
  8365: a5 = u64 [sp + 0x150]
  8369: a3 = u64 [sp + 0x140]
  8373: jump @608
      : @607
  8375: i32 s1 = s1 + 0xffffffffffffff00
  8379: jump @612 if s1 <=u 255
      : @608
  8384: a0 = u8 [a2]
  8386: a0 = a0 & 0x20
  8389: jump @607 if a0 != 0
      : @609
  8392: a0 = sp + 0x1f0
  8396: a1 = 0x100
  8400: ra = 282, jump @141
      : @610 [@dyn 141]
  8406: a3 = u64 [sp + 0x140]
  8410: a5 = u64 [sp + 0x150]
  8414: a2 = u64 [sp + 0x160]
  8418: t1 = u64 [sp + 0x148]
  8422: jump @607
      : @611
  8424: t1 = u64 [sp + 0x148]
  8428: a2 = u64 [sp + 0x160]
  8432: a5 = u64 [sp + 0x150]
  8436: a3 = u64 [sp + 0x140]
  8440: fallthrough
      : @612
  8441: a0 = u8 [a2]
  8443: a0 = a0 & 0x20
  8446: jump @614 if a0 == 0
      : @613
  8449: jump @276
      : @614
  8452: a0 = sp + 0x1f0
  8456: a1 = s1
  8458: ra = 284, jump @141
      : @615 [@dyn 142]
  8464: a3 = u64 [sp + 0x140]
  8468: a5 = u64 [sp + 0x150]
  8472: t1 = u64 [sp + 0x148]
  8476: jump @276
      : @616
  8479: a0 = u64 [sp + 0x158]
  8483: a1 = u64 [sp + 0x170]
  8487: s1 = a2
  8489: ra = 286, jump @1073
      : @617 [@dyn 143]
  8495: a2 = s1
  8497: a3 = u64 [sp + 0x140]
  8501: ra = 0x120
  8505: a4 = 0x8000000000000000
  8515: a3 = a3 ^ a4
  8518: jump @1073
      : @618 [@dyn 144]
  8521: u64 [sp + 0x158] = a0
  8525: u64 [sp + 0x170] = a1
  8529: t1 = u64 [sp + 0x58]
  8532: fallthrough
      : @619
  8533: t0 = i32 [sp + 0x1ec]
  8537: s1 = u64 [sp + 0x108]
  8541: a0 = 0xa
  8544: jump @623 if t0 == 0
      : @620
  8547: i32 a1 = -t0
  8549: a2 = maxs(t0, a1)
  8552: a3 = sp + 0x1c7
  8556: fallthrough
      : @621
  8557: a4 = a2
  8559: a1 = s1 << 0x20
  8562: a1 = a1 + s1
  8565: a2 = a2 mulhu a1
  8568: a2 = a2 >> 0x3
  8571: a1 = a2 * a0
  8574: i32 a1 = a4 - a1
  8577: a5 = a1 | 0x30
  8580: a1 = a3 + 0xffffffffffffffff
  8583: u8 [a3 + 0xffffffffffffffff] = a5
  8586: a3 = a1
  8588: jump @621 if a4 >=u a0
      : @622
  8591: jump @624
      : @623
  8593: u8 [sp + 454] = 0x30
  8598: a1 = sp + 0x1c6
  8602: fallthrough
      : @624
  8603: a3 = u64 [sp + 0x68]
  8606: a0 = a3 & 0x20
  8609: u64 [sp + 0x78] = a0
  8612: a0 = u64 [sp + 0x60]
  8615: a0 = a0 + 0x2
  8618: u64 [sp + 0x60] = a0
  8621: a0 = t0 <s 0
  8623: a2 = 0x2d
  8626: a3 = a3 + 0xf
  8629: a4 = a1 + 0xfffffffffffffffe
  8632: u64 [sp + 0x50] = a4
  8635: a4 = 0x2b
  8638: a2 = a4 if a0 == 0
  8641: a0 = t1 >s 0
  8643: u8 [a1 + 0xfffffffffffffffe] = a3
  8646: u8 [a1 + 0xffffffffffffffff] = a2
  8649: a1 = u64 [sp + 0x70]
  8652: a1 = a1 << 0x3c
  8655: a1 = a1 >> 0x3f
  8658: a0 = a0 | a1
  8661: u64 [sp + 0x68] = a0
  8664: a0 = sp + 0x1c7
  8668: u64 [sp + 0x140] = a0
  8672: s1 = u64 [sp + 0x158]
  8676: jump @627
      : @625
  8678: a0 = s1
  8680: a1 = a2
  8682: a2 = 0
  8684: a3 = 0
  8686: ra = 290, jump @973
      : @626 [@dyn 145]
  8692: jump @636 if a0 == 0
      : @627
  8696: a0 = s1
  8698: u64 [sp + 0x158] = s1
  8702: s1 = u64 [sp + 0x140]
  8706: a1 = u64 [sp + 0x170]
  8710: jump @1192
      : @628
  8713: a1 = a0
  8715: u64 [sp + 0x90] = a0
  8719: a0 = u64 [sp + 0x80]
  8723: a0 = a0 + a1
  8726: a0 = u8 [a0]
  8728: a1 = u64 [sp + 0x78]
  8731: a0 = a0 | a1
  8734: a1 = s1 + 0x1
  8737: u64 [sp + 0x140] = a1
  8741: u64 [sp + 0x88] = s1
  8745: u8 [s1] = a0
  8747: a0 = 0x10
  8750: ra = 292, jump @1067
      : @629 [@dyn 146]
  8756: s1 = a0
  8758: u64 [sp + 0x98] = a1
  8762: a0 = u64 [sp + 0x90]
  8766: ra = 294, jump @1067
      : @630 [@dyn 147]
  8772: a2 = a0
  8774: a3 = a1
  8776: a0 = u64 [sp + 0x158]
  8780: a1 = u64 [sp + 0x170]
  8784: ra = 0x128
  8788: a4 = 0x8000000000000000
  8798: a3 = a3 ^ a4
  8801: jump @1073
      : @631 [@dyn 148]
  8804: a2 = a0
  8806: a3 = a1
  8808: a0 = s1
  8810: a1 = u64 [sp + 0x98]
  8814: ra = 298, jump @1005
      : @632 [@dyn 149]
  8820: s1 = a0
  8822: a0 = sp + 0x1c7
  8826: a2 = u64 [sp + 0x140]
  8830: a0 = a2 - a0
  8833: a2 = a1
  8835: u64 [sp + 0x170] = a2
  8839: jump @625 if a0 != 1
      : @633
  8844: a0 = s1
  8846: a1 = a2
  8848: a2 = 0
  8850: a3 = 0
  8852: ra = 300, jump @973
      : @634 [@dyn 150]
  8858: a2 = u64 [sp + 0x170]
  8862: a0 = a0 >u 0
  8864: a1 = u64 [sp + 0x68]
  8867: a0 = a0 | a1
  8870: jump @625 if a0 == 0
      : @635
  8874: a1 = u64 [sp + 0x88]
  8878: a0 = a1 + 0x2
  8881: u64 [sp + 0x140] = a0
  8885: u8 [a1 + 1] = 0x2e
  8889: jump @625
      : @636
  8892: a0 = sp + 0x1c7
  8896: a1 = u64 [sp + 0x50]
  8899: a0 = a0 - a1
  8902: a3 = u64 [sp + 0x60]
  8905: a2 = a0 + a3
  8908: a1 = 0x7ffffffd - a2
  8914: a2 = u64 [sp + 0x160]
  8918: s1 = sp + 0x1c7
  8922: t1 = u64 [sp + 0xa8]
  8926: a4 = u64 [sp + 0xa0]
  8930: a5 = u64 [sp + 0x58]
  8933: jump @890 if a1 <s a5
      : @637
  8937: t0 = a5 >u 0
  8939: a1 = u64 [sp + 0x140]
  8943: ra = a1 - s1
  8946: t2 = a4 + a0
  8949: u64 [sp + 0xa0] = a0
  8953: s1 = a0 - s1
  8956: s1 = s1 + a1
  8959: u64 [sp + 0x140] = ra
  8963: a4 = ra + 0xfffffffffffffffe
  8966: i32 a1 = t2 + 0x2
  8969: a4 = a4 <s a5
  8972: a0 = t0 & a4
  8975: s1 = a1 if a0 != 0
  8978: a1 = u64 [sp + 0x70]
  8981: a1 = a1 & 0x12000
  8986: u64 [sp + 0x98] = s1
  8990: i32 a0 = s1 + a3
  8993: u64 [sp + 0x170] = a0
  8997: u64 [sp + 0x158] = a1
  9001: jump @666 if a1 != 0
      : @638
  9005: i32 a0 = t1 + 0
  9007: a1 = u64 [sp + 0x170]
  9011: jump @666 if a1 >=s a0
      : @639
  9015: a0 = u64 [sp + 0x170]
  9019: i32 s1 = t1 - a0
  9022: a0 = 0x100
  9026: a2 = minu(s1, a0)
  9029: a0 = sp + 0x1eb8
  9033: a1 = 0x20
  9036: ra = 302, jump @1314
      : @640 [@dyn 151]
  9042: jump @662 if s1 <u 256
      : @641
  9048: a2 = u64 [sp + 0x160]
  9052: t1 = u64 [sp + 0xa8]
  9056: a3 = u64 [sp + 0x60]
  9059: jump @643
      : @642
  9061: i32 s1 = s1 + 0xffffffffffffff00
  9065: jump @663 if s1 <=u 255
      : @643
  9071: a0 = u8 [a2]
  9073: a0 = a0 & 0x20
  9076: jump @642 if a0 != 0
      : @644
  9079: a0 = sp + 0x1eb8
  9083: a1 = 0x100
  9087: ra = 304, jump @141
      : @645 [@dyn 152]
  9093: a3 = u64 [sp + 0x60]
  9096: t1 = u64 [sp + 0xa8]
  9100: a2 = u64 [sp + 0x160]
  9104: jump @642
      : @646
  9106: a2 = 0xa
  9109: fallthrough
      : @647
  9110: t0 = 0x1b04
  9114: t1 = a0 << 0x2
  9117: a1 = u64 [sp + 0x58]
  9120: t0 = 0x4 if a1 != 0
  9123: s1 = sp + 0x1f0
  9127: u64 [sp + 0x30] = t1
  9130: s1 = s1 + t1
  9133: a3 = s1 + t0
  9136: t1 = 0xffffffffffff0000
  9141: a0 = a3 + t1
  9144: u64 [sp + 0x170] = a0
  9148: a1 = i32 [a0]
  9150: i32 a0 = a1 /u a2
  9153: u64 [sp + 0x80] = a0
  9157: a0 = a0 * a2
  9160: i32 s1 = a1 - a0
  9163: u64 [sp + 0x20] = a3
  9166: a0 = a3 + 0xffffffffffff0004
  9171: u64 [sp + 0x40] = s1
  9174: u64 [sp + 0x140] = ra
  9178: jump @650 if s1 != 0
      : @648
  9181: jump @650 if a0 != ra
      : @649
  9184: a3 = u64 [sp + 0x68]
  9187: a0 = u64 [sp + 0x170]
  9191: t1 = u64 [sp + 0x90]
  9195: t0 = u64 [sp + 0xa0]
  9199: jump @748
      : @650
  9202: u64 [sp + 0x18] = a0
  9205: u64 [sp + 0x28] = a1
  9208: u64 [sp + 0x10] = t0
  9211: u64 [sp + 0x38] = a2
  9214: u64 [sp + 0x98] = a5
  9218: u64 [sp + 0x158] = a4
  9222: a0 = 0x2
  9225: ra = 306, jump @1067
      : @651 [@dyn 153]
  9231: a3 = u64 [sp + 0xd8]
  9235: ra = 308, jump @1202
      : @652 [@dyn 154]
  9241: s1 = a0
  9243: a0 = u64 [sp + 0x80]
  9247: a0 = a0 & 0x1
  9250: u64 [sp + 0x58] = a1
  9253: jump @656 if a0 != 0
      : @653
  9256: u64 [sp + 0x80] = s1
  9260: a0 = u64 [sp + 0x118]
  9264: a2 = u64 [sp + 0x38]
  9267: s1 = u64 [sp + 0x40]
  9270: jump @660 if a2 != a0
      : @654
  9273: a0 = u64 [sp + 0x158]
  9277: a1 = u64 [sp + 0x170]
  9281: jump @660 if a0 >=u a1
      : @655
  9284: s1 = u64 [sp + 0x20]
  9287: s1 = s1 + 0xffffffffffff0000
  9292: a0 = u8 [s1 + 0xfffffffffffffffc]
  9295: a0 = a0 & 0x1
  9298: s1 = u64 [sp + 0x80]
  9302: jump @659 if a0 == 0
      : @656
  9305: a0 = 0x2
  9308: ra = 310, jump @1067
      : @657 [@dyn 155]
  9314: a2 = a0
  9316: a3 = a1
  9318: a0 = s1
  9320: a1 = u64 [sp + 0x58]
  9323: ra = 312, jump @1073
      : @658 [@dyn 156]
  9329: u64 [sp + 0x80] = a0
  9333: u64 [sp + 0x58] = a1
  9336: a2 = u64 [sp + 0x38]
  9339: s1 = u64 [sp + 0x40]
  9342: jump @660
      : @659
  9344: a2 = u64 [sp + 0x38]
  9347: s1 = u64 [sp + 0x40]
  9350: fallthrough
      : @660
  9351: i32 a0 = a2 >> 0x1
  9354: jump @717 if s1 >=u a0
      : @661
  9358: a0 = u64 [sp + 0xd0]
  9362: ra = 0x15e
  9366: jump @994
      : @662
  9369: a2 = u64 [sp + 0x160]
  9373: t1 = u64 [sp + 0xa8]
  9377: a3 = u64 [sp + 0x60]
  9380: fallthrough
      : @663
  9381: a0 = u8 [a2]
  9383: a0 = a0 & 0x20
  9386: jump @666 if a0 != 0
      : @664
  9389: a0 = sp + 0x1eb8
  9393: a1 = s1
  9395: ra = 314, jump @141
      : @665 [@dyn 157]
  9401: a3 = u64 [sp + 0x60]
  9404: t1 = u64 [sp + 0xa8]
  9408: a2 = u64 [sp + 0x160]
  9412: fallthrough
      : @666
  9413: a0 = u8 [a2]
  9415: a0 = a0 & 0x20
  9418: jump @669 if a0 != 0
      : @667
  9421: a0 = u64 [sp + 0x48]
  9424: a1 = a3
  9426: ra = 316, jump @141
      : @668 [@dyn 158]
  9432: t1 = u64 [sp + 0xa8]
  9436: a2 = u64 [sp + 0x160]
  9440: fallthrough
      : @669
  9441: a1 = u64 [sp + 0x158]
  9445: jump @682 if a1 != 65536
      : @670
  9451: i32 a0 = t1 + 0
  9453: a1 = u64 [sp + 0x170]
  9457: jump @682 if a1 >=s a0
      : @671
  9460: a0 = u64 [sp + 0x170]
  9464: i32 s1 = t1 - a0
  9467: a0 = 0x100
  9471: a2 = minu(s1, a0)
  9474: a0 = sp + 0x1eb8
  9478: a1 = 0x30
  9481: ra = 318, jump @1314
      : @672 [@dyn 159]
  9487: jump @678 if s1 <u 256
      : @673
  9492: a2 = u64 [sp + 0x160]
  9496: jump @675
      : @674
  9498: i32 s1 = s1 + 0xffffffffffffff00
  9502: jump @679 if s1 <=u 255
      : @675
  9507: a0 = u8 [a2]
  9509: a0 = a0 & 0x20
  9512: jump @674 if a0 != 0
      : @676
  9515: a0 = sp + 0x1eb8
  9519: a1 = 0x100
  9523: ra = 320, jump @141
      : @677 [@dyn 160]
  9529: a2 = u64 [sp + 0x160]
  9533: jump @674
      : @678
  9535: a2 = u64 [sp + 0x160]
  9539: fallthrough
      : @679
  9540: a0 = u8 [a2]
  9542: a0 = a0 & 0x20
  9545: jump @682 if a0 != 0
      : @680
  9548: a0 = sp + 0x1eb8
  9552: a1 = s1
  9554: ra = 322, jump @141
      : @681 [@dyn 161]
  9560: a2 = u64 [sp + 0x160]
  9564: fallthrough
      : @682
  9565: a0 = u8 [a2]
  9567: a0 = a0 & 0x20
  9570: jump @685 if a0 != 0
      : @683
  9573: a0 = sp + 0x1c7
  9577: a1 = u64 [sp + 0x140]
  9581: ra = 324, jump @141
      : @684 [@dyn 162]
  9587: a2 = u64 [sp + 0x160]
  9591: fallthrough
      : @685
  9592: a0 = u64 [sp + 0xa0]
  9596: a1 = u64 [sp + 0x140]
  9600: a0 = a0 + a1
  9603: s1 = u64 [sp + 0x98]
  9607: i32 s1 = s1 - a0
  9610: jump @697 if s1 <=s 0
      : @686
  9613: a0 = 0x100
  9617: a2 = minu(s1, a0)
  9620: a0 = sp + 0x1eb8
  9624: a1 = 0x30
  9627: ra = 326, jump @1314
      : @687 [@dyn 163]
  9633: a0 = s1
  9635: a1 = 0x100
  9639: jump @693 if s1 <u a1
      : @688
  9642: a2 = u64 [sp + 0x160]
  9646: s1 = a0
  9648: jump @690
      : @689
  9650: i32 s1 = s1 + 0xffffffffffffff00
  9654: jump @694 if s1 <=u 255
      : @690
  9659: a0 = u8 [a2]
  9661: a0 = a0 & 0x20
  9664: jump @689 if a0 != 0
      : @691
  9667: a0 = sp + 0x1eb8
  9671: a1 = 0x100
  9675: ra = 328, jump @141
      : @692 [@dyn 164]
  9681: a2 = u64 [sp + 0x160]
  9685: jump @689
      : @693
  9687: a2 = u64 [sp + 0x160]
  9691: s1 = a0
  9693: fallthrough
      : @694
  9694: a0 = u8 [a2]
  9696: a0 = a0 & 0x20
  9699: jump @697 if a0 != 0
      : @695
  9702: a0 = sp + 0x1eb8
  9706: a1 = s1
  9708: ra = 330, jump @141
      : @696 [@dyn 165]
  9714: a2 = u64 [sp + 0x160]
  9718: fallthrough
      : @697
  9719: a0 = u8 [a2]
  9721: a0 = a0 & 0x20
  9724: jump @699 if a0 != 0
      : @698
  9727: a0 = u64 [sp + 0x50]
  9730: a1 = u64 [sp + 0xa0]
  9734: ra = 332, jump @141
      : @699 [@dyn 166]
  9740: t1 = u64 [sp + 0x148]
  9744: a5 = u64 [sp + 0x150]
  9748: a1 = u64 [sp + 0xa8]
  9752: a3 = u64 [sp + 0x158]
  9756: jump @712 if a3 != 8192
      : @700
  9762: i32 a0 = a1 + 0
  9764: a3 = u64 [sp + 0x170]
  9768: jump @712 if a3 >=s a0
      : @701
  9772: a0 = u64 [sp + 0x170]
  9776: i32 s1 = a1 - a0
  9779: a0 = 0x100
  9783: a2 = minu(s1, a0)
  9786: a0 = sp + 0x1eb8
  9790: a1 = 0x20
  9793: ra = 334, jump @1314
      : @702 [@dyn 167]
  9799: a0 = s1
  9801: jump @708 if s1 <u 256
      : @703
  9806: t1 = u64 [sp + 0x148]
  9810: a2 = u64 [sp + 0x160]
  9814: a5 = u64 [sp + 0x150]
  9818: a1 = u64 [sp + 0xa8]
  9822: s1 = a0
  9824: jump @705
      : @704
  9826: i32 s1 = s1 + 0xffffffffffffff00
  9830: jump @709 if s1 <=u 255
      : @705
  9835: a0 = u8 [a2]
  9837: a0 = a0 & 0x20
  9840: jump @704 if a0 != 0
      : @706
  9843: a0 = sp + 0x1eb8
  9847: a1 = 0x100
  9851: ra = 336, jump @141
      : @707 [@dyn 168]
  9857: a1 = u64 [sp + 0xa8]
  9861: a5 = u64 [sp + 0x150]
  9865: a2 = u64 [sp + 0x160]
  9869: t1 = u64 [sp + 0x148]
  9873: jump @704
      : @708
  9875: t1 = u64 [sp + 0x148]
  9879: a2 = u64 [sp + 0x160]
  9883: a5 = u64 [sp + 0x150]
  9887: a1 = u64 [sp + 0xa8]
  9891: s1 = a0
  9893: fallthrough
      : @709
  9894: a0 = u8 [a2]
  9896: a0 = a0 & 0x20
  9899: jump @712 if a0 != 0
      : @710
  9902: a0 = sp + 0x1eb8
  9906: a1 = s1
  9908: ra = 338, jump @141
      : @711 [@dyn 169]
  9914: a1 = u64 [sp + 0xa8]
  9918: a5 = u64 [sp + 0x150]
  9922: t1 = u64 [sp + 0x148]
  9926: fallthrough
      : @712
  9927: i32 a0 = a1 + 0
  9929: a1 = u64 [sp + 0x170]
  9933: a3 = maxs(a0, a1)
  9936: jump @890 if a3 <s 0
      : @713
  9940: jump @276
      : @714
  9943: i32 a2 = t0 + 0
  9945: a1 = 0x20
  9948: a0 = u64 [sp + 0x160]
  9952: a3 = 0
  9954: s1 = u64 [sp + 0x70]
  9957: a4 = s1
  9959: ra = 340, jump @944
      : @715 [@dyn 170]
  9965: a3 = u64 [sp + 0xa8]
  9969: a2 = u64 [sp + 0x160]
  9973: a5 = 0
  9975: jump @722
      : @716
  9977: a2 = u64 [sp + 0x160]
  9981: a3 = u64 [sp + 0xa8]
  9985: jump @722
      : @717
  9987: a1 = u64 [sp + 0x140]
  9991: jump @727 if s1 != a0
      : @718
  9994: a0 = u64 [sp + 0x18]
  9997: jump @727 if a0 != a1
      : @719
 10000: a0 = u64 [sp + 0xc0]
 10004: ra = 0x15e
 10008: jump @994
      : @720
 10011: a2 = u64 [sp + 0x160]
 10015: a3 = u64 [sp + 0xa8]
 10019: s1 = u64 [sp + 0x70]
 10022: jump @722
      : @721
 10024: s1 = u64 [sp + 0x70]
 10027: fallthrough
      : @722
 10028: a4 = s1 ^ 0x2000
 10032: i32 a3 = a3 + 0
 10034: u64 [sp + 0x170] = a3
 10038: i32 s1 = a5 + 0
 10040: a1 = 0x20
 10043: a0 = a2
 10045: a2 = a3
 10047: a3 = s1
 10049: ra = 342, jump @944
      : @723 [@dyn 171]
 10055: a0 = u64 [sp + 0x170]
 10059: a3 = maxs(a0, s1)
 10062: t1 = u64 [sp + 0x148]
 10066: a5 = u64 [sp + 0x150]
 10070: jump @276
      : @724 [@dyn 172]
 10073: a3 = 0
 10075: a0 = u64 [sp + 0x1a0]
 10079: u32 [a0] = t1
 10081: jump @276
      : @725 [@dyn 173]
 10084: a3 = 0
 10086: a0 = u64 [sp + 0x1a0]
 10090: u16 [a0] = t1
 10092: jump @276
      : @726 [@dyn 174]
 10095: a3 = 0
 10097: a0 = u64 [sp + 0x1a0]
 10101: u8 [a0] = t1
 10103: jump @276
      : @727
 10106: a0 = u64 [sp + 0xb8]
 10110: ra = 350, jump @994
      : @728 [@dyn 175]
 10116: a3 = a0
 10118: a4 = a1
 10120: a0 = u64 [sp + 0x48]
 10123: a2 = u64 [sp + 0x28]
 10126: jump @734 if a0 != 0
      : @729
 10129: a0 = u64 [sp + 0x78]
 10132: a0 = u8 [a0]
 10134: jump @734 if a0 != 45
      : @730
 10138: a0 = 0xffffffffffffffff
 10141: u64 [sp + 0x40] = a3
 10144: u64 [sp + 0x48] = a4
 10147: ra = 352, jump @1067
      : @731 [@dyn 176]
 10153: a2 = a0
 10155: u64 [sp + 0x20] = a0
 10158: a3 = a1
 10160: u64 [sp + 0x18] = a1
 10163: a0 = u64 [sp + 0x80]
 10167: a1 = u64 [sp + 0x58]
 10170: ra = 354, jump @1005
      : @732 [@dyn 177]
 10176: u64 [sp + 0x80] = a0
 10180: u64 [sp + 0x58] = a1
 10183: a0 = u64 [sp + 0x40]
 10186: a1 = u64 [sp + 0x48]
 10189: a2 = u64 [sp + 0x20]
 10192: a3 = u64 [sp + 0x18]
 10195: ra = 356, jump @1005
      : @733 [@dyn 178]
 10201: a2 = u64 [sp + 0x28]
 10204: a3 = a0
 10206: a4 = a1
 10208: fallthrough
      : @734
 10209: a0 = u64 [sp + 0x170]
 10213: i32 a2 = a2 - s1
 10216: u64 [sp + 0x48] = a2
 10219: u32 [a0] = a2
 10221: a0 = u64 [sp + 0x80]
 10225: s1 = u64 [sp + 0x58]
 10228: a1 = s1
 10230: a2 = a3
 10232: a3 = a4
 10234: ra = 358, jump @1073
      : @735 [@dyn 179]
 10240: a2 = u64 [sp + 0x80]
 10244: a3 = s1
 10246: ra = 360, jump @973
      : @736 [@dyn 180]
 10252: jump @742 if a0 == 0
      : @737
 10255: a0 = u64 [sp + 0x38]
 10258: a1 = u64 [sp + 0x48]
 10261: i32 a0 = a0 + a1
 10264: a1 = u64 [sp + 0x170]
 10268: u32 [a1] = a0
 10270: t2 = u64 [sp + 0x160]
 10274: s1 = 0xa
 10277: a1 = u64 [sp + 0x118]
 10281: t0 = u64 [sp + 0xa0]
 10285: a3 = u64 [sp + 0x68]
 10288: a4 = u64 [sp + 0x158]
 10292: t1 = u64 [sp + 0x90]
 10296: jump @744 if a0 <u a1
      : @738
 10299: a0 = u64 [sp + 0x10]
 10302: a1 = u64 [sp + 0x30]
 10305: a0 = a0 + a1
 10308: a1 = u64 [sp + 0xb0]
 10312: a0 = a0 + a1
 10315: jump @740
      : @739
 10317: a1 = i32 [a0]
 10319: i32 a1 = a1 + 0x1
 10322: u32 [a0] = a1
 10324: a0 = a0 + 0xfffffffffffffffc
 10327: jump @743 if a1 <=u 999999999
      : @740
 10334: u32 [a0 + 4] = 0
 10337: jump @739 if a0 >=u a4
      : @741
 10340: a1 = a4 + 0xfffffffffffffffc
 10343: u32 [a4 + 4294967292] = 0
 10346: a4 = a1
 10348: jump @739
      : @742
 10350: t2 = u64 [sp + 0x160]
 10354: t0 = u64 [sp + 0xa0]
 10358: a3 = u64 [sp + 0x68]
 10361: a4 = u64 [sp + 0x158]
 10365: a5 = u64 [sp + 0x98]
 10369: t1 = u64 [sp + 0x90]
 10373: a0 = u64 [sp + 0x170]
 10377: jump @748
      : @743
 10379: a0 = a0 + 0x4
 10382: u64 [sp + 0x170] = a0
 10386: fallthrough
      : @744
 10387: a0 = i32 [a4]
 10389: a1 = u64 [sp + 0x88]
 10393: a1 = a1 - a4
 10396: a2 = a1 >> 0x2
 10399: a1 = a1 << 0x1
 10402: i32 a5 = a1 + a2
 10405: jump @747 if a0 <u s1
      : @745
 10408: a1 = 0xa
 10411: fallthrough
      : @746
 10412: i32 a1 = a1 * s1
 10415: i32 a5 = a5 + 0x1
 10418: jump @746 if a0 >=u a1
      : @747
 10421: a0 = u64 [sp + 0x170]
 10425: fallthrough
      : @748
 10426: a0 = a0 + 0x4
 10429: s1 = u64 [sp + 0x140]
 10433: s1 = minu(s1, a0)
 10436: a0 = u64 [sp + 0x88]
 10440: a1 = s1 - a0
 10443: fallthrough
      : @749
 10444: ra = s1
 10446: a0 = a1
 10448: jump @751 if a4 >=u s1
      : @750
 10451: a2 = i32 [ra + 0xfffffffffffffffc]
 10454: s1 = ra + 0xfffffffffffffffc
 10457: a1 = a0 + 0xfffffffffffffffc
 10460: jump @749 if a2 == 0
      : @751
 10463: u64 [sp + 0x158] = a4
 10467: a2 = u64 [sp + 0x50]
 10470: u64 [sp + 0x140] = ra
 10474: jump @757 if a2 != 103
      : @752
 10478: t0 = 0x1 if t1 == 0
 10481: a1 = a5 <s 0xfffffffffffffffc
 10484: i32 a2 = t0 + 0
 10486: a1 = a1 ^ 0x1
 10489: a2 = a5 <s a2
 10492: a1 = a1 & a2
 10495: t1 = a5
 10497: a2 = a5 ^ 0xffffffffffffffff
 10500: a3 = a3 + a1
 10503: a2 = 0xffffffffffffffff if a1 == 0
 10506: a1 = u64 [sp + 0x70]
 10509: a1 = a1 & 0x8
 10512: a3 = a3 + 0xfffffffffffffffe
 10515: i32 t0 = a2 + t0
 10518: jump @758 if a1 != 0
      : @753
 10521: a5 = a3
 10523: a1 = 0x9
 10526: jump @761 if a4 >=u ra
      : @754
 10529: a2 = i32 [ra + 0xfffffffffffffffc]
 10532: s1 = 0xa
 10535: jump @761 if a2 == 0
      : @755
 10538: a1 = u64 [sp + 0x108]
 10542: a1 = a2 * a1
 10545: i32 a1 = a1 >>r 0x1
 10548: a3 = u64 [sp + 0xc8]
 10552: jump @759 if a3 >=u a1
      : @756
 10555: a1 = 0
 10557: jump @761
      : @757
 10559: a0 = u64 [sp + 0x70]
 10562: a1 = a0 & 0x8
 10565: ra = sp + 0x1c7
 10569: jump @764
      : @758
 10571: ra = sp + 0x1c7
 10575: a5 = t1
 10577: jump @764
      : @759
 10579: a1 = 0
 10581: a3 = 0xa
 10584: fallthrough
      : @760
 10585: a3 = a3 * s1
 10588: i32 a4 = a2 %u a3
 10591: a1 = a1 + 0x1
 10594: jump @760 if a4 == 0
      : @761
 10597: a2 = a5 & 0xffffffffffffffdf
 10600: a3 = a0 >>a 0x2
 10603: a0 = a0 << 0x1
 10606: a0 = a0 + a3
 10609: jump @763 if a2 == 70
      : @762
 10613: a0 = a0 + t1
 10616: fallthrough
      : @763
 10617: a0 = a0 - a1
 10620: a1 = 0
 10622: a0 = a0 + 0xfffffffffffffff7
 10625: u64 [0x30000] = t0
 10630: t0 = a0 >s 0
 10632: a0 = 0 if t0 == 0
 10634: t0 = u64 [0x30000]
 10639: t0 = mins(a0, t0)
 10642: ra = sp + 0x1c7
 10646: a3 = a5
 10648: a5 = t1
 10650: fallthrough
      : @764
 10651: u64 [sp + 0x90] = a1
 10655: a0 = t0 | a1
 10658: i32 a2 = t0 + 0
 10660: i32 a0 = a0 + 0
 10662: u64 [sp + 0x50] = a0
 10665: a0 = a0 >u 0
 10667: a1 = 0x7ffffffe - a0
 10673: u64 [sp + 0x58] = a2
 10676: jump @890 if a1 <s a2
      : @765
 10680: a0 = a0 + t0
 10683: t1 = a0 + 0x1
 10686: a1 = a3 & 0xffffffffffffffdf
 10689: a0 = u64 [sp + 0x168]
 10693: i32 a2 = a0 - t1
 10696: u64 [sp + 0xa0] = t0
 10700: u64 [sp + 0x170] = a1
 10704: jump @768 if a1 != 70
      : @766
 10708: jump @890 if a2 <s a5
      : @767
 10712: u64 [0x30000] = t0
 10717: t0 = a5 >s 0
 10719: a2 = a5
 10721: a2 = 0 if t0 == 0
 10723: t0 = u64 [0x30000]
 10728: jump @779
      : @768
 10731: u64 [sp + 0x80] = a2
 10735: u64 [sp + 0x68] = a3
 10738: u64 [sp + 0x98] = a5
 10742: jump @772 if a5 == 0
      : @769
 10745: i32 a2 = -a5
 10747: a5 = maxs(a5, a2)
 10750: a4 = sp + 0x1c7
 10754: a3 = a4
 10756: a0 = u64 [sp + 0x108]
 10760: ra = 0x9
 10763: t0 = 0xa
 10766: fallthrough
      : @770
 10767: s1 = a5
 10769: a5 = a0 << 0x20
 10772: a2 = a4 + 0xffffffffffffffff
 10775: a5 = a5 + a0
 10778: a5 = s1 mulhu a5
 10781: a5 = a5 >> 0x3
 10784: a1 = a5 * t0
 10787: i32 a1 = s1 - a1
 10790: a1 = a1 | 0x30
 10793: u8 [a4 + 0xffffffffffffffff] = a1
 10796: a3 = a3 + 0xffffffffffffffff
 10799: a4 = a2
 10801: jump @770 if ra <u s1
      : @771
 10804: jump @773
      : @772
 10806: a2 = sp + 0x1c7
 10810: a3 = a2
 10812: fallthrough
      : @773
 10813: a0 = sp + 0x1c7
 10817: a1 = a0 - a3
 10820: ra = sp + 0x1c7
 10824: jump @777 if a1 >s 1
      : @774
 10828: a4 = a0 - a2
 10831: a1 = 0x30
 10834: a5 = 0x2
 10837: fallthrough
      : @775
 10838: a3 = a2 + 0xffffffffffffffff
 10841: a4 = a4 + 0x1
 10844: u8 [a2 + 0xffffffffffffffff] = a1
 10847: a2 = a3
 10849: jump @775 if a4 <s a5
      : @776
 10852: jump @778
      : @777
 10854: a3 = a2
 10856: fallthrough
      : @778
 10857: a1 = u64 [sp + 0x98]
 10861: a1 = a1 <s 0
 10863: a4 = 0x2d
 10866: a5 = a3 + 0xfffffffffffffffe
 10869: a4 = 0x2b if a1 == 0
 10872: u64 [sp + 0x48] = a5
 10875: a2 = a0 - a5
 10878: a0 = u64 [sp + 0x68]
 10881: u8 [a3 + 0xfffffffffffffffe] = a0
 10884: u8 [a3 + 0xffffffffffffffff] = a4
 10887: a0 = u64 [sp + 0x80]
 10891: jump @890 if a0 <s a2
      : @779
 10895: i32 a0 = a2 + t1
 10898: a1 = u64 [sp + 0x168]
 10902: a2 = u64 [sp + 0x60]
 10905: a1 = a1 ^ a2
 10908: jump @890 if a1 <s a0
      : @780
 10912: a2 = u64 [sp + 0x70]
 10915: a2 = a2 & 0x12000
 10920: a1 = u64 [sp + 0x60]
 10923: i32 a0 = a0 + a1
 10926: u64 [sp + 0x98] = a0
 10930: u64 [sp + 0x80] = a2
 10934: a1 = u64 [sp + 0xa8]
 10938: jump @793 if a2 != 0
      : @781
 10942: i32 a0 = a1 + 0
 10944: a2 = u64 [sp + 0x98]
 10948: jump @793 if a2 >=s a0
      : @782
 10952: a0 = u64 [sp + 0x98]
 10956: i32 s1 = a1 - a0
 10959: a0 = 0x100
 10963: a2 = minu(s1, a0)
 10966: a0 = sp + 0x1eb8
 10970: a1 = 0x20
 10973: ra = 362, jump @1314
      : @783 [@dyn 181]
 10979: jump @789 if s1 <u 256
      : @784
 10984: t2 = u64 [sp + 0x160]
 10988: ra = sp + 0x1c7
 10992: jump @786
      : @785
 10994: i32 s1 = s1 + 0xffffffffffffff00
 10998: jump @790 if s1 <=u 255
      : @786
 11003: a0 = u8 [t2]
 11005: a0 = a0 & 0x20
 11008: jump @785 if a0 != 0
      : @787
 11011: a0 = sp + 0x1eb8
 11015: a1 = 0x100
 11019: a2 = t2
 11021: ra = 364, jump @141
      : @788 [@dyn 182]
 11027: ra = sp + 0x1c7
 11031: t2 = u64 [sp + 0x160]
 11035: jump @785
      : @789
 11037: t2 = u64 [sp + 0x160]
 11041: ra = sp + 0x1c7
 11045: fallthrough
      : @790
 11046: a0 = u8 [t2]
 11048: a0 = a0 & 0x20
 11051: jump @793 if a0 != 0
      : @791
 11054: a0 = sp + 0x1eb8
 11058: a1 = s1
 11060: a2 = t2
 11062: ra = 366, jump @141
      : @792 [@dyn 183]
 11068: ra = sp + 0x1c7
 11072: t2 = u64 [sp + 0x160]
 11076: fallthrough
      : @793
 11077: a0 = u8 [t2]
 11079: a0 = a0 & 0x20
 11082: jump @796 if a0 != 0
      : @794
 11085: a0 = u64 [sp + 0x78]
 11088: a1 = u64 [sp + 0x60]
 11091: a2 = t2
 11093: ra = 368, jump @141
      : @795 [@dyn 184]
 11099: ra = sp + 0x1c7
 11103: t2 = u64 [sp + 0x160]
 11107: fallthrough
      : @796
 11108: a5 = u64 [sp + 0x108]
 11112: t0 = 0x9
 11115: t1 = 0x30
 11118: a1 = u64 [sp + 0x80]
 11122: jump @809 if a1 != 65536
      : @797
 11129: a0 = i32 [sp + 0xa8]
 11133: a1 = u64 [sp + 0x98]
 11137: jump @809 if a1 >=s a0
      : @798
 11141: a0 = u64 [sp + 0xa8]
 11145: a1 = u64 [sp + 0x98]
 11149: i32 s1 = a0 - a1
 11152: a0 = 0x100
 11156: a2 = minu(s1, a0)
 11159: a0 = sp + 0x1eb8
 11163: a1 = 0x30
 11166: ra = 370, jump @1314
      : @799 [@dyn 185]
 11172: a0 = s1
 11174: a1 = 0x100
 11178: jump @805 if s1 <u a1
      : @800
 11181: t2 = u64 [sp + 0x160]
 11185: a5 = u64 [sp + 0x108]
 11189: t0 = 0x9
 11192: t1 = 0x30
 11195: ra = sp + 0x1c7
 11199: s1 = a0
 11201: jump @802
      : @801
 11203: i32 s1 = s1 + 0xffffffffffffff00
 11207: jump @806 if s1 <=u 255
      : @802
 11212: a0 = u8 [t2]
 11214: a0 = a0 & 0x20
 11217: jump @801 if a0 != 0
      : @803
 11220: a0 = sp + 0x1eb8
 11224: a1 = 0x100
 11228: a2 = t2
 11230: ra = 372, jump @141
      : @804 [@dyn 186]
 11236: ra = sp + 0x1c7
 11240: t1 = 0x30
 11243: t0 = 0x9
 11246: a5 = u64 [sp + 0x108]
 11250: t2 = u64 [sp + 0x160]
 11254: jump @801
      : @805
 11256: t2 = u64 [sp + 0x160]
 11260: a5 = u64 [sp + 0x108]
 11264: t0 = 0x9
 11267: t1 = 0x30
 11270: ra = sp + 0x1c7
 11274: s1 = a0
 11276: fallthrough
      : @806
 11277: a0 = u8 [t2]
 11279: a0 = a0 & 0x20
 11282: jump @809 if a0 != 0
      : @807
 11285: a0 = sp + 0x1eb8
 11289: a1 = s1
 11291: a2 = t2
 11293: ra = 374, jump @141
      : @808 [@dyn 187]
 11299: ra = sp + 0x1c7
 11303: t1 = 0x30
 11306: t0 = 0x9
 11309: a5 = u64 [sp + 0x108]
 11313: t2 = u64 [sp + 0x160]
 11317: fallthrough
      : @809
 11318: a1 = u64 [sp + 0x170]
 11322: jump @827 if a1 != 70
      : @810
 11327: a0 = u64 [sp + 0x88]
 11331: a1 = u64 [sp + 0x158]
 11335: a4 = minu(a1, a0)
 11338: u64 [sp + 0x170] = a4
 11342: s1 = 0xa
 11345: jump @812
      : @811
 11347: a4 = a4 + 0x4
 11350: a0 = u64 [sp + 0x88]
 11354: jump @852 if a0 <u a4
      : @812
 11358: a2 = u32 [a4]
 11360: jump @818 if a2 == 0
      : @813
 11363: t2 = a4
 11365: a1 = 0xfffffffffffffff6
 11368: a0 = sp + 0x1d0
 11372: fallthrough
      : @814
 11373: a3 = a2
 11375: a2 = a5 << 0x20
 11378: a2 = a2 + a5
 11381: a2 = a3 mulhu a2
 11384: a2 = a2 >> 0x3
 11387: a4 = a2 * s1
 11390: i32 a4 = a3 - a4
 11393: a4 = a4 | 0x30
 11396: u8 [a0 + 0xffffffffffffffff] = a4
 11399: a0 = a0 + 0xffffffffffffffff
 11402: a1 = a1 + 0x1
 11405: jump @814 if t0 <u a3
      : @815
 11408: a4 = t2
 11410: a2 = u64 [sp + 0x170]
 11414: jump @822 if t2 == a2
      : @816
 11417: a1 = -a1
 11419: a2 = 0x2
 11422: t2 = u64 [sp + 0x160]
 11426: jump @819 if a1 >=s a2
      : @817
 11429: jump @824
      : @818
 11431: a0 = sp + 0x1d0
 11435: a1 = u64 [sp + 0x170]
 11439: jump @823 if a4 == a1
      : @819
 11442: a1 = a0
 11444: fallthrough
      : @820
 11445: a0 = a1 + 0xffffffffffffffff
 11448: u8 [a1 + 0xffffffffffffffff] = t1
 11451: a1 = a0
 11453: jump @820 if ra <u a0
      : @821
 11456: jump @824
      : @822
 11458: a2 = 0xfffffffffffffff6
 11461: t2 = u64 [sp + 0x160]
 11465: jump @824 if a1 != a2
      : @823
 11468: u8 [sp + 0x1cf] = t1
 11472: a0 = sp + 0x1cf
 11476: fallthrough
      : @824
 11477: a1 = u8 [t2]
 11479: a1 = a1 & 0x20
 11482: jump @811 if a1 != 0
      : @825
 11486: a1 = sp + 0x1d0
 11490: a1 = a1 - a0
 11493: a2 = t2
 11495: s1 = a4
 11497: ra = 376, jump @141
      : @826 [@dyn 188]
 11503: a4 = s1
 11505: ra = sp + 0x1c7
 11509: t1 = 0x30
 11512: s1 = 0xa
 11515: t0 = 0x9
 11518: a5 = u64 [sp + 0x108]
 11522: t2 = u64 [sp + 0x160]
 11526: jump @811
      : @827
 11529: a4 = 0xa
 11532: a0 = u64 [sp + 0x58]
 11535: jump @871 if a0 <s 0
      : @828
 11539: t0 = u64 [sp + 0x158]
 11543: a2 = u64 [sp + 0x140]
 11547: a0 = t0 <u a2
 11550: a3 = t0 + 0x4
 11553: a3 = a2 if a0 != 0
 11556: u64 [sp + 0x140] = a3
 11560: s1 = u64 [sp + 0xa0]
 11564: fallthrough
      : @829
 11565: a0 = u32 [t0]
 11567: jump @836 if a0 == 0
      : @830
 11570: a1 = sp + 0x1d0
 11574: fallthrough
      : @831
 11575: a2 = a0
 11577: a0 = a5 << 0x20
 11580: a0 = a0 + a5
 11583: a0 = a2 mulhu a0
 11586: a0 = a0 >> 0x3
 11589: a3 = a0 * a4
 11592: i32 a3 = a2 - a3
 11595: a3 = a3 | 0x30
 11598: t2 = a1 + 0xffffffffffffffff
 11601: u8 [a1 + 0xffffffffffffffff] = a3
 11604: a3 = t2
 11606: a1 = t2
 11608: jump @831 if a2 >=u a4
      : @832
 11611: a0 = u64 [sp + 0x158]
 11615: jump @837 if t0 == a0
      : @833
 11618: t2 = u64 [sp + 0x160]
 11622: jump @845 if ra >=u a3
      : @834
 11626: a2 = a3 + 0xffffffffffffffff
 11629: u8 [a3 + 0xffffffffffffffff] = t1
 11632: a3 = a2
 11634: jump @834 if ra <u a2
      : @835
 11637: jump @846
      : @836
 11640: u8 [sp + 0x1cf] = t1
 11644: a3 = sp + 0x1cf
 11648: a0 = u64 [sp + 0x158]
 11652: jump @833 if t0 != a0
      : @837
 11655: t2 = u64 [sp + 0x160]
 11659: a0 = u8 [t2]
 11661: a0 = a0 & 0x20
 11664: jump @840 if a0 != 0
      : @838
 11667: a1 = 0x1
 11670: a0 = a3
 11672: a2 = t2
 11674: u64 [sp + 0xa0] = s1
 11678: s1 = t0
 11680: u64 [sp + 0x170] = a3
 11684: ra = 378, jump @141
      : @839 [@dyn 189]
 11690: a3 = u64 [sp + 0x170]
 11694: t0 = s1
 11696: s1 = u64 [sp + 0xa0]
 11700: ra = sp + 0x1c7
 11704: t1 = 0x30
 11707: a4 = 0xa
 11710: a5 = u64 [sp + 0x108]
 11714: t2 = u64 [sp + 0x160]
 11718: fallthrough
      : @840
 11719: a2 = a3 + 0x1
 11722: a0 = u64 [sp + 0x90]
 11726: jump @842 if a0 != 0
      : @841
 11729: i32 a0 = s1 + 0
 11731: jump @846 if a0 <=s 0
      : @842
 11734: a0 = u8 [t2]
 11736: a0 = a0 & 0x20
 11739: jump @846 if a0 != 0
      : @843
 11742: a0 = 0x10114
 11747: a1 = 0x1
 11750: u64 [sp + 0x170] = a2
 11754: a2 = t2
 11756: u64 [sp + 0xa0] = s1
 11760: s1 = t0
 11762: ra = 380, jump @141
      : @844 [@dyn 190]
 11768: a2 = u64 [sp + 0x170]
 11772: t0 = s1
 11774: s1 = u64 [sp + 0xa0]
 11778: ra = sp + 0x1c7
 11782: t1 = 0x30
 11785: a4 = 0xa
 11788: a5 = u64 [sp + 0x108]
 11792: t2 = u64 [sp + 0x160]
 11796: jump @846
      : @845
 11798: a2 = a3
 11800: fallthrough
      : @846
 11801: a0 = u8 [t2]
 11803: a0 = a0 & 0x20
 11806: a1 = sp + 0x1d0
 11810: a1 = a1 - a2
 11813: jump @849 if a0 != 0
      : @847
 11816: i32 a0 = s1 + 0
 11818: u64 [sp + 0x170] = a1
 11822: a1 = u64 [sp + 0x170]
 11826: a1 = mins(a1, a0)
 11829: a0 = a2
 11831: a2 = t2
 11833: u64 [sp + 0xa0] = s1
 11837: s1 = t0
 11839: ra = 382, jump @141
      : @848 [@dyn 191]
 11845: a1 = u64 [sp + 0x170]
 11849: t0 = s1
 11851: s1 = u64 [sp + 0xa0]
 11855: ra = sp + 0x1c7
 11859: t1 = 0x30
 11862: a4 = 0xa
 11865: a5 = u64 [sp + 0x108]
 11869: t2 = u64 [sp + 0x160]
 11873: fallthrough
      : @849
 11874: t0 = t0 + 0x4
 11877: i32 s1 = s1 - a1
 11880: a0 = u64 [sp + 0x140]
 11884: jump @872 if t0 >=u a0
      : @850
 11888: jump @829 if s1 >=s 0
      : @851
 11892: jump @872
      : @852
 11895: a0 = u64 [sp + 0x50]
 11898: jump @856 if a0 == 0
      : @853
 11901: a0 = u8 [t2]
 11903: a0 = a0 & 0x20
 11906: jump @856 if a0 != 0
      : @854
 11909: a0 = 0x10114
 11914: a1 = 0x1
 11917: a2 = t2
 11919: s1 = a4
 11921: ra = 384, jump @141
      : @855 [@dyn 192]
 11927: a4 = s1
 11929: ra = sp + 0x1c7
 11933: t1 = 0x30
 11936: s1 = 0xa
 11939: t0 = 0x9
 11942: a5 = u64 [sp + 0x108]
 11946: t2 = u64 [sp + 0x160]
 11950: fallthrough
      : @856
 11951: a0 = u64 [sp + 0x58]
 11954: jump @869 if a0 <=s 0
      : @857
 11958: a0 = u64 [sp + 0x140]
 11962: jump @869 if a4 >=u a0
      : @858
 11966: a1 = u32 [a4]
 11968: a0 = sp + 0x1d0
 11972: jump @862 if a1 == 0
      : @859
 11975: a0 = sp + 0x1d0
 11979: fallthrough
      : @860
 11980: a2 = a1
 11982: a1 = a5 << 0x20
 11985: a1 = a1 + a5
 11988: a1 = a2 mulhu a1
 11991: a1 = a1 >> 0x3
 11994: a3 = a1 * s1
 11997: i32 a3 = a2 - a3
 12000: a3 = a3 | 0x30
 12003: u8 [a0 + 0xffffffffffffffff] = a3
 12006: a0 = a0 + 0xffffffffffffffff
 12009: jump @860 if t0 <u a2
      : @861
 12012: jump @864 if ra >=u a0
      : @862
 12015: a1 = a0
 12017: fallthrough
      : @863
 12018: a0 = a1 + 0xffffffffffffffff
 12021: u8 [a1 + 0xffffffffffffffff] = t1
 12024: a1 = a0
 12026: jump @863 if ra <u a0
      : @864
 12029: a1 = u8 [t2]
 12031: a1 = a1 & 0x20
 12034: a2 = i32 [sp + 0xa0]
 12038: jump @867 if a1 != 0
      : @865
 12041: a1 = mins(a2, t0)
 12044: u64 [sp + 0x170] = a2
 12048: a2 = t2
 12050: s1 = a4
 12052: ra = 386, jump @141
      : @866 [@dyn 193]
 12058: a2 = u64 [sp + 0x170]
 12062: a4 = s1
 12064: ra = sp + 0x1c7
 12068: t1 = 0x30
 12071: s1 = 0xa
 12074: t0 = 0x9
 12077: a5 = u64 [sp + 0x108]
 12081: t2 = u64 [sp + 0x160]
 12085: fallthrough
      : @867
 12086: a4 = a4 + 0x4
 12089: a0 = u64 [sp + 0xa0]
 12093: a0 = a0 + 0xfffffffffffffff7
 12096: u64 [sp + 0xa0] = a0
 12100: a0 = u64 [sp + 0x140]
 12104: jump @869 if a4 >=u a0
      : @868
 12107: jump @858 if t0 <s a2
      : @869
 12111: a2 = u64 [sp + 0xa0]
 12115: i32 a2 = a2 + 0x9
 12118: a1 = 0x30
 12121: a3 = 0x9
 12124: a0 = t2
 12126: a4 = 0
 12128: ra = 388, jump @944
      : @870 [@dyn 194]
 12134: jump @875
      : @871
 12136: s1 = u64 [sp + 0xa0]
 12140: fallthrough
      : @872
 12141: i32 a2 = s1 + 0x12
 12144: a1 = 0x30
 12147: a3 = 0x12
 12150: a0 = t2
 12152: a4 = 0
 12154: ra = 390, jump @944
      : @873 [@dyn 195]
 12160: a2 = u64 [sp + 0x160]
 12164: a0 = u8 [a2]
 12166: a0 = a0 & 0x20
 12169: jump @875 if a0 != 0
      : @874
 12172: a0 = sp + 0x1c7
 12176: a3 = u64 [sp + 0x48]
 12179: a1 = a0 - a3
 12182: a0 = a3
 12184: ra = 392, jump @141
      : @875 [@dyn 196]
 12190: a1 = u64 [sp + 0xa8]
 12194: s1 = u64 [sp + 0x98]
 12198: a2 = u64 [sp + 0x80]
 12202: jump @888 if a2 != 8192
      : @876
 12208: i32 a0 = a1 + 0
 12210: jump @888 if s1 >=s a0
      : @877
 12214: i32 s1 = a1 - s1
 12217: a0 = 0x100
 12221: a2 = minu(s1, a0)
 12224: a0 = sp + 0x1eb8
 12228: a1 = 0x20
 12231: ra = 394, jump @1314
      : @878 [@dyn 197]
 12237: a4 = s1
 12239: jump @884 if s1 <u 256
      : @879
 12244: a2 = u64 [sp + 0x160]
 12248: a1 = u64 [sp + 0xa8]
 12252: s1 = u64 [sp + 0x98]
 12256: jump @881
      : @880
 12258: i32 a4 = a4 + 0xffffffffffffff00
 12262: jump @885 if a4 <=u 255
      : @881
 12267: a0 = u8 [a2]
 12269: a0 = a0 & 0x20
 12272: jump @880 if a0 != 0
      : @882
 12275: a0 = sp + 0x1eb8
 12279: a1 = 0x100
 12283: s1 = a4
 12285: ra = 396, jump @141
      : @883 [@dyn 198]
 12291: a4 = s1
 12293: s1 = u64 [sp + 0x98]
 12297: a1 = u64 [sp + 0xa8]
 12301: a2 = u64 [sp + 0x160]
 12305: jump @880
      : @884
 12307: a2 = u64 [sp + 0x160]
 12311: a1 = u64 [sp + 0xa8]
 12315: s1 = u64 [sp + 0x98]
 12319: fallthrough
      : @885
 12320: a0 = u8 [a2]
 12322: a0 = a0 & 0x20
 12325: jump @888 if a0 != 0
      : @886
 12328: a0 = sp + 0x1eb8
 12332: a1 = a4
 12334: ra = 398, jump @141
      : @887 [@dyn 199]
 12340: a1 = u64 [sp + 0xa8]
 12344: fallthrough
      : @888
 12345: i32 a0 = a1 + 0
 12347: a3 = maxs(a0, s1)
 12350: t1 = u64 [sp + 0x148]
 12354: a5 = u64 [sp + 0x150]
 12358: jump @890 if a3 <s 0
      : @889
 12361: jump @276
      : @890
 12364: ra = 400, jump @230
      : @891 [@dyn 200]
 12370: a1 = 0x4b
 12373: u32 [a0] = a1
 12375: t1 = 0xffffffffffffffff
 12378: jump @930
      : @892
 12381: a0 = u64 [sp + 0x160]
 12385: jump @930 if a0 != 0
      : @893
 12389: a2 = u64 [sp + 0x128]
 12393: a0 = u64 [sp + 0x130]
 12397: jump @913 if a0 == 0
      : @894
 12401: s1 = u64 [sp + 0x100]
 12405: a1 = i32 [s1 + 0x4]
 12408: jump @914 if a1 == 0
      : @895
 12412: a0 = u64 [sp + 0x110]
 12416: a0 = a0 + 0x10
 12419: ra = 402, jump @931
      : @896 [@dyn 201]
 12425: a1 = i32 [s1 + 0x8]
 12428: jump @915 if a1 == 0
      : @897
 12432: a0 = u64 [sp + 0x110]
 12436: a0 = a0 + 0x20
 12439: a2 = u64 [sp + 0x128]
 12443: ra = 404, jump @931
      : @898 [@dyn 202]
 12449: a1 = i32 [s1 + 0xc]
 12452: jump @916 if a1 == 0
      : @899
 12456: a0 = u64 [sp + 0x110]
 12460: a0 = a0 + 0x30
 12463: a2 = u64 [sp + 0x128]
 12467: ra = 406, jump @931
      : @900 [@dyn 203]
 12473: a1 = i32 [s1 + 0x10]
 12476: jump @917 if a1 == 0
      : @901
 12480: a0 = u64 [sp + 0x110]
 12484: a0 = a0 + 0x40
 12487: a2 = u64 [sp + 0x128]
 12491: ra = 408, jump @931
      : @902 [@dyn 204]
 12497: a1 = i32 [s1 + 0x14]
 12500: jump @918 if a1 == 0
      : @903
 12504: a0 = u64 [sp + 0x110]
 12508: a0 = a0 + 0x50
 12511: a2 = u64 [sp + 0x128]
 12515: ra = 410, jump @931
      : @904 [@dyn 205]
 12521: a1 = i32 [s1 + 0x18]
 12524: jump @919 if a1 == 0
      : @905
 12527: a0 = u64 [sp + 0x110]
 12531: a0 = a0 + 0x60
 12534: a2 = u64 [sp + 0x128]
 12538: ra = 412, jump @931
      : @906 [@dyn 206]
 12544: a1 = i32 [s1 + 0x1c]
 12547: jump @920 if a1 == 0
      : @907
 12550: a0 = u64 [sp + 0x110]
 12554: a0 = a0 + 0x70
 12557: a2 = u64 [sp + 0x128]
 12561: ra = 414, jump @931
      : @908 [@dyn 207]
 12567: a1 = i32 [s1 + 0x20]
 12570: jump @921 if a1 == 0
      : @909
 12573: a0 = u64 [sp + 0x110]
 12577: a0 = a0 + 0x80
 12581: a2 = u64 [sp + 0x128]
 12585: ra = 416, jump @931
      : @910 [@dyn 208]
 12591: a1 = i32 [s1 + 0x24]
 12594: jump @922 if a1 == 0
      : @911
 12597: a0 = u64 [sp + 0x110]
 12601: a0 = a0 + 0x90
 12605: a2 = u64 [sp + 0x128]
 12609: ra = 418, jump @931
      : @912 [@dyn 209]
 12615: t1 = 0x1
 12618: jump @930
      : @913
 12620: t1 = 0
 12622: jump @930
      : @914
 12624: a0 = 0x1
 12627: jump @923
      : @915
 12629: a0 = 0x2
 12632: jump @923
      : @916
 12634: a0 = 0x3
 12637: jump @923
      : @917
 12639: a0 = 0x4
 12642: jump @923
      : @918
 12644: a0 = 0x5
 12647: jump @923
      : @919
 12649: a0 = 0x6
 12652: jump @923
      : @920
 12654: a0 = 0x7
 12657: jump @923
      : @921
 12659: a0 = 0x8
 12662: jump @923
      : @922
 12664: a0 = 0x9
 12667: fallthrough
      : @923
 12668: a1 = a0 + 0xfffffffffffffff6
 12671: a0 = a0 << 0x2
 12674: a0 = a0 + s1
 12677: fallthrough
      : @924
 12678: a2 = i32 [a0]
 12680: jump @927 if a2 != 0
      : @925
 12683: a1 = a1 + 0x1
 12686: a0 = a0 + 0x4
 12689: jump @924 if a1 != 0
      : @926
 12692: t1 = 0x1
 12695: jump @930
      : @927
 12697: ra = 420, jump @230
      : @928 [@dyn 210]
 12703: a1 = 0x16
 12706: u32 [a0] = a1
 12708: t1 = 0xffffffffffffffff
 12711: jump @930
      : @929
 12713: t1 = 0xffffffffffffffff
 12716: fallthrough
      : @930
 12717: a0 = t1
 12719: sp = s0 + 0xfffffffffffffe10
 12723: ra = u64 [sp + 0x1e8]
 12727: s0 = u64 [sp + 0x1e0]
 12731: s1 = u64 [sp + 0x1d8]
 12735: sp = sp + 0x1f0
 12739: ret
      : @931
 12741: a1 = a1 + 0xfffffffffffffff7
 12744: a3 = 0x11
 12747: jump @941 if a3 <u a1
      : @932
 12751: a1 = a1 << 0x2
 12754: a3 = 0x108e8
 12759: a1 = a1 + a3
 12762: a1 = i32 [a1]
 12764: a1 = a1 + a3
 12767: jump [a1]
      : @933 [@dyn 211]
 12769: a1 = u64 [a2]
 12771: a3 = a1 + 0x8
 12774: u64 [a2] = a3
 12776: a1 = u64 [a1]
 12778: u64 [a0] = a1
 12780: ret
      : @934 [@dyn 212]
 12782: sp = sp + 0xfffffffffffffff0
 12785: u64 [sp + 0x8] = ra
 12788: u64 [sp] = s0
 12790: a1 = u64 [a2]
 12792: a3 = a1 + 0x8
 12795: u64 [a2] = a3
 12797: a1 = u64 [a1]
 12799: s0 = a0
 12801: a0 = a1
 12803: ra = 426, jump @994
      : @935 [@dyn 213]
 12809: u64 [s0] = a0
 12811: u64 [s0 + 0x8] = a1
 12814: ra = u64 [sp + 0x8]
 12817: s0 = u64 [sp]
 12819: sp = sp + 0x10
 12822: ret
      : @936 [@dyn 214]
 12824: a1 = u64 [a2]
 12826: a3 = a1 + 0x8
 12829: u64 [a2] = a3
 12831: a1 = i8 [a1]
 12833: u64 [a0] = a1
 12835: ret
      : @937 [@dyn 215]
 12837: a1 = u64 [a2]
 12839: a3 = a1 + 0x8
 12842: u64 [a2] = a3
 12844: a1 = u32 [a1]
 12846: u64 [a0] = a1
 12848: ret
      : @938 [@dyn 216]
 12850: a1 = u64 [a2]
 12852: a3 = a1 + 0x8
 12855: u64 [a2] = a3
 12857: a1 = i16 [a1]
 12859: u64 [a0] = a1
 12861: ret
      : @939 [@dyn 217]
 12863: a1 = u64 [a2]
 12865: a3 = a1 + 0x8
 12868: u64 [a2] = a3
 12870: a1 = u8 [a1]
 12872: u64 [a0] = a1
 12874: ret
      : @940 [@dyn 218]
 12876: a1 = u64 [a2]
 12878: a1 = a1 + 0xf
 12881: a1 = a1 & 0xfffffffffffffff0
 12884: a3 = a1 + 0x10
 12887: u64 [a2] = a3
 12889: a2 = u64 [a1]
 12891: a1 = u64 [a1 + 0x8]
 12894: u64 [a0] = a2
 12896: u64 [a0 + 0x8] = a1
 12899: ret
      : @941
 12901: ret
      : @942 [@dyn 219]
 12903: a1 = u64 [a2]
 12905: a3 = a1 + 0x8
 12908: u64 [a2] = a3
 12910: a1 = u16 [a1 ]
 12912: u64 [a0] = a1
 12914: ret
      : @943 [@dyn 220]
 12916: a1 = u64 [a2]
 12918: a3 = a1 + 0x8
 12921: u64 [a2] = a3
 12923: a1 = i32 [a1]
 12925: u64 [a0] = a1
 12927: ret
      : @944
 12929: jump @956 if a3 >=s a2
      : @945
 12933: sp = sp + 0xfffffffffffffee8
 12937: u64 [sp + 0x110] = ra
 12941: u64 [sp + 0x108] = s0
 12945: u64 [sp + 0x100] = s1
 12949: s0 = a0
 12951: a0 = a4 & 0x12000
 12956: jump @955 if a0 != 0
      : @946
 12959: i32 s1 = a2 - a3
 12962: a0 = 0x100
 12966: a2 = minu(s1, a0)
 12969: a0 = sp
 12971: ra = 442, jump @1314
      : @947 [@dyn 221]
 12977: jump @953 if s1 <u 256
      : @948
 12982: a1 = 0xff
 12986: jump @950
      : @949
 12988: i32 s1 = s1 + 0xffffffffffffff00
 12992: jump @953 if a1 >=u s1
      : @950
 12995: a0 = u8 [s0]
 12997: a0 = a0 & 0x20
 13000: jump @949 if a0 != 0
      : @951
 13003: a0 = sp
 13005: a1 = 0x100
 13009: a2 = s0
 13011: ra = 444, jump @141
      : @952 [@dyn 222]
 13017: a1 = 0xff
 13021: jump @949
      : @953
 13023: a0 = u8 [s0]
 13025: a0 = a0 & 0x20
 13028: jump @955 if a0 != 0
      : @954
 13031: a0 = sp
 13033: a1 = s1
 13035: a2 = s0
 13037: ra = 446, jump @141
      : @955 [@dyn 223]
 13043: ra = u64 [sp + 0x110]
 13047: s0 = u64 [sp + 0x108]
 13051: s1 = u64 [sp + 0x100]
 13055: sp = sp + 0x118
 13059: ret
      : @956
 13061: ret
      : @957
 13063: a2 = a1 << 0x1
 13066: a1 = a1 << 0x10
 13069: a2 = a2 >> 0x31
 13072: a1 = a1 >> 0x10
 13075: jump @960 if a2 == 32767
      : @958
 13080: jump @961 if a2 != 0
      : @959
 13083: a0 = a0 | a1
 13086: a0 = a0 <u 0x1
 13089: a0 = a0 ^ 0x3
 13092: jump @384
      : @960
 13095: a0 = a0 | a1
 13098: a0 = a0 <u 0x1
 13101: jump @384
      : @961
 13104: a0 = 0x4
 13107: jump @384
      : @962
 13110: sp = sp + 0xffffffffffffffe0
 13113: u64 [sp + 0x18] = ra
 13116: u64 [sp + 0x10] = s0
 13119: u64 [sp + 0x8] = s1
 13122: s0 = a2
 13124: a2 = a1 >> 0x30
 13127: a4 = 0x7fff
 13131: a3 = a2 & a4
 13134: jump @972 if a3 == a4
      : @963
 13137: jump @970 if a3 != 0
      : @964
 13140: u64 [sp] = a0
 13142: s1 = a1
 13144: a2 = 0
 13146: ra = 448, jump @973
      : @965 [@dyn 224]
 13151: jump @971 if a0 == 0
      : @966
 13154: a0 = 0x4770000000000000
 13164: ra = 450, jump @994
      : @967 [@dyn 225]
 13170: a2 = a0
 13172: a3 = a1
 13174: a0 = u64 [sp]
 13176: a1 = s1
 13178: ra = 452, jump @1005
      : @968 [@dyn 226]
 13184: a2 = s0
 13186: ra = 454, jump @962
      : @969 [@dyn 227]
 13191: a2 = i32 [s0]
 13193: a2 = a2 + 0xffffffffffffff88
 13196: u32 [s0] = a2
 13198: jump @972
      : @970
 13200: a2 = a2 & 0x8000
 13205: a3 = a3 + 0xffffffffffffc002
 13209: a1 = a1 << 0x10
 13212: a4 = 0x3ffe
 13216: a2 = a2 | a4
 13219: u32 [s0] = a3
 13221: a2 = a2 << 0x30
 13224: a1 = a1 >> 0x10
 13227: a1 = a1 | a2
 13230: jump @972
      : @971
 13232: a1 = s1
 13234: a0 = u64 [sp]
 13236: u32 [s0 + 0] = 0
 13238: fallthrough
      : @972
 13239: ra = u64 [sp + 0x18]
 13242: s0 = u64 [sp + 0x10]
 13245: s1 = u64 [sp + 0x8]
 13248: sp = sp + 0x20
 13251: ret
      : @973
 13253: a5 = 0x7fffffffffffffff
 13263: t1 = a1 & a5
 13266: a4 = 0x7fff000000000000
 13276: jump @976 if t1 == a4
      : @974
 13279: a4 = a4 <u t1
 13282: t0 = 0x1
 13285: jump @977 if a4 == 0
      : @975
 13288: a0 = t0
 13290: ret
      : @976
 13292: a4 = a0 >u 0
 13294: t0 = 0x1
 13297: jump @975 if a4 != 0
      : @977
 13300: a5 = a5 & a3
 13303: a4 = 0x7fff000000000000
 13313: jump @980 if a5 == a4
      : @978
 13316: a4 = a4 <u a5
 13319: jump @981 if a4 == 0
      : @979
 13322: jump @975
      : @980
 13324: a4 = a2 >u 0
 13326: jump @975 if a4 != 0
      : @981
 13329: a4 = a2 | a0
 13332: a5 = a5 | t1
 13335: a4 = a4 | a5
 13338: jump @986 if a4 == 0
      : @982
 13341: a4 = a3 & a1
 13344: jump @987 if a4 <s 0
      : @983
 13347: jump @990 if a1 == a3
      : @984
 13350: a4 = a1 <s a3
 13353: t0 = 0xffffffffffffffff
 13356: jump @975 if a4 != 0
      : @985
 13359: jump @993
      : @986
 13361: a0 = 0
 13363: ret
      : @987
 13365: jump @992 if a1 == a3
      : @988
 13368: a4 = a3 <s a1
 13371: t0 = 0xffffffffffffffff
 13374: jump @975 if a4 != 0
      : @989
 13377: jump @993
      : @990
 13379: a4 = a0 <u a2
 13382: t0 = 0xffffffffffffffff
 13385: jump @975 if a4 != 0
      : @991
 13388: jump @993
      : @992
 13390: a4 = a2 <u a0
 13393: t0 = 0xffffffffffffffff
 13396: jump @975 if a4 != 0
      : @993
 13399: a0 = a0 ^ a2
 13402: a1 = a1 ^ a3
 13405: a0 = a0 | a1
 13408: t0 = a0 >u 0
 13410: a0 = t0
 13412: ret
      : @994
 13414: a1 = a0 << 0x1
 13417: a1 = a1 >> 0x35
 13420: a2 = a0 << 0xc
 13423: a2 = a2 >> 0xc
 13426: jump @997 if a1 == 0
      : @995
 13429: jump @1000 if a1 != 2047
      : @996
 13435: a3 = a2 >> 0x4
 13438: a2 = a2 << 0x3c
 13441: a1 = 0x7fff
 13445: jump @1004
      : @997
 13448: jump @1001 if a2 == 0
      : @998
 13452: t0 = a2 >> 0x1
 13455: a1 = a2 | t0
 13458: a3 = a1 >> 0x2
 13461: a1 = a1 | a3
 13464: a3 = a1 >> 0x4
 13467: a1 = a1 | a3
 13470: a3 = a1 >> 0x8
 13473: a1 = a1 | a3
 13476: a3 = a1 >> 0x10
 13479: a1 = a1 | a3
 13482: a3 = a1 >> 0x20
 13485: a1 = a1 | a3
 13488: a1 = a1 ^ 0xffffffffffffffff
 13491: a3 = a1 >> 0x1
 13494: a4 = 0x5555555555555555
 13504: a3 = a3 & a4
 13507: a1 = a1 - a3
 13510: a3 = 0x3333333333333333
 13520: a4 = a1 & a3
 13523: a1 = a1 >> 0x2
 13526: a1 = a1 & a3
 13529: a1 = a1 + a4
 13532: a3 = a1 >> 0x4
 13535: a1 = a1 + a3
 13538: a3 = 0xf0f0f0f0f0f0f0f
 13548: a1 = a1 & a3
 13551: a3 = 0x101010101010101
 13561: a3 = a1 * a3
 13564: a3 = a3 >> 0x38
 13567: a5 = a3 + 0xfffffffffffffff1
 13570: t1 = a3 + 0x31
 13573: jump @1002 if a5 <s 0
      : @999
 13576: a4 = a2 << a5
 13579: jump @1003
      : @1000
 13581: a1 = a1 + 0x3c00
 13585: a3 = a2 >> 0x4
 13588: a2 = a2 << 0x3c
 13591: jump @1004
      : @1001
 13593: a3 = 0
 13595: a1 = 0
 13597: jump @1004
      : @1002
 13599: i32 a4 = 0xe - a3
 13602: a4 = t0 >> a4
 13605: fallthrough
      : @1003
 13606: a1 = 0x3c0c - a3
 13610: a2 = a2 << t1
 13613: a5 = a5 >>a 0x3f
 13616: a2 = a2 & a5
 13619: a3 = 0x1000000000000
 13629: a3 = a3 ^ a4
 13632: fallthrough
      : @1004
 13633: a0 = a0 >> 0x3f
 13636: a0 = a0 << 0x3f
 13639: a1 = a1 << 0x30
 13642: a1 = a1 | a3
 13645: a1 = a1 | a0
 13648: a0 = a2
 13650: ret
      : @1005
 13652: sp = sp + 0xffffffffffffff90
 13655: u64 [sp + 0x68] = ra
 13658: u64 [sp + 0x60] = s0
 13661: u64 [sp + 0x58] = s1
 13664: u64 [sp + 0x50] = a2
 13667: a4 = a1
 13669: s0 = 0xffffffffffffffff
 13672: t2 = 0xffffffffffff
 13682: a1 = a1 << 0x1
 13685: s1 = a1 >> 0x31
 13688: a1 = a3 << 0x1
 13691: t0 = a1 >> 0x31
 13694: a1 = a3 ^ a4
 13697: a1 = a1 >> 0x3f
 13700: t1 = a1 << 0x3f
 13703: ra = a4 & t2
 13706: a2 = a3 & t2
 13709: u64 [sp + 0x28] = a2
 13712: u64 [sp + 0x38] = s1
 13715: s1 = s1 + 0xffffffffffff8001
 13719: u64 [sp + 0x40] = a0
 13722: u64 [sp + 0x48] = ra
 13725: a2 = ra >> 0x20
 13728: u64 [sp + 0x30] = t0
 13731: jump @1011 if s1 <u 4294934530
      : @1006
 13737: a5 = t0 + 0xffffffffffff8001
 13741: jump @1011 if a5 <=u 4294934529
      : @1007
 13747: s0 = a2
 13749: u64 [sp] = t2
 13751: u64 [sp + 0x20] = t1
 13754: u64 [sp + 24] = 0
 13757: ra = u64 [sp + 0x28]
 13760: a5 = u64 [sp + 0x50]
 13763: fallthrough
      : @1008
 13764: t2 = a5 << 0xf
 13767: a0 = a5 >> 0x31
 13770: ra = ra << 0xf
 13773: s1 = s0 | 0x10000
 13778: a2 = ra >> 0x20
 13781: a3 = 0x80000000
 13791: a5 = a2 | a3
 13794: a1 = a5 * s1
 13797: u64 [sp + 0x50] = a1
 13800: a3 = a0 | ra
 13803: a3 = a3 << 0x20
 13806: ra = a3 >> 0x20
 13809: a2 = t2 >> 0x20
 13812: t2 = t2 << 0x20
 13815: a0 = ra * s1
 13818: u64 [sp + 0x10] = a0
 13821: a0 = a2 * s1
 13824: u64 [sp + 0x28] = a0
 13827: a0 = t2 >> 0x20
 13830: t0 = a0 * s1
 13833: s0 = u64 [sp + 0x48]
 13836: s0 = s0 << 0x20
 13839: a4 = s0 >> 0x20
 13842: a1 = a5 * a4
 13845: u64 [sp + 0x48] = a1
 13848: s1 = a2 * a4
 13851: a1 = u64 [sp + 0x40]
 13854: t1 = a1 >> 0x20
 13857: ra = ra * t1
 13860: a4 = a0 * t1
 13863: a0 = a5 * t1
 13866: u64 [sp + 0x8] = a0
 13869: t1 = a2 * t1
 13872: a0 = a1 << 0x20
 13875: a1 = a0 >> 0x20
 13878: a5 = a5 * a1
 13881: a1 = a2 * a1
 13884: a2 = a3 mulhu s0
 13887: s0 = t2 mulhu s0
 13890: a3 = a3 mulhu a0
 13893: t2 = t2 mulhu a0
 13896: t1 = t1 + s0
 13899: a0 = t1 <u s0
 13902: s0 = t1 + a3
 13905: a3 = s0 <u t1
 13908: a3 = a3 + a0
 13911: s1 = s1 + t0
 13914: a0 = s1 <u t0
 13917: a5 = a5 + s1
 13920: s1 = a5 <u s1
 13923: a0 = a0 + s1
 13926: ra = ra + a5
 13929: a5 = ra <u a5
 13932: a0 = a0 + a5
 13935: a1 = a1 + a4
 13938: a4 = a1 <u a4
 13941: a4 = a4 << 0x20
 13944: a5 = a1 >> 0x20
 13947: a4 = a4 | a5
 13950: a4 = a4 + s0
 13953: t1 = a4 <u s0
 13956: a5 = ra << 0x20
 13959: a5 = a5 + a4
 13962: a4 = a5 <u a4
 13965: t1 = t1 + a4
 13968: a1 = a1 << 0x20
 13971: t2 = t2 + a1
 13974: t0 = t2 <u a1
 13977: t0 = t0 + a5
 13980: a0 = a0 << 0x20
 13983: a1 = ra >> 0x20
 13986: a0 = a0 | a1
 13989: a4 = u64 [sp + 0x10]
 13992: a1 = u64 [sp + 0x48]
 13995: a1 = a1 + a4
 13998: a4 = a1 <u a4
 14001: a4 = a4 << 0x20
 14004: a5 = a1 >> 0x20
 14007: a4 = a4 | a5
 14010: a5 = u64 [sp + 0x28]
 14013: s0 = u64 [sp + 0x8]
 14016: a5 = a5 + s0
 14019: s0 = a5 <u s0
 14022: s1 = u64 [sp + 0x50]
 14025: s0 = s0 + s1
 14028: a2 = a2 + a5
 14031: a5 = a2 <u a5
 14034: a5 = a5 + s0
 14037: a3 = a3 + a2
 14040: a2 = a3 <u a2
 14043: a2 = a2 + a5
 14046: a2 = a2 + a4
 14049: a1 = a1 << 0x20
 14052: a1 = a1 + a3
 14055: a3 = a1 <u a3
 14058: a2 = a2 + a3
 14061: a0 = a0 + a1
 14064: a1 = a0 <u a1
 14067: a1 = a1 + a2
 14070: s1 = a0 + t1
 14073: a4 = s1 <u a0
 14076: a4 = a4 + a1
 14079: a2 = u64 [sp + 0x38]
 14082: a0 = u64 [sp + 0x30]
 14085: a2 = a2 + a0
 14088: a1 = u64 [sp + 0x18]
 14091: a0 = a1 + 0xffffffffffffc001
 14095: a1 = a4 << 0xf
 14098: a2 = a2 + a0
 14101: jump @1018 if a1 <s 0
      : @1009
 14105: a0 = s1 >> 0x3f
 14108: a4 = a4 << 0x1
 14111: a4 = a4 | a0
 14114: s1 = s1 << 0x1
 14117: a0 = t0 >> 0x3f
 14120: s1 = s1 | a0
 14123: a0 = t2 >> 0x3f
 14126: t0 = t0 << 0x1
 14129: t0 = t0 | a0
 14132: t2 = t2 << 0x1
 14135: t1 = u64 [sp + 0x20]
 14138: jump @1019 if a2 >=s 32767
      : @1010
 14143: jump @1020
      : @1011
 14146: a1 = 0x7fffffffffffffff
 14156: s1 = a4 & a1
 14159: a5 = 0x7fff000000000000
 14169: jump @1025 if s1 == a5
      : @1012
 14173: a5 = s1 <u a5
 14176: jump @1026 if a5 == 0
      : @1013
 14180: a4 = a3 & a1
 14183: a1 = 0x7fff000000000000
 14193: jump @1027 if a4 == a1
      : @1014
 14197: a1 = a4 <u a1
 14200: a5 = u64 [sp + 0x50]
 14203: jump @1028 if a1 == 0
      : @1015
 14207: a1 = 0x7fff000000000000
 14217: a3 = s1 ^ a1
 14220: a3 = a3 | a0
 14223: jump @1033 if a3 != 0
      : @1016
 14227: a2 = a5 | a4
 14230: jump @1019 if a2 != 0
      : @1017
 14233: a0 = 0
 14235: t1 = 0x7fff800000000000
 14245: jump @1055
      : @1018
 14248: a2 = a2 + 0x1
 14251: t1 = u64 [sp + 0x20]
 14254: jump @1020 if a2 <s 32767
      : @1019
 14259: a0 = 0
 14261: a1 = 0x7fff000000000000
 14271: t1 = t1 | a1
 14274: jump @1055
      : @1020
 14277: jump @1029 if a2 <=s 0
      : @1021
 14281: a0 = s1 & 0xffffffffffffffff
 14284: a1 = u64 [sp]
 14286: a1 = a1 & a4
 14289: a2 = a2 << 0x30
 14292: a1 = a1 | a2
 14295: a2 = 0x8000000000000000
 14305: jump @1053 if t0 == a2
      : @1022
 14309: a2 = t0 <s 0
 14311: a2 = a2 ^ 0x1
 14314: t1 = a1 | t1
 14317: jump @1054 if a2 == 0
      : @1023
 14321: a1 = 0x8000000000000000
 14331: a1 = t0 ^ a1
 14334: a1 = t2 | a1
 14337: jump @1055 if a1 != 0
      : @1024
 14341: a1 = a0 & 0x1
 14344: a1 = a1 + a0
 14347: a0 = a1 <u a0
 14350: t1 = t1 + a0
 14353: a0 = a1
 14355: jump @1055
      : @1025
 14358: a5 = a0 <u 0x1
 14361: jump @1013 if a5 != 0
      : @1026
 14365: a1 = 0x800000000000
 14375: t1 = a4 | a1
 14378: jump @1055
      : @1027
 14381: a5 = u64 [sp + 0x50]
 14384: a1 = a5 <u 0x1
 14387: jump @1015 if a1 != 0
      : @1028
 14391: a0 = 0x800000000000
 14401: t1 = a3 | a0
 14404: a0 = a5
 14406: jump @1055
      : @1029
 14409: a5 = 0x1 - a2
 14412: jump @1043 if a5 >u 127
      : @1030
 14417: u64 [sp + 0x20] = t1
 14420: a0 = a2 + 0x7f
 14423: a2 = a0 << 0x20
 14426: a2 = a2 >> 0x20
 14429: s0 = a2 + 0xffffffffffffffc0
 14432: t1 = a2 ^ 0xffffffffffffffff
 14435: jump @1044 if s0 <s 0
      : @1031
 14439: ra = t2 << a2
 14442: a3 = t2 << a0
 14445: a1 = s0 >>a 0x3f
 14448: a3 = a3 & a1
 14451: jump @1045 if s0 >=s 0
      : @1032
 14455: a2 = a4 << a0
 14458: s0 = s1 >> 0x1
 14461: s0 = s0 >> t1
 14464: a2 = a2 | s0
 14467: jump @1046
      : @1033
 14470: a1 = a1 ^ a4
 14473: a1 = a1 | a5
 14476: jump @1036 if a1 != 0
      : @1034
 14479: a0 = a0 | s1
 14482: jump @1019 if a0 != 0
      : @1035
 14486: t1 = 0x7fff800000000000
 14496: jump @1055
      : @1036
 14499: a1 = a0 | s1
 14502: jump @1043 if a1 == 0
      : @1037
 14506: a1 = a5 | a4
 14509: jump @1043 if a1 == 0
      : @1038
 14513: s1 = s1 >> 0x30
 14516: u64 [sp + 0x20] = t1
 14519: u64 [sp] = t2
 14521: jump @1056 if s1 != 0
      : @1039
 14525: s0 = u64 [sp + 0x48]
 14528: a3 = s0 <u 0x1
 14531: a5 = u64 [sp + 0x40]
 14534: jump @1041 if s0 == 0
      : @1040
 14537: a5 = s0
 14539: fallthrough
      : @1041
 14540: t0 = a3 << 0x6
 14543: a1 = a5 >> 0x1
 14546: a1 = a1 | a5
 14549: a5 = a1 >> 0x2
 14552: a1 = a1 | a5
 14555: a5 = a1 >> 0x4
 14558: a1 = a1 | a5
 14561: a5 = a1 >> 0x8
 14564: a1 = a1 | a5
 14567: a5 = a1 >> 0x10
 14570: a1 = a1 | a5
 14573: a5 = a1 >> 0x20
 14576: a1 = a1 | a5
 14579: a1 = a1 ^ 0xffffffffffffffff
 14582: a5 = a1 >> 0x1
 14585: a3 = 0x5555555555555555
 14595: a3 = a3 & a5
 14598: a1 = a1 - a3
 14601: a3 = 0x3333333333333333
 14611: a5 = a1 & a3
 14614: a1 = a1 >> 0x2
 14617: a1 = a1 & a3
 14620: a1 = a1 + a5
 14623: a3 = a1 >> 0x4
 14626: a1 = a1 + a3
 14629: a3 = 0xf0f0f0f0f0f0f0f
 14639: a1 = a1 & a3
 14642: a3 = 0x101010101010101
 14652: a1 = a1 * a3
 14655: a1 = a1 >> 0x38
 14658: a3 = a1 | t0
 14661: a1 = a3 + 0xfffffffffffffff1
 14664: t0 = a0 << a1
 14667: s1 = a1 << 0x20
 14670: s1 = s1 >> 0x20
 14673: a5 = s1 + 0xffffffffffffffc0
 14676: t2 = a5 >>a 0x3f
 14679: jump @1057 if a5 <s 0
      : @1042
 14683: a1 = a0 << s1
 14686: jump @1058
      : @1043
 14689: a0 = 0
 14691: jump @1055
      : @1044
 14694: a1 = t0 << a0
 14697: a3 = t2 >> 0x1
 14700: a3 = a3 >> t1
 14703: ra = a1 | a3
 14706: a3 = t2 << a0
 14709: a1 = s0 >>a 0x3f
 14712: a3 = a3 & a1
 14715: jump @1032 if s0 <s 0
      : @1045
 14719: a2 = s1 << a2
 14722: fallthrough
      : @1046
 14723: u64 [sp + 0x50] = a2
 14726: s0 = a3 | ra
 14729: a0 = s1 << a0
 14732: ra = a1 & a0
 14735: a0 = a5 << 0x20
 14738: a0 = a0 >> 0x20
 14741: a2 = a0 + 0xffffffffffffffc0
 14744: a1 = a0 ^ 0xffffffffffffffff
 14747: u64 [sp + 0x48] = a1
 14750: jump @1048 if a2 <s 0
      : @1047
 14753: t1 = t0 >> a0
 14756: jump @1049
      : @1048
 14758: t1 = t2 >> a5
 14761: a3 = t0 << 0x1
 14764: a3 = a3 << a1
 14767: t1 = t1 | a3
 14770: fallthrough
      : @1049
 14771: t2 = s0 >u 0
 14773: a3 = t0 >> a5
 14776: a1 = a2 >>a 0x3f
 14779: a3 = a3 & a1
 14782: s0 = ra | t1
 14785: jump @1051 if a2 <s 0
      : @1050
 14788: a0 = a4 >> a0
 14791: jump @1052
      : @1051
 14793: a0 = s1 >> a5
 14796: a2 = a4 << 0x1
 14799: s1 = u64 [sp + 0x48]
 14802: a2 = a2 << s1
 14805: a0 = a0 | a2
 14808: fallthrough
      : @1052
 14809: t1 = u64 [sp + 0x20]
 14812: a2 = u64 [sp + 0x50]
 14815: t0 = a2 | a3
 14818: t2 = s0 | t2
 14821: a2 = a4 >> a5
 14824: a1 = a1 & a2
 14827: a2 = 0x8000000000000000
 14837: jump @1022 if t0 != a2
      : @1053
 14841: a2 = t2 <u 0x1
 14844: t1 = a1 | t1
 14847: jump @1023 if a2 != 0
      : @1054
 14851: a0 = a0 + 0x1
 14854: a1 = a0 <u 0x1
 14857: t1 = t1 + a1
 14860: fallthrough
      : @1055
 14861: a1 = t1
 14863: ra = u64 [sp + 0x68]
 14866: s0 = u64 [sp + 0x60]
 14869: s1 = u64 [sp + 0x58]
 14872: sp = sp + 0x70
 14875: ret
      : @1056
 14877: s0 = a2
 14879: t0 = 0
 14881: jump @1059
      : @1057
 14883: a1 = s0 << a1
 14886: a5 = s1 ^ 0xffffffffffffffff
 14889: a0 = a0 >> 0x1
 14892: s0 = a0 >> a5
 14895: a1 = a1 | s0
 14898: fallthrough
      : @1058
 14899: a5 = u64 [sp + 0x50]
 14902: a0 = t2 & t0
 14905: u64 [sp + 0x40] = a0
 14908: t0 = 0x10 - a3
 14911: u64 [sp + 0x48] = a1
 14914: s0 = a1 >> 0x20
 14917: fallthrough
      : @1059
 14918: ra = u64 [sp + 0x28]
 14921: a4 = a4 >> 0x30
 14924: jump @1064 if a4 != 0
      : @1060
 14928: a0 = ra <u 0x1
 14931: a1 = a5
 14933: jump @1062 if ra == 0
      : @1061
 14936: a1 = ra
 14938: fallthrough
      : @1062
 14939: a0 = a0 << 0x6
 14942: a3 = a1 >> 0x1
 14945: a1 = a1 | a3
 14948: a3 = a1 >> 0x2
 14951: a1 = a1 | a3
 14954: a3 = a1 >> 0x4
 14957: a1 = a1 | a3
 14960: a3 = a1 >> 0x8
 14963: a1 = a1 | a3
 14966: a3 = a1 >> 0x10
 14969: a1 = a1 | a3
 14972: a3 = a1 >> 0x20
 14975: a1 = a1 | a3
 14978: a1 = a1 ^ 0xffffffffffffffff
 14981: a3 = a1 >> 0x1
 14984: a4 = 0x5555555555555555
 14994: a3 = a3 & a4
 14997: a1 = a1 - a3
 15000: a3 = 0x3333333333333333
 15010: a4 = a1 & a3
 15013: a1 = a1 >> 0x2
 15016: a1 = a1 & a3
 15019: a1 = a1 + a4
 15022: a3 = a1 >> 0x4
 15025: a1 = a1 + a3
 15028: a3 = 0xf0f0f0f0f0f0f0f
 15038: a1 = a1 & a3
 15041: a3 = 0x101010101010101
 15051: a1 = a1 * a3
 15054: a1 = a1 >> 0x38
 15057: a0 = a0 | a1
 15060: a1 = a0 + 0xfffffffffffffff1
 15063: a4 = a1 << 0x20
 15066: a4 = a4 >> 0x20
 15069: a3 = a4 + 0xffffffffffffffc0
 15072: jump @1065 if a3 <s 0
      : @1063
 15075: a2 = u64 [sp + 0x50]
 15078: ra = a2 << a4
 15081: jump @1066
      : @1064
 15083: u64 [sp + 0x18] = t0
 15086: jump @1008
      : @1065
 15089: a5 = ra << a1
 15092: a4 = a4 ^ 0xffffffffffffffff
 15095: a2 = u64 [sp + 0x50]
 15098: s1 = a2 >> 0x1
 15101: a4 = s1 >> a4
 15104: ra = a5 | a4
 15107: fallthrough
      : @1066
 15108: a1 = a2 << a1
 15111: a2 = a3 >>a 0x3f
 15114: a5 = a2 & a1
 15117: a0 = t0 - a0
 15120: a0 = a0 + 0x10
 15123: u64 [sp + 0x18] = a0
 15126: jump @1008
      : @1067
 15129: jump @1070 if a0 == 0
      : @1068
 15133: i32 a1 = a0 >>a 0x1f
 15136: a2 = a0 ^ a1
 15139: i32 a2 = a2 - a1
 15142: a0 = a0 & 0xffffffff80000000
 15148: t0 = a0 << 0x20
 15151: i32 a0 = a2 >> 0x1
 15154: a1 = a2 | a0
 15157: i32 a3 = a1 >> 0x2
 15160: a1 = a1 | a3
 15163: i32 a3 = a1 >> 0x4
 15166: a1 = a1 | a3
 15169: i32 a3 = a1 >> 0x8
 15172: a1 = a1 | a3
 15175: i32 a3 = a1 >> 0x10
 15178: a1 = a1 | a3
 15181: a1 = a1 ^ 0xffffffffffffffff
 15184: a3 = a1 >> 0x1
 15187: a3 = a3 & 0x55555555
 15193: a1 = a1 - a3
 15196: a4 = a1 & 0x33333333
 15202: a1 = a1 >> 0x2
 15205: a1 = a1 & 0x33333333
 15211: a1 = a1 + a4
 15214: a3 = a1 >> 0x4
 15217: a1 = a1 + a3
 15220: a1 = a1 & 0xf0f0f0f
 15226: a1 = a1 * 0x1010101
 15232: i32 a3 = a1 >> 0x18
 15235: a1 = a3 ^ 0x1f
 15238: i32 a4 = 0x70 - a1
 15241: a5 = a2 << 0x20
 15244: a1 = a4 << 0x20
 15247: a1 = a1 >> 0x20
 15250: a2 = a1 + 0xffffffffffffffc0
 15253: a5 = a5 >> 0x20
 15256: jump @1071 if a2 <s 0
      : @1069
 15259: a1 = a5 << a1
 15262: jump @1072
      : @1070
 15264: a1 = 0
 15266: ret
      : @1071
 15268: a1 = a1 ^ 0xffffffffffffffff
 15271: a1 = a0 >> a1
 15274: fallthrough
      : @1072
 15275: a0 = a5 << a4
 15278: a2 = a2 >>a 0x3f
 15281: a0 = a0 & a2
 15284: a2 = 0x1000000000000
 15294: a1 = a1 ^ a2
 15297: i32 a2 = 0x401e - a3
 15301: a2 = a2 << 0x30
 15304: a1 = a1 + a2
 15307: a1 = a1 | t0
 15310: ret
      : @1073
 15312: sp = sp + 0xffffffffffffffc8
 15315: u64 [sp + 0x30] = ra
 15318: u64 [sp + 0x28] = s0
 15321: u64 [sp + 0x20] = s1
 15324: s0 = a3
 15326: s1 = a2
 15328: a3 = 0x7fffffffffffffff
 15338: a2 = a1 & a3
 15341: a4 = 0x8001000000000000
 15351: jump @1076 if a2 == 0
      : @1074
 15354: a5 = a2 + a4
 15357: a5 = a5 <u a4
 15360: a3 = a3 & s0
 15363: jump @1077 if a5 == 0
      : @1075
 15366: jump @1084
      : @1076
 15368: a5 = a0 <u 0x1
 15371: a3 = a3 & s0
 15374: jump @1084 if a5 != 0
      : @1077
 15377: a4 = a4 + a3
 15380: a5 = 0x8001000000000000
 15390: jump @1080 if a4 == a5
      : @1078
 15393: a4 = a5 <u a4
 15396: jump @1081 if a4 != 0
      : @1079
 15399: jump @1084
      : @1080
 15401: a4 = s1 >u 0
 15403: jump @1084 if a4 == 0
      : @1081
 15406: jump @1092 if a3 == a2
      : @1082
 15410: a2 = a2 <u a3
 15413: a4 = 0xffffffffffff
 15423: jump @1093 if a2 == 0
      : @1083
 15427: t0 = a0
 15429: t2 = a1
 15431: a0 = s1
 15433: a3 = s0
 15435: jump @1094
      : @1084
 15438: a4 = 0x7fff000000000000
 15448: jump @1097 if a2 == a4
      : @1085
 15452: a4 = a2 <u a4
 15455: jump @1098 if a4 == 0
      : @1086
 15459: a4 = 0x7fff000000000000
 15469: jump @1103 if a3 == a4
      : @1087
 15473: a4 = a3 <u a4
 15476: jump @1104 if a4 == 0
      : @1088
 15480: a4 = 0x7fff000000000000
 15490: a5 = a2 ^ a4
 15493: a5 = a5 | a0
 15496: jump @1134 if a5 != 0
      : @1089
 15500: s1 = s1 ^ a0
 15503: s0 = s0 ^ a1
 15506: a2 = 0x8000000000000000
 15516: a2 = a2 ^ s0
 15519: s1 = s1 | a2
 15522: a2 = s1 <u 0x1
 15525: jump @1091 if s1 != 0
      : @1090
 15528: a1 = 0x7fff800000000000
 15538: fallthrough
      : @1091
 15539: a2 = a2 + 0xffffffffffffffff
 15542: s1 = a2 & a0
 15545: s0 = a1
 15547: jump @1154
      : @1092
 15550: a2 = a0 <u s1
 15553: a4 = 0xffffffffffff
 15563: jump @1083 if a2 != 0
      : @1093
 15567: t0 = s1
 15569: t2 = s0
 15571: a3 = a1
 15573: fallthrough
      : @1094
 15574: a2 = a3 << 0x1
 15577: ra = a2 >> 0x31
 15580: s1 = t2 << 0x1
 15583: s1 = s1 >> 0x31
 15586: u64 [sp + 0x10] = a3
 15589: t1 = a3 & a4
 15592: u64 [sp + 0x18] = a4
 15595: jump @1099 if ra == 0
      : @1095
 15598: a4 = t2 & a4
 15601: jump @1113 if s1 != 0
      : @1096
 15605: jump @1107
      : @1097
 15608: a4 = a0 <u 0x1
 15611: jump @1086 if a4 != 0
      : @1098
 15615: a2 = 0x800000000000
 15625: s0 = a1 | a2
 15628: s1 = a0
 15630: jump @1154
      : @1099
 15633: a5 = t1 <u 0x1
 15636: a2 = a0
 15638: jump @1101 if t1 == 0
      : @1100
 15641: a2 = t1
 15643: fallthrough
      : @1101
 15644: ra = a5 << 0x6
 15647: a3 = a2 >> 0x1
 15650: a2 = a2 | a3
 15653: a3 = a2 >> 0x2
 15656: a2 = a2 | a3
 15659: a3 = a2 >> 0x4
 15662: a2 = a2 | a3
 15665: a3 = a2 >> 0x8
 15668: a2 = a2 | a3
 15671: a3 = a2 >> 0x10
 15674: a2 = a2 | a3
 15677: a3 = a2 >> 0x20
 15680: a2 = a2 | a3
 15683: a2 = a2 ^ 0xffffffffffffffff
 15686: a3 = a2 >> 0x1
 15689: a4 = 0x5555555555555555
 15699: a3 = a3 & a4
 15702: a2 = a2 - a3
 15705: a3 = 0x3333333333333333
 15715: a4 = a2 & a3
 15718: a2 = a2 >> 0x2
 15721: a2 = a2 & a3
 15724: a2 = a2 + a4
 15727: a3 = a2 >> 0x4
 15730: a2 = a2 + a3
 15733: a3 = 0xf0f0f0f0f0f0f0f
 15743: a2 = a2 & a3
 15746: a3 = 0x101010101010101
 15756: a2 = a2 * a3
 15759: a2 = a2 >> 0x38
 15762: a3 = a2 | ra
 15765: a5 = a3 + 0xfffffffffffffff1
 15768: a4 = a5 << 0x20
 15771: a4 = a4 >> 0x20
 15774: a2 = a4 + 0xffffffffffffffc0
 15777: jump @1105 if a2 <s 0
      : @1102
 15780: t1 = a0 << a4
 15783: jump @1106
      : @1103
 15785: a4 = s1 <u 0x1
 15788: jump @1088 if a4 != 0
      : @1104
 15792: a0 = 0x800000000000
 15802: s0 = s0 | a0
 15805: jump @1154
      : @1105
 15808: t1 = t1 << a5
 15811: ra = a4 ^ 0xffffffffffffffff
 15814: a4 = a0 >> 0x1
 15817: a4 = a4 >> ra
 15820: t1 = t1 | a4
 15823: fallthrough
      : @1106
 15824: a0 = a0 << a5
 15827: a2 = a2 >>a 0x3f
 15830: a0 = a0 & a2
 15833: ra = 0x10 - a3
 15836: a4 = u64 [sp + 0x18]
 15839: a4 = t2 & a4
 15842: jump @1113 if s1 != 0
      : @1107
 15846: a5 = a4 <u 0x1
 15849: a2 = t0
 15851: jump @1109 if a4 == 0
      : @1108
 15854: a2 = a4
 15856: fallthrough
      : @1109
 15857: t2 = a5 << 0x6
 15860: a3 = a2 >> 0x1
 15863: a2 = a2 | a3
 15866: a3 = a2 >> 0x2
 15869: a2 = a2 | a3
 15872: a3 = a2 >> 0x4
 15875: a2 = a2 | a3
 15878: a3 = a2 >> 0x8
 15881: a2 = a2 | a3
 15884: a3 = a2 >> 0x10
 15887: a2 = a2 | a3
 15890: a3 = a2 >> 0x20
 15893: a2 = a2 | a3
 15896: a2 = a2 ^ 0xffffffffffffffff
 15899: a3 = a2 >> 0x1
 15902: a5 = 0x5555555555555555
 15912: a3 = a3 & a5
 15915: a2 = a2 - a3
 15918: a3 = 0x3333333333333333
 15928: a5 = a2 & a3
 15931: a2 = a2 >> 0x2
 15934: a2 = a2 & a3
 15937: a2 = a2 + a5
 15940: a3 = a2 >> 0x4
 15943: a2 = a2 + a3
 15946: a3 = 0xf0f0f0f0f0f0f0f
 15956: a2 = a2 & a3
 15959: a3 = 0x101010101010101
 15969: a2 = a2 * a3
 15972: a2 = a2 >> 0x38
 15975: a5 = a2 | t2
 15978: a3 = a5 + 0xfffffffffffffff1
 15981: s1 = a3 << 0x20
 15984: s1 = s1 >> 0x20
 15987: a2 = s1 + 0xffffffffffffffc0
 15990: jump @1111 if a2 <s 0
      : @1110
 15993: a4 = t0 << s1
 15996: jump @1112
      : @1111
 15998: t2 = a4 << a3
 16001: s1 = s1 ^ 0xffffffffffffffff
 16004: a4 = t0 >> 0x1
 16007: a4 = a4 >> s1
 16010: a4 = t2 | a4
 16013: fallthrough
      : @1112
 16014: a3 = t0 << a3
 16017: a2 = a2 >>a 0x3f
 16020: t0 = a2 & a3
 16023: s1 = 0x10 - a5
 16026: fallthrough
      : @1113
 16027: a5 = s0 ^ a1
 16030: a1 = a0 >> 0x3d
 16033: a3 = t1 << 0x3
 16036: a3 = a3 | a1
 16039: a1 = 0x1
 16042: s0 = 0x8000000000000
 16052: a2 = t0 >> 0x3d
 16055: a4 = a4 << 0x3
 16058: t0 = t0 << 0x3
 16061: a2 = a2 | s0
 16064: a2 = a2 | a4
 16067: jump @1115 if ra != s1
      : @1114
 16070: a1 = t0
 16072: jump @1131
      : @1115
 16075: a4 = ra - s1
 16078: t1 = u64 [sp + 0x10]
 16081: jump @1118 if a4 >u 127
      : @1116
 16085: i32 a1 = 0x80 - a4
 16089: a1 = a1 << 0x20
 16092: s1 = a1 >> 0x20
 16095: t2 = s1 + 0xffffffffffffffc0
 16098: i32 a1 = -a4
 16100: jump @1126 if t2 <s 0
      : @1117
 16104: t1 = t0 << s1
 16107: jump @1127
      : @1118
 16110: a2 = 0
 16112: a4 = a0 << 0x3
 16115: s0 = s0 | a3
 16118: jump @1132 if a5 >=s 0
      : @1119
 16122: a0 = a4 ^ a1
 16125: a3 = s0 ^ a2
 16128: a0 = a0 | a3
 16131: jump @1121 if a0 != 0
      : @1120
 16134: s1 = 0
 16136: s0 = 0
 16138: jump @1154
      : @1121
 16141: a0 = a4 <u a1
 16144: s0 = s0 - a2
 16147: a0 = s0 - a0
 16150: a2 = a0 >> 0x33
 16153: t0 = a4 - a1
 16156: jump @1140 if a2 != 0
      : @1122
 16160: a1 = a0 <u 0x1
 16163: a2 = t0
 16165: jump @1124 if a0 == 0
      : @1123
 16168: a2 = a0
 16170: fallthrough
      : @1124
 16171: a1 = a1 << 0x6
 16174: a4 = a2 >> 0x1
 16177: a2 = a2 | a4
 16180: a4 = a2 >> 0x2
 16183: a2 = a2 | a4
 16186: a4 = a2 >> 0x4
 16189: a2 = a2 | a4
 16192: a4 = a2 >> 0x8
 16195: a2 = a2 | a4
 16198: a4 = a2 >> 0x10
 16201: a2 = a2 | a4
 16204: a4 = a2 >> 0x20
 16207: a2 = a2 | a4
 16210: a2 = a2 ^ 0xffffffffffffffff
 16213: a4 = a2 >> 0x1
 16216: a5 = 0x5555555555555555
 16226: a4 = a4 & a5
 16229: a2 = a2 - a4
 16232: a4 = 0x3333333333333333
 16242: a5 = a2 & a4
 16245: a2 = a2 >> 0x2
 16248: a2 = a2 & a4
 16251: a2 = a2 + a5
 16254: a4 = a2 >> 0x4
 16257: a2 = a2 + a4
 16260: a4 = 0xf0f0f0f0f0f0f0f
 16270: a2 = a2 & a4
 16273: a5 = 0x101010100000000
 16283: a4 = 0x101010101010101
 16293: a2 = a2 * a4
 16296: a2 = a2 >> 0x38
 16299: a1 = a1 | a2
 16302: a1 = a1 + 0xfffffffffffffff4
 16305: a4 = a1 << 0x20
 16308: a4 = a4 >> 0x20
 16311: a2 = a4 + 0xffffffffffffffc0
 16314: jump @1138 if a2 <s 0
      : @1125
 16318: a0 = t0 << a4
 16321: jump @1139
      : @1126
 16324: u64 [sp + 0x8] = a1
 16327: a1 = u64 [sp + 0x8]
 16330: a1 = a2 << a1
 16333: u64 [sp] = a1
 16335: s1 = s1 ^ 0xffffffffffffffff
 16338: t1 = t0 >> 0x1
 16341: s1 = t1 >> s1
 16344: a1 = u64 [sp]
 16346: t1 = a1 | s1
 16349: a1 = u64 [sp + 0x8]
 16352: fallthrough
      : @1127
 16353: s1 = t0 << a1
 16356: a1 = t2 >>a 0x3f
 16359: a1 = a1 & s1
 16362: t1 = a1 | t1
 16365: a1 = a4 << 0x20
 16368: a1 = a1 >> 0x20
 16371: s1 = a1 + 0xffffffffffffffc0
 16374: t1 = t1 >u 0
 16376: jump @1129 if s1 <s 0
      : @1128
 16379: a1 = a2 >> a1
 16382: jump @1130
      : @1129
 16384: t0 = t0 >> a4
 16387: t2 = a2 << 0x1
 16390: a1 = a1 ^ 0xffffffffffffffff
 16393: a1 = t2 << a1
 16396: a1 = t0 | a1
 16399: fallthrough
      : @1130
 16400: a2 = a2 >> a4
 16403: s1 = s1 >>a 0x3f
 16406: a2 = a2 & s1
 16409: a1 = a1 | t1
 16412: fallthrough
      : @1131
 16413: t1 = u64 [sp + 0x10]
 16416: a4 = a0 << 0x3
 16419: s0 = s0 | a3
 16422: jump @1119 if a5 <s 0
      : @1132
 16426: t0 = a1 + a4
 16429: a0 = t0 <u a1
 16432: a2 = a2 + s0
 16435: a0 = a0 + a2
 16438: a2 = a0 << 0xb
 16441: jump @1140 if a2 >=s 0
      : @1133
 16444: a1 = a1 & 0x1
 16447: a3 = t0 >> 0x1
 16450: a2 = a0 << 0x3f
 16453: a0 = a0 >> 0x1
 16456: a1 = a1 | a3
 16459: t0 = a1 | a2
 16462: ra = ra + 0x1
 16465: jump @1140
      : @1134
 16467: a4 = a4 ^ a3
 16470: a4 = a4 | s1
 16473: jump @1154 if a4 == 0
      : @1135
 16477: a4 = a0 | a2
 16480: jump @1156 if a4 == 0
      : @1136
 16484: a4 = s1 | a3
 16487: jump @1081 if a4 != 0
      : @1137
 16491: s1 = a0
 16493: s0 = a1
 16495: jump @1154
      : @1138
 16498: a0 = a0 << a1
 16501: a4 = a4 ^ 0xffffffffffffffff
 16504: a5 = t0 >> 0x1
 16507: a4 = a5 >> a4
 16510: a0 = a0 | a4
 16513: fallthrough
      : @1139
 16514: a3 = t0 << a1
 16517: a2 = a2 >>a 0x3f
 16520: t0 = a2 & a3
 16523: ra = ra - a1
 16526: fallthrough
      : @1140
 16527: a3 = u64 [sp + 0x18]
 16530: a1 = t1 >> 0x3f
 16533: a2 = 0x7fff
 16537: s0 = a1 << 0x3f
 16540: jump @1142 if ra <s a2
      : @1141
 16543: s1 = 0
 16545: a0 = 0x7fff000000000000
 16555: s0 = s0 | a0
 16558: jump @1154
      : @1142
 16561: jump @1150 if ra >s 0
      : @1143
 16564: a1 = 0x1 - ra
 16567: i32 a5 = -a1
 16569: a2 = 0x40 - a1
 16572: a4 = t0 << a5
 16575: jump @1145 if a2 <s 0
      : @1144
 16578: a5 = a4
 16580: jump @1146
      : @1145
 16582: i32 s1 = 0x80 - a1
 16586: a5 = a0 << a5
 16589: s1 = s1 ^ 0xffffffffffffffff
 16592: a3 = t0 >> 0x1
 16595: a3 = a3 >> s1
 16598: a5 = a5 | a3
 16601: fallthrough
      : @1146
 16602: a2 = a2 >>a 0x3f
 16605: a2 = a2 & a4
 16608: a2 = a2 | a5
 16611: a2 = a2 >u 0
 16613: a4 = a0 >> a1
 16616: s1 = a1 << 0x20
 16619: s1 = s1 >> 0x20
 16622: a3 = s1 + 0xffffffffffffffc0
 16625: a5 = a3 >>a 0x3f
 16628: jump @1148 if a3 <s 0
      : @1147
 16631: a3 = a0 >> s1
 16634: jump @1149
      : @1148
 16636: a1 = t0 >> a1
 16639: a3 = s1 ^ 0xffffffffffffffff
 16642: a0 = a0 << 0x1
 16645: a3 = a0 << a3
 16648: a3 = a3 | a1
 16651: fallthrough
      : @1149
 16652: ra = 0
 16654: a0 = a5 & a4
 16657: t0 = a3 | a2
 16660: a3 = u64 [sp + 0x18]
 16663: fallthrough
      : @1150
 16664: a1 = t0 & 0x7
 16667: u64 [sp + 0x10] = a1
 16670: a1 = t0 >> 0x3
 16673: a2 = a0 << 0x3d
 16676: a2 = a2 | a1
 16679: a0 = a0 >> 0x3
 16682: u64 [sp + 0x8] = a2
 16685: s1 = a2 & 0xffffffffffffffff
 16688: a0 = a0 & a3
 16691: ra = ra << 0x30
 16694: u64 [sp + 0x18] = s0
 16697: s0 = ra | s0
 16700: s0 = s0 | a0
 16703: a2 = u64 [sp + 0x10]
 16706: fallthrough
      : @1151
 16707: jump @1155 if a2 != 4
      : @1152
 16711: a0 = u64 [sp + 0x8]
 16714: a0 = a0 & 0x1
 16717: a0 = a0 + s1
 16720: a1 = a0 <u s1
 16723: s0 = s0 + a1
 16726: s1 = a0
 16728: jump @1154
      : @1153
 16730: jump @1154 if a2 == 0
      : @1154
 16733: a0 = s1
 16735: a1 = s0
 16737: ra = u64 [sp + 0x30]
 16740: s0 = u64 [sp + 0x28]
 16743: s1 = u64 [sp + 0x20]
 16746: sp = sp + 0x38
 16749: ret
      : @1155
 16751: a0 = a2 <u 0x5
 16754: a0 = a0 ^ 0x1
 16757: a0 = a0 + s1
 16760: a1 = a0 <u s1
 16763: s0 = s0 + a1
 16766: s1 = a0
 16768: jump @1153
      : @1156
 16770: a3 = a3 | s1
 16773: jump @1154 if a3 != 0
      : @1157
 16776: s1 = s1 & a0
 16779: s0 = s0 & a1
 16782: jump @1154
      : @1158
 16784: jump @1161 if a0 == 0
      : @1159
 16787: sp = sp + 0xfffffffffffffff8
 16790: u64 [sp] = ra
 16792: ra = 456, jump @1162
      : @1160 [@dyn 228]
 16797: ra = u64 [sp]
 16799: sp = sp + 0x8
 16802: i32 a0 = a0 + 0
 16804: ret
      : @1161
 16806: i32 a0 = a0 + 0
 16808: ret
      : @1162
 16810: a2 = a0
 16812: a0 = 0x1
 16815: jump @1160 if a2 == 0
      : @1163
 16818: a3 = 0x7f
 16821: jump @1165 if a3 <u a1
      : @1164
 16824: u8 [a2] = a1
 16826: jump @1160
      : @1165
 16828: sp = sp + 0xffffffffffffffe8
 16831: u64 [sp + 0x10] = ra
 16834: u64 [sp + 0x8] = s0
 16837: u64 [sp] = s1
 16839: s1 = a1
 16841: s0 = a2
 16843: fallthrough
      : @1166
 16844: a0 = u64 [0x30118]
 16849: a0 = u64 [a0]
 16851: jump @1169 if a0 == 0
      : @1167
 16854: a0 = s0
 16856: a1 = s1
 16858: jump @1171 if s1 >u 2047
      : @1168
 16863: a2 = a1 >> 0x6
 16866: a1 = a1 & 0x3f
 16869: a2 = a2 | 0xc0
 16873: a1 = a1 | 0x80
 16877: u8 [a0] = a2
 16879: u8 [a0 + 0x1] = a1
 16882: a0 = 0x2
 16885: jump @1178
      : @1169
 16888: i32 a1 = s1 >> 0x7
 16891: a2 = 0x1bf
 16895: a0 = 0x1
 16898: jump @1175 if a1 != a2
      : @1170
 16901: u8 [s0] = s1
 16903: jump @1178
      : @1171
 16906: i32 a2 = a1 >> 0xb
 16909: jump @1177 if a2 <u 27
      : @1172
 16913: a2 = a1 & 0xffffffffffffe000
 16917: a3 = 0xe000
 16922: jump @1177 if a2 == a3
      : @1173
 16925: a2 = a1 + 0xffffffffffff0000
 16930: i32 a2 = a2 >> 0x14
 16933: jump @1175 if a2 != 0
      : @1174
 16936: a2 = a1 >> 0x12
 16939: a3 = a1 << 0x2e
 16942: a4 = a1 << 0x34
 16945: a1 = a1 & 0x3f
 16948: a2 = a2 | 0xf0
 16952: a3 = a3 >> 0x3a
 16955: a4 = a4 >> 0x3a
 16958: a1 = a1 | 0x80
 16962: a3 = a3 + 0x80
 16966: a4 = a4 + 0x80
 16970: u8 [a0] = a2
 16972: u8 [a0 + 0x1] = a3
 16975: u8 [a0 + 0x2] = a4
 16978: u8 [a0 + 0x3] = a1
 16981: a0 = 0x4
 16984: jump @1178
      : @1175
 16986: ra = 458, jump @230
      : @1176 [@dyn 229]
 16992: a1 = 0x54
 16995: u32 [a0] = a1
 16997: a0 = 0xffffffffffffffff
 17000: jump @1178
      : @1177
 17002: a2 = a1 >> 0xc
 17005: a3 = a1 << 0x34
 17008: a1 = a1 & 0x3f
 17011: a2 = a2 | 0xe0
 17015: a3 = a3 >> 0x3a
 17018: a1 = a1 | 0x80
 17022: a3 = a3 + 0x80
 17026: u8 [a0] = a2
 17028: u8 [a0 + 0x1] = a3
 17031: u8 [a0 + 0x2] = a1
 17034: a0 = 0x3
 17037: fallthrough
      : @1178
 17038: ra = u64 [sp + 0x10]
 17041: s0 = u64 [sp + 0x8]
 17044: s1 = u64 [sp]
 17046: sp = sp + 0x18
 17049: ret
      : @1179
 17051: a2 = 0
 17053: jump @1184 if a1 <s 0
      : @1180
 17056: a3 = a1 << 0x1
 17059: a3 = a3 >> 0x31
 17062: a4 = 0x3fff
 17066: jump @1184 if a3 <u a4
      : @1181
 17069: a4 = a3 + 0xffffffffffffbfe1
 17073: a5 = 0xffffffffffffffe0
 17076: a2 = 0xffffffffffffffff
 17079: jump @1184 if a4 <u a5
      : @1182
 17082: a1 = a1 << 0x10
 17085: t0 = a1 >> 0x10
 17088: a5 = 0x1000000000000
 17098: i32 a2 = 0x406f - a3
 17102: a1 = a2 << 0x20
 17105: a1 = a1 >> 0x20
 17108: a4 = a1 + 0xffffffffffffffc0
 17111: a3 = t0 | a5
 17114: jump @1185 if a4 <s 0
      : @1183
 17117: a2 = a3 >> a1
 17120: i32 a0 = a2 + 0
 17122: jump @472
      : @1184
 17125: i32 a0 = a2 + 0
 17127: jump @472
      : @1185
 17130: a0 = a0 >> a2
 17133: a1 = a1 ^ 0xffffffffffffffff
 17136: a3 = a3 << 0x1
 17139: a2 = a3 << a1
 17142: a2 = a2 | a0
 17145: i32 a0 = a2 + 0
 17147: jump @472
      : @1186
 17150: jump @1189 if a0 == 0
      : @1187
 17153: i32 a1 = a0 >> 0x1
 17156: a2 = a0 | a1
 17159: i32 a3 = a2 >> 0x2
 17162: a2 = a2 | a3
 17165: i32 a3 = a2 >> 0x4
 17168: a2 = a2 | a3
 17171: i32 a3 = a2 >> 0x8
 17174: a2 = a2 | a3
 17177: i32 a3 = a2 >> 0x10
 17180: a2 = a2 | a3
 17183: a2 = a2 ^ 0xffffffffffffffff
 17186: a3 = a2 >> 0x1
 17189: a3 = a3 & 0x55555555
 17195: a2 = a2 - a3
 17198: a4 = a2 & 0x33333333
 17204: a2 = a2 >> 0x2
 17207: a2 = a2 & 0x33333333
 17213: a2 = a2 + a4
 17216: a3 = a2 >> 0x4
 17219: a2 = a2 + a3
 17222: a2 = a2 & 0xf0f0f0f
 17228: a2 = a2 * 0x1010101
 17234: i32 a2 = a2 >> 0x18
 17237: a4 = a0 << 0x20
 17240: a0 = a2 ^ 0x1f
 17243: i32 a0 = 0x70 - a0
 17246: a5 = a0 << 0x20
 17249: a5 = a5 >> 0x20
 17252: a3 = a5 + 0xffffffffffffffc0
 17255: a4 = a4 >> 0x20
 17258: jump @1190 if a3 <s 0
      : @1188
 17261: a1 = a4 << a5
 17264: jump @1191
      : @1189
 17266: a1 = 0
 17268: jump @474
      : @1190
 17271: a5 = a5 ^ 0xffffffffffffffff
 17274: a1 = a1 >> a5
 17277: fallthrough
      : @1191
 17278: a0 = a4 << a0
 17281: a3 = a3 >>a 0x3f
 17284: a0 = a0 & a3
 17287: a3 = 0x1000000000000
 17297: a1 = a1 ^ a3
 17300: i32 a3 = 0x401e - a2
 17304: a3 = a3 << 0x30
 17307: a1 = a1 + a3
 17310: jump @474
      : @1192
 17313: a2 = a1 << 0x1
 17316: a2 = a2 >> 0x31
 17319: a3 = 0x3fff
 17323: jump @1194 if a2 >=u a3
      : @1193
 17326: a0 = 0
 17328: jump @628
      : @1194
 17331: a3 = a2 + 0xffffffffffffbfe1
 17335: a4 = 0xffffffffffffffdf
 17338: jump @1196 if a4 <u a3
      : @1195
 17341: a1 = a1 >>a 0x3f
 17344: a0 = 0xffffffff7fffffff
 17354: a0 = a0 ^ a1
 17357: i32 a0 = a0 + 0
 17359: jump @628
      : @1196
 17362: a3 = a1 << 0x10
 17365: t0 = a3 >> 0x10
 17368: a4 = 0x1000000000000
 17378: i32 a3 = 0x406f - a2
 17382: a2 = a3 << 0x20
 17385: a2 = a2 >> 0x20
 17388: a5 = a2 + 0xffffffffffffffc0
 17391: a4 = t0 | a4
 17394: jump @1199 if a5 <s 0
      : @1197
 17397: a0 = a4 >> a2
 17400: jump @1200 if a1 <s 0
      : @1198
 17403: jump @1201
      : @1199
 17405: a0 = a0 >> a3
 17408: a2 = a2 ^ 0xffffffffffffffff
 17411: a4 = a4 << 0x1
 17414: a2 = a4 << a2
 17417: a0 = a0 | a2
 17420: jump @1201 if a1 >=s 0
      : @1200
 17423: i32 a0 = -a0
 17425: i32 a0 = a0 + 0
 17427: jump @628
      : @1201
 17430: i32 a0 = a0 + 0
 17432: jump @628
      : @1202
 17435: sp = sp + 0xffffffffffffff70
 17439: u64 [sp + 0x88] = ra
 17443: u64 [sp + 0x80] = s0
 17447: u64 [sp + 0x78] = s1
 17450: ra = 0
 17452: a4 = a1
 17454: u64 [sp + 0x70] = a0
 17457: t1 = 0xffffffffffffffff
 17460: s0 = 0xffffffffffff
 17470: a5 = a1 << 0x1
 17473: s1 = a5 >> 0x31
 17476: a0 = a3 << 0x1
 17479: t0 = a0 >> 0x31
 17482: a0 = a3 ^ a1
 17485: a0 = a0 >> 0x3f
 17488: t2 = a0 << 0x3f
 17491: a0 = a1 & s0
 17494: u64 [sp + 0x68] = a0
 17497: a5 = s1 + 0xffffffffffff8001
 17501: u64 [sp + 0x60] = s0
 17504: a1 = a3 & s0
 17507: jump @1208 if a5 <u 4294934530
      : @1203
 17513: a2 = t0 + 0xffffffffffff8001
 17517: jump @1208 if a2 <=u 4294934529
      : @1204
 17523: a4 = a1
 17525: u64 [sp + 0x58] = t2
 17528: t1 = 0
 17530: fallthrough
      : @1205
 17531: u64 [sp + 0x40] = ra
 17534: a0 = 0x1000000000000
 17544: s0 = u64 [sp + 0x68]
 17547: a1 = s0 | a0
 17550: a4 = a4 | a0
 17553: a0 = s1 - t0
 17556: a0 = a0 + t1
 17559: u64 [sp + 0x48] = a0
 17562: a2 = ra << 0xf
 17565: u64 [sp + 0x50] = a4
 17568: a0 = a4 << 0xf
 17571: a4 = ra >> 0x31
 17574: a4 = a4 | a0
 17577: a0 = 0x7504f33300000000
 17587: a0 = a0 - a4
 17590: a5 = a4 mulhu a0
 17593: a5 = -a5
 17595: s1 = a5 * a0
 17598: a0 = a5 mulhu a0
 17601: a0 = a0 << 0x1
 17604: s1 = s1 >> 0x3f
 17607: a0 = a0 | s1
 17610: a5 = a0 mulhu a4
 17613: a5 = -a5
 17615: s1 = a0 * a5
 17618: a0 = a0 mulhu a5
 17621: a0 = a0 << 0x1
 17624: s1 = s1 >> 0x3f
 17627: a0 = a0 | s1
 17630: a5 = a0 mulhu a4
 17633: a5 = -a5
 17635: s1 = a0 * a5
 17638: a0 = a0 mulhu a5
 17641: a0 = a0 << 0x1
 17644: s1 = s1 >> 0x3f
 17647: a0 = a0 | s1
 17650: a5 = a0 mulhu a4
 17653: a5 = -a5
 17655: s1 = a0 * a5
 17658: a0 = a0 mulhu a5
 17661: a0 = a0 << 0x1
 17664: s1 = s1 >> 0x3f
 17667: a0 = a0 | s1
 17670: a0 = a0 + 0xffffffffffffffff
 17673: a5 = a4 mulhu a0
 17676: a4 = a4 * a0
 17679: a2 = a2 mulhu a0
 17682: a2 = a2 + a4
 17685: a4 = a2 <u a4
 17688: a4 = a4 + a5
 17691: a5 = a2 <u 0x2
 17694: a5 = a5 ^ 0x1
 17697: a4 = a4 + a5
 17700: a4 = -a4
 17702: a3 = 0x1 - a2
 17705: a2 = a0 * a4
 17708: a5 = a2 >> 0x3f
 17711: a4 = a0 mulhu a4
 17714: a4 = a4 << 0x1
 17717: a4 = a4 | a5
 17720: a2 = a2 << 0x1
 17723: a5 = a3 * a0
 17726: a0 = a3 mulhu a0
 17729: a3 = a0 << 0x1
 17732: a5 = a5 >> 0x3f
 17735: a3 = a3 | a5
 17738: a0 = a0 >> 0x3f
 17741: a3 = a3 + a2
 17744: a2 = a3 <u a2
 17747: a0 = a0 + a4
 17750: a0 = a0 + a2
 17753: t1 = a3 + 0xffffffffffffc999
 17757: a2 = t1 <u a3
 17760: a0 = a0 + a2
 17763: t0 = a0 + 0xffffffffffffffff
 17766: u64 [sp + 0x18] = a1
 17769: a1 = a1 << 0x1
 17772: a0 = u64 [sp + 0x70]
 17775: a4 = a0 >> 0x3f
 17778: u64 [sp + 0x70] = a0
 17781: a0 = a0 << 0x1
 17784: a5 = t0 >> 0x20
 17787: u64 [sp + 0x10] = a1
 17790: a2 = a1 >> 0x20
 17793: a1 = s0 << 0x1
 17796: u64 [sp + 0x8] = a4
 17799: a4 = a4 | a1
 17802: a4 = a4 << 0x20
 17805: a1 = 0xfffffffe
 17815: t2 = a0 & a1
 17818: a1 = a5 * a2
 17821: u64 [sp + 0x68] = a1
 17824: ra = a4 >> 0x20
 17827: a1 = ra * a5
 17830: u64 [sp + 0x28] = a1
 17833: u64 [sp + 0x20] = a0
 17836: a1 = a0 >> 0x20
 17839: a0 = a1 * a5
 17842: u64 [sp + 0x38] = a0
 17845: s0 = t2 * a5
 17848: t0 = t0 << 0x20
 17851: a0 = t0 >> 0x20
 17854: a3 = t0 mulhu a4
 17857: u64 [sp + 0x30] = a3
 17860: t0 = a0 * a2
 17863: a5 = a0 * a1
 17866: a0 = a0 * t2
 17869: s1 = t1 >> 0x20
 17872: a3 = s1 * ra
 17875: ra = s1 * t2
 17878: t2 = s1 * a2
 17881: s1 = s1 * a1
 17884: t1 = t1 << 0x20
 17887: a4 = t1 mulhu a4
 17890: t1 = t1 >> 0x20
 17893: a2 = t1 * a2
 17896: t1 = t1 * a1
 17899: s1 = s1 + a4
 17902: a1 = s1 <u a4
 17905: a0 = a0 + s1
 17908: a4 = a0 <u s1
 17911: a4 = a4 + a1
 17914: s0 = s0 + a2
 17917: a1 = s0 <u a2
 17920: a3 = a3 + s0
 17923: a2 = a3 <u s0
 17926: a1 = a1 + a2
 17929: a5 = a5 + a3
 17932: a2 = a5 <u a3
 17935: a1 = a1 + a2
 17938: t1 = t1 + ra
 17941: a2 = t1 <u ra
 17944: a3 = t1 >> 0x20
 17947: a2 = a2 << 0x20
 17950: a2 = a2 | a3
 17953: a2 = a2 + a0
 17956: a0 = a2 <u a0
 17959: a3 = a5 << 0x20
 17962: a3 = a3 + a2
 17965: a2 = a3 <u a2
 17968: a2 = a2 + a0
 17971: a1 = a1 << 0x20
 17974: a0 = a5 >> 0x20
 17977: a0 = a0 | a1
 17980: a1 = u64 [sp + 0x28]
 17983: a1 = a1 + t0
 17986: a3 = a1 <u t0
 17989: a3 = a3 << 0x20
 17992: a5 = a1 >> 0x20
 17995: a3 = a3 | a5
 17998: a5 = u64 [sp + 0x38]
 18001: a5 = a5 + t2
 18004: s1 = a5 <u t2
 18007: s0 = u64 [sp + 0x68]
 18010: s1 = s1 + s0
 18013: s0 = u64 [sp + 0x30]
 18016: s0 = s0 + a5
 18019: a5 = s0 <u a5
 18022: a5 = a5 + s1
 18025: a3 = a3 + a5
 18028: a1 = a1 << 0x20
 18031: a1 = a1 + s0
 18034: a5 = a1 <u s0
 18037: a3 = a3 + a5
 18040: a4 = a4 + a1
 18043: a1 = a4 <u a1
 18046: a1 = a1 + a3
 18049: a0 = a0 + a4
 18052: a3 = a0 <u a4
 18055: a1 = a1 + a3
 18058: a3 = a0 + a2
 18061: s0 = a3 <u a0
 18064: s0 = s0 + a1
 18067: a0 = s0 >> 0x31
 18070: jump @1215 if a0 != 0
      : @1206
 18074: a0 = u64 [sp + 0x10]
 18077: s1 = u64 [sp + 0x8]
 18080: s1 = s1 | a0
 18083: a0 = u64 [sp + 0x70]
 18086: a0 = a0 << 0x31
 18089: t1 = u64 [sp + 0x40]
 18092: a1 = a3 mulhu t1
 18095: ra = u64 [sp + 0x50]
 18098: a2 = a3 * ra
 18101: a1 = a1 + a2
 18104: a2 = s0 * t1
 18107: a4 = a3 * t1
 18110: a0 = a0 - a1
 18113: a0 = a0 - a2
 18116: a1 = a4 >u 0
 18118: a1 = a0 - a1
 18121: a4 = -a4
 18123: a0 = u64 [sp + 0x48]
 18126: t0 = a0 + 0x3ffe
 18130: t2 = u64 [sp + 0x58]
 18133: jump @1216 if t0 >=s 32767
      : @1207
 18139: jump @1217
      : @1208
 18142: a0 = 0x7fffffffffffffff
 18152: s0 = a4 & a0
 18155: a2 = 0x7fff000000000000
 18165: jump @1219 if s0 == a2
      : @1209
 18169: a2 = s0 <u a2
 18172: a5 = u64 [sp + 0x70]
 18175: jump @1220 if a2 == 0
      : @1210
 18179: a4 = a3 & a0
 18182: a0 = 0x7fff000000000000
 18192: jump @1212 if a4 == a0
      : @1211
 18195: a0 = a4 <u a0
 18198: jump @1221 if a0 == 0
      : @1212
 18202: a0 = 0x7fff000000000000
 18212: a2 = s0 ^ a0
 18215: a2 = a2 | a5
 18218: jump @1225 if a2 != 0
      : @1213
 18222: a0 = a0 ^ a4
 18225: a0 = a0 | 0
 18227: jump @1216 if a0 != 0
      : @1214
 18230: a5 = 0
 18232: t2 = 0x7fff800000000000
 18242: jump @1249
      : @1215
 18245: a0 = u64 [sp + 0x48]
 18248: t0 = a0 + 0x3ffe
 18252: t0 = t0 + 0x1
 18255: a3 = a3 >> 0x1
 18258: a0 = s0 << 0x3f
 18261: a3 = a3 | a0
 18264: s0 = s0 >> 0x1
 18267: a5 = u64 [sp + 0x70]
 18270: a0 = a5 << 0x30
 18273: ra = u64 [sp + 0x50]
 18276: a1 = a3 * ra
 18279: t1 = u64 [sp + 0x40]
 18282: a2 = a3 mulhu t1
 18285: a1 = a1 + a2
 18288: a2 = s0 * t1
 18291: a4 = a3 * t1
 18294: a0 = a0 - a2
 18297: a0 = a0 - a1
 18300: a1 = a4 >u 0
 18302: a1 = a0 - a1
 18305: a4 = -a4
 18307: u64 [sp + 0x20] = a5
 18310: t2 = u64 [sp + 0x58]
 18313: s1 = u64 [sp + 0x18]
 18316: jump @1217 if t0 <s 32767
      : @1216
 18321: a5 = 0
 18323: a0 = 0x7fff000000000000
 18333: t2 = t2 | a0
 18336: jump @1249
      : @1217
 18339: jump @1222 if t0 <=s 0
      : @1218
 18342: a0 = a3 & 0xffffffffffffffff
 18345: a2 = u64 [sp + 0x60]
 18348: a2 = a2 & s0
 18351: a3 = t0 << 0x30
 18354: a3 = a3 | a2
 18357: a2 = a4 >> 0x3f
 18360: a1 = a1 << 0x1
 18363: a2 = a2 | a1
 18366: a1 = a4 << 0x1
 18369: jump @1239
      : @1219
 18372: a5 = u64 [sp + 0x70]
 18375: a2 = a5 <u 0x1
 18378: jump @1210 if a2 != 0
      : @1220
 18382: a0 = 0x800000000000
 18392: t2 = a4 | a0
 18395: jump @1249
      : @1221
 18398: a0 = 0x800000000000
 18408: t2 = a3 | a0
 18411: a5 = ra
 18413: jump @1249
      : @1222
 18416: jump @1226 if t0 <=s 4294967183
      : @1223
 18420: i32 a2 = 0x1 - t0
 18423: a0 = a2 << 0x20
 18426: a0 = a0 >> 0x20
 18429: a4 = a0 + 0xffffffffffffffc0
 18432: t0 = t0 + 0x70
 18435: jump @1234 if a4 <s 0
      : @1224
 18439: a0 = s0 >> a0
 18442: jump @1235
      : @1225
 18445: a0 = a0 ^ a4
 18448: a0 = a0 | 0
 18450: jump @1227 if a0 != 0
      : @1226
 18453: a5 = 0
 18455: jump @1249
      : @1227
 18458: a0 = a5 | s0
 18461: jump @1250 if a0 == 0
      : @1228
 18465: a0 = a4 | 0
 18467: jump @1216 if a0 == 0
      : @1229
 18471: s0 = s0 >> 0x30
 18474: jump @1252 if s0 != 0
      : @1230
 18478: u64 [sp + 0x50] = a1
 18481: a1 = u64 [sp + 0x68]
 18484: a3 = a1 <u 0x1
 18487: jump @1232 if a1 == 0
      : @1231
 18490: a5 = u64 [sp + 0x68]
 18493: fallthrough
      : @1232
 18494: a3 = a3 << 0x6
 18497: a2 = a5 >> 0x1
 18500: a0 = a5 | a2
 18503: a2 = a0 >> 0x2
 18506: a0 = a0 | a2
 18509: a2 = a0 >> 0x4
 18512: a0 = a0 | a2
 18515: a2 = a0 >> 0x8
 18518: a0 = a0 | a2
 18521: a2 = a0 >> 0x10
 18524: a0 = a0 | a2
 18527: a2 = a0 >> 0x20
 18530: a0 = a0 | a2
 18533: a0 = a0 ^ 0xffffffffffffffff
 18536: a2 = a0 >> 0x1
 18539: a5 = 0x5555555555555555
 18549: a2 = a2 & a5
 18552: a0 = a0 - a2
 18555: a2 = 0x3333333333333333
 18565: a5 = a0 & a2
 18568: a0 = a0 >> 0x2
 18571: a0 = a0 & a2
 18574: a0 = a0 + a5
 18577: a2 = a0 >> 0x4
 18580: a0 = a0 + a2
 18583: a2 = 0xf0f0f0f0f0f0f0f
 18593: a0 = a0 & a2
 18596: a2 = 0x101010101010101
 18606: a0 = a0 * a2
 18609: a0 = a0 >> 0x38
 18612: a0 = a0 | a3
 18615: a2 = a0 + 0xfffffffffffffff1
 18618: s0 = a2 << 0x20
 18621: s0 = s0 >> 0x20
 18624: a3 = s0 + 0xffffffffffffffc0
 18627: jump @1253 if a3 <s 0
      : @1233
 18631: a1 = u64 [sp + 0x70]
 18634: a5 = a1 << s0
 18637: jump @1254
      : @1234
 18640: a3 = a3 >> a2
 18643: a0 = a0 ^ 0xffffffffffffffff
 18646: a5 = s0 << 0x1
 18649: a0 = a5 << a0
 18652: a0 = a0 | a3
 18655: fallthrough
      : @1235
 18656: a1 = u64 [sp + 0x20]
 18659: a3 = s0 >> a2
 18662: a5 = a4 >>a 0x3f
 18665: a2 = t0 << 0x20
 18668: a2 = a2 >> 0x20
 18671: a4 = a2 + 0xffffffffffffffc0
 18674: a3 = a3 & a5
 18677: jump @1237 if a4 <s 0
      : @1236
 18680: a2 = a1 << a2
 18683: jump @1238
      : @1237
 18685: a5 = s1 << t0
 18688: s1 = a1 >> 0x1
 18691: a2 = a2 ^ 0xffffffffffffffff
 18694: a2 = s1 >> a2
 18697: a2 = a2 | a5
 18700: fallthrough
      : @1238
 18701: a1 = a1 << t0
 18704: a4 = a4 >>a 0x3f
 18707: a1 = a1 & a4
 18710: a4 = t1 * a3
 18713: a5 = t1 mulhu a0
 18716: s1 = ra * a0
 18719: a5 = a5 + s1
 18722: a4 = a4 + a5
 18725: a4 = a4 << 0x1
 18728: s1 = t1 * a0
 18731: a5 = s1 >> 0x3f
 18734: a4 = a4 | a5
 18737: s1 = s1 << 0x1
 18740: a5 = a1 <u s1
 18743: a2 = a2 - a5
 18746: a2 = a2 - a4
 18749: a1 = a1 - s1
 18752: fallthrough
      : @1239
 18753: a4 = a0 & 0x1
 18756: a1 = a1 + a4
 18759: a4 = a1 <u a4
 18762: a4 = a4 + a2
 18765: jump @1241 if a4 == ra
      : @1240
 18768: a2 = ra <u a4
 18771: jump @1242
      : @1241
 18773: a2 = t1 <u a1
 18776: fallthrough
      : @1242
 18777: a2 = a2 + a0
 18780: a0 = a2 <u a0
 18783: a3 = a3 + a0
 18786: a0 = 0x7fff000000000000
 18796: a5 = 0x3
 18799: a5 = t1 mulhu a5
 18802: s1 = ra << 0x1
 18805: a5 = a5 + ra
 18808: s1 = s1 + a5
 18811: a5 = a3 <u a0
 18814: jump @1244 if a4 == s1
      : @1243
 18817: s1 = s1 <u a4
 18820: jump @1245
      : @1244
 18822: s1 = t1 << 0x1
 18825: s1 = s1 + t1
 18828: s1 = s1 <u a1
 18831: fallthrough
      : @1245
 18832: a5 = a5 & s1
 18835: a5 = a5 + a2
 18838: a2 = a5 <u a2
 18841: a3 = a3 + a2
 18844: a2 = 0x5
 18847: a2 = t1 mulhu a2
 18850: s1 = ra << 0x2
 18853: a2 = a2 + ra
 18856: a2 = a2 + s1
 18859: a0 = a3 <u a0
 18862: jump @1247 if a4 == a2
      : @1246
 18865: a1 = a2 <u a4
 18868: jump @1248
      : @1247
 18870: a2 = t1 << 0x2
 18873: a2 = a2 + t1
 18876: a1 = a2 <u a1
 18879: fallthrough
      : @1248
 18880: a0 = a0 & a1
 18883: a1 = a5 + a0
 18886: a0 = a1 <u a5
 18889: a5 = a1
 18891: a0 = a0 + a3
 18894: t2 = a0 | t2
 18897: fallthrough
      : @1249
 18898: a0 = a5
 18900: a1 = t2
 18902: ra = u64 [sp + 0x88]
 18906: s0 = u64 [sp + 0x80]
 18910: s1 = u64 [sp + 0x78]
 18913: sp = sp + 0x90
 18917: ret
      : @1250
 18919: a0 = a4 | 0
 18921: jump @1226 if a0 != 0
      : @1251
 18925: t2 = 0x7fff800000000000
 18935: a5 = 0
 18937: jump @1249
      : @1252
 18939: t1 = 0
 18941: jump @1255
      : @1253
 18943: a1 = u64 [sp + 0x68]
 18946: t1 = a1 << a2
 18949: a5 = s0 ^ 0xffffffffffffffff
 18952: a1 = u64 [sp + 0x70]
 18955: s0 = a1 >> 0x1
 18958: a5 = s0 >> a5
 18961: a5 = t1 | a5
 18964: fallthrough
      : @1254
 18965: u64 [sp + 0x68] = a5
 18968: a2 = a1 << a2
 18971: a3 = a3 >>a 0x3f
 18974: a5 = a3 & a2
 18977: t1 = 0x10 - a0
 18980: a1 = u64 [sp + 0x50]
 18983: fallthrough
      : @1255
 18984: a4 = a4 >> 0x30
 18987: u64 [sp + 0x58] = t2
 18990: u64 [sp + 0x70] = a5
 18993: jump @1260 if a4 != 0
      : @1256
 18997: a3 = a1 <u 0x1
 19000: a0 = ra
 19002: jump @1258 if a1 == 0
      : @1257
 19005: a0 = a1
 19007: fallthrough
      : @1258
 19008: a3 = a3 << 0x6
 19011: a2 = a0 >> 0x1
 19014: a0 = a0 | a2
 19017: a2 = a0 >> 0x2
 19020: a0 = a0 | a2
 19023: a2 = a0 >> 0x4
 19026: a0 = a0 | a2
 19029: a2 = a0 >> 0x8
 19032: a0 = a0 | a2
 19035: a2 = a0 >> 0x10
 19038: a0 = a0 | a2
 19041: a2 = a0 >> 0x20
 19044: a0 = a0 | a2
 19047: a0 = a0 ^ 0xffffffffffffffff
 19050: a2 = a0 >> 0x1
 19053: a4 = 0x5555555555555555
 19063: a2 = a2 & a4
 19066: a0 = a0 - a2
 19069: a2 = 0x3333333333333333
 19079: a4 = a0 & a2
 19082: a0 = a0 >> 0x2
 19085: a0 = a0 & a2
 19088: a0 = a0 + a4
 19091: a2 = a0 >> 0x4
 19094: a0 = a0 + a2
 19097: a2 = 0xf0f0f0f0f0f0f0f
 19107: a0 = a0 & a2
 19110: a2 = 0x101010101010101
 19120: a0 = a0 * a2
 19123: a0 = a0 >> 0x38
 19126: a0 = a0 | a3
 19129: a2 = a0 + 0xfffffffffffffff1
 19132: a4 = a2 << 0x20
 19135: a4 = a4 >> 0x20
 19138: a3 = a4 + 0xffffffffffffffc0
 19141: jump @1261 if a3 <s 0
      : @1259
 19144: a4 = 0 << a4
 19146: jump @1262
      : @1260
 19148: a4 = a1
 19150: jump @1205
      : @1261
 19153: a1 = a1 << a2
 19156: a4 = a4 ^ 0xffffffffffffffff
 19159: a4 = 0 >> a4
 19161: a4 = a4 | a1
 19164: fallthrough
      : @1262
 19165: a2 = 0 << a2
 19167: a3 = a3 >>a 0x3f
 19170: ra = a3 & a2
 19173: a0 = a0 + t1
 19176: t1 = a0 + 0xfffffffffffffff0
 19179: jump @1205
      : @1263 [@dyn 230]
 19182: a1 = sp + 0x107
 19186: a0 = 0x1d0
 19190: u64 [sp + 0x50] = a0
 19193: u64 [sp + 0x60] = a1
 19196: a0 = sp + 0xf0
 19200: u32 [sp + 148] = 0xffffffffffffffff
 19205: u32 [sp + 152] = 0xffffffffffffffff
 19210: u64 [sp + 0xa0] = a0
 19214: u8 [s0 + 0] = 0
 19216: a0 = sp + 0x8
 19219: a1 = s1
 19221: a2 = u64 [sp]
 19223: ra = 462, jump @250
      : @1264 [@dyn 231]
 19229: ra = u64 [sp + 0x118]
 19233: s0 = u64 [sp + 0x110]
 19237: s1 = u64 [sp + 0x108]
 19241: sp = sp + 0x120
 19245: ret
      : @1265 [@dyn 232]
 19247: sp = sp + 0xffffffffffffffd0
 19250: u64 [sp + 0x28] = ra
 19253: u64 [sp + 0x20] = s0
 19256: u64 [sp + 0x18] = s1
 19259: a5 = a2
 19261: s1 = u64 [a0 + 0x98]
 19265: a4 = u64 [a0 + 0x28]
 19268: u64 [sp + 0x8] = a0
 19271: a2 = u64 [a0 + 0x38]
 19274: a3 = u64 [s1 + 0x8]
 19277: a0 = u64 [s1]
 19279: a4 = a4 - a2
 19282: s0 = minu(a3, a4)
 19285: u64 [sp + 0x10] = a5
 19288: jump @1268 if s0 == 0
      : @1266
 19291: u64 [sp] = a1
 19293: a1 = a2
 19295: a2 = s0
 19297: ra = 466, jump @1272
      : @1267 [@dyn 233]
 19302: a1 = u64 [sp]
 19304: a5 = u64 [sp + 0x10]
 19307: a0 = u64 [s1]
 19309: a3 = u64 [s1 + 0x8]
 19312: a0 = a0 + s0
 19315: a3 = a3 - s0
 19318: u64 [s1] = a0
 19320: u64 [s1 + 0x8] = a3
 19323: fallthrough
      : @1268
 19324: s0 = minu(a3, a5)
 19327: jump @1271 if s0 == 0
      : @1269
 19330: a2 = s0
 19332: ra = 468, jump @1272
      : @1270 [@dyn 234]
 19337: a5 = u64 [sp + 0x10]
 19340: a0 = u64 [s1]
 19342: a1 = u64 [s1 + 0x8]
 19345: a0 = a0 + s0
 19348: a1 = a1 - s0
 19351: u64 [s1] = a0
 19353: u64 [s1 + 0x8] = a1
 19356: fallthrough
      : @1271
 19357: u8 [a0 + 0] = 0
 19359: a1 = u64 [sp + 0x8]
 19362: a0 = u64 [a1 + 0x58]
 19365: u64 [a1 + 0x28] = a0
 19368: u64 [a1 + 0x38] = a0
 19371: a0 = a5
 19373: ra = u64 [sp + 0x28]
 19376: s0 = u64 [sp + 0x20]
 19379: s1 = u64 [sp + 0x18]
 19382: sp = sp + 0x30
 19385: ret
      : @1272
 19387: sp = sp + 0xffffffffffffffe8
 19390: u64 [sp + 0x10] = ra
 19393: u64 [sp + 0x8] = s0
 19396: u64 [sp] = s1
 19398: a3 = a1 & 0x3
 19401: jump @1291 if a3 == 0
      : @1273
 19405: jump @1278 if a2 == 0
      : @1274
 19408: a4 = a1 + 0x1
 19411: t0 = 0x1
 19414: t1 = a0
 19416: fallthrough
      : @1275
 19417: t2 = u8 [a1]
 19419: a5 = a2
 19421: a1 = a1 + 0x1
 19424: a3 = a4 & 0x3
 19427: u8 [t1] = t2
 19429: t1 = t1 + 0x1
 19432: a2 = a2 + 0xffffffffffffffff
 19435: jump @1279 if a3 == 0
      : @1276
 19438: a4 = a4 + 0x1
 19441: jump @1275 if a5 != t0
      : @1277
 19444: jump @1279
      : @1278
 19446: t1 = a0
 19448: fallthrough
      : @1279
 19449: a5 = t1 & 0x3
 19452: jump @1292 if a5 == 0
      : @1280
 19456: jump @1285 if a2 >=u 32
      : @1281
 19460: jump @1306 if a2 >=u 16
      : @1282
 19465: a3 = a2 & 0x8
 19468: jump @1307 if a3 != 0
      : @1283
 19472: a3 = a2 & 0x4
 19475: jump @1308 if a3 != 0
      : @1284
 19479: jump @1309
      : @1285
 19482: a4 = i32 [a1]
 19484: jump @1299 if a5 == 3
      : @1286
 19489: jump @1303 if a5 != 2
      : @1287
 19494: a3 = a4 >> 0x8
 19497: a2 = a2 + 0xfffffffffffffffe
 19500: u8 [t1] = a4
 19502: u8 [t1 + 0x1] = a3
 19505: t1 = t1 + 0x2
 19508: a1 = a1 + 0x10
 19511: t0 = 0x11
 19514: fallthrough
      : @1288
 19515: i32 t2 = a4 >> 0x10
 19518: a3 = i32 [a1 + 0xfffffffffffffff4]
 19521: s0 = i32 [a1 + 0xfffffffffffffff8]
 19524: a5 = i32 [a1 + 0xfffffffffffffffc]
 19527: a4 = i32 [a1]
 19529: s1 = a3 << 0x10
 19532: i32 a3 = a3 >> 0x10
 19535: t2 = s1 | t2
 19538: s1 = s0 << 0x10
 19541: i32 s0 = s0 >> 0x10
 19544: a3 = a3 | s1
 19547: s1 = a5 << 0x10
 19550: i32 a5 = a5 >> 0x10
 19553: s0 = s0 | s1
 19556: s1 = a4 << 0x10
 19559: a5 = a5 | s1
 19562: a2 = a2 + 0xfffffffffffffff0
 19565: u32 [t1] = t2
 19567: u32 [t1 + 0x4] = a3
 19570: u32 [t1 + 0x8] = s0
 19573: u32 [t1 + 0xc] = a5
 19576: t1 = t1 + 0x10
 19579: a1 = a1 + 0x10
 19582: jump @1288 if t0 <u a2
      : @1289
 19585: a1 = a1 + 0xfffffffffffffff2
 19588: jump @1282 if a2 <u 16
      : @1290
 19592: jump @1306
      : @1291
 19595: t1 = a0
 19597: a5 = a0 & 0x3
 19600: jump @1280 if a5 != 0
      : @1292
 19604: jump @1295 if a2 <u 16
      : @1293
 19608: t0 = 0xf
 19611: fallthrough
      : @1294
 19612: t2 = i32 [a1]
 19614: a5 = i32 [a1 + 0x4]
 19617: a4 = i32 [a1 + 0x8]
 19620: a3 = i32 [a1 + 0xc]
 19623: a1 = a1 + 0x10
 19626: a2 = a2 + 0xfffffffffffffff0
 19629: u32 [t1] = t2
 19631: u32 [t1 + 0x4] = a5
 19634: u32 [t1 + 0x8] = a4
 19637: u32 [t1 + 0xc] = a3
 19640: t1 = t1 + 0x10
 19643: jump @1294 if t0 <u a2
      : @1295
 19646: jump @1297 if a2 <u 8
      : @1296
 19650: a3 = i32 [a1]
 19652: a4 = i32 [a1 + 0x4]
 19655: u32 [t1] = a3
 19657: u32 [t1 + 0x4] = a4
 19660: t1 = t1 + 0x8
 19663: a1 = a1 + 0x8
 19666: fallthrough
      : @1297
 19667: a3 = a2 & 0x4
 19670: jump @1309 if a3 == 0
      : @1298
 19674: a3 = i32 [a1]
 19676: a1 = a1 + 0x4
 19679: u32 [t1] = a3
 19681: t1 = t1 + 0x4
 19684: jump @1309
      : @1299
 19687: u8 [t1] = a4
 19689: t1 = t1 + 0x1
 19692: a2 = a2 + 0xffffffffffffffff
 19695: a1 = a1 + 0x10
 19698: t0 = 0x12
 19701: fallthrough
      : @1300
 19702: i32 t2 = a4 >> 0x8
 19705: a3 = i32 [a1 + 0xfffffffffffffff4]
 19708: s0 = i32 [a1 + 0xfffffffffffffff8]
 19711: a5 = i32 [a1 + 0xfffffffffffffffc]
 19714: a4 = i32 [a1]
 19716: s1 = a3 << 0x18
 19719: i32 a3 = a3 >> 0x8
 19722: t2 = s1 | t2
 19725: s1 = s0 << 0x18
 19728: i32 s0 = s0 >> 0x8
 19731: a3 = a3 | s1
 19734: s1 = a5 << 0x18
 19737: i32 a5 = a5 >> 0x8
 19740: s0 = s0 | s1
 19743: s1 = a4 << 0x18
 19746: a5 = a5 | s1
 19749: a2 = a2 + 0xfffffffffffffff0
 19752: u32 [t1] = t2
 19754: u32 [t1 + 0x4] = a3
 19757: u32 [t1 + 0x8] = s0
 19760: u32 [t1 + 0xc] = a5
 19763: t1 = t1 + 0x10
 19766: a1 = a1 + 0x10
 19769: jump @1300 if t0 <u a2
      : @1301
 19772: a1 = a1 + 0xfffffffffffffff1
 19775: jump @1282 if a2 <u 16
      : @1302
 19780: jump @1306
      : @1303
 19782: a3 = a4 >> 0x8
 19785: a5 = a4 >> 0x10
 19788: a2 = a2 + 0xfffffffffffffffd
 19791: u8 [t1] = a4
 19793: u8 [t1 + 0x1] = a3
 19796: u8 [t1 + 0x2] = a5
 19799: t1 = t1 + 0x3
 19802: a1 = a1 + 0x10
 19805: t0 = 0x10
 19808: fallthrough
      : @1304
 19809: i32 t2 = a4 >> 0x18
 19812: a5 = i32 [a1 + 0xfffffffffffffff4]
 19815: a3 = i32 [a1 + 0xfffffffffffffff8]
 19818: s0 = i32 [a1 + 0xfffffffffffffffc]
 19821: a4 = i32 [a1]
 19823: s1 = a5 << 0x8
 19826: i32 a5 = a5 >> 0x18
 19829: t2 = s1 | t2
 19832: s1 = a3 << 0x8
 19835: i32 a3 = a3 >> 0x18
 19838: a5 = a5 | s1
 19841: s1 = s0 << 0x8
 19844: i32 s0 = s0 >> 0x18
 19847: a3 = a3 | s1
 19850: s1 = a4 << 0x8
 19853: s0 = s0 | s1
 19856: a2 = a2 + 0xfffffffffffffff0
 19859: u32 [t1] = t2
 19861: u32 [t1 + 0x4] = a5
 19864: u32 [t1 + 0x8] = a3
 19867: u32 [t1 + 0xc] = s0
 19870: t1 = t1 + 0x10
 19873: a1 = a1 + 0x10
 19876: jump @1304 if t0 <u a2
      : @1305
 19879: a1 = a1 + 0xfffffffffffffff3
 19882: jump @1282 if a2 <u 16
      : @1306
 19887: a3 = u8 [a1]
 19889: a4 = u8 [a1 + 0x1]
 19892: a5 = u8 [a1 + 0x2]
 19895: s1 = u8 [a1 + 0x3]
 19898: t0 = u8 [a1 + 0x4]
 19901: t2 = u8 [a1 + 0x5]
 19904: ra = u8 [a1 + 0x6]
 19907: s0 = u8 [a1 + 0x7]
 19910: u8 [t1] = a3
 19912: u8 [t1 + 0x1] = a4
 19915: u8 [t1 + 0x2] = a5
 19918: u8 [t1 + 0x3] = s1
 19921: a3 = u8 [a1 + 0x8]
 19924: a4 = u8 [a1 + 0x9]
 19927: a5 = u8 [a1 + 0xa]
 19930: s1 = u8 [a1 + 0xb]
 19933: u8 [t1 + 0x4] = t0
 19936: u8 [t1 + 0x5] = t2
 19939: u8 [t1 + 0x6] = ra
 19942: u8 [t1 + 0x7] = s0
 19945: t0 = u8 [a1 + 0xc]
 19948: t2 = u8 [a1 + 0xd]
 19951: ra = u8 [a1 + 0xe]
 19954: s0 = u8 [a1 + 0xf]
 19957: a1 = a1 + 0x10
 19960: u8 [t1 + 0x8] = a3
 19963: u8 [t1 + 0x9] = a4
 19966: u8 [t1 + 0xa] = a5
 19969: u8 [t1 + 0xb] = s1
 19972: a3 = t1 + 0x10
 19975: u8 [t1 + 0xc] = t0
 19978: u8 [t1 + 0xd] = t2
 19981: u8 [t1 + 0xe] = ra
 19984: u8 [t1 + 0xf] = s0
 19987: t1 = a3
 19989: a3 = a2 & 0x8
 19992: jump @1283 if a3 == 0
      : @1307
 19996: t0 = u8 [a1]
 19998: t2 = u8 [a1 + 0x1]
 20001: ra = u8 [a1 + 0x2]
 20004: s1 = u8 [a1 + 0x3]
 20007: s0 = u8 [a1 + 0x4]
 20010: a3 = u8 [a1 + 0x5]
 20013: a4 = u8 [a1 + 0x6]
 20016: a5 = u8 [a1 + 0x7]
 20019: a1 = a1 + 0x8
 20022: u8 [t1] = t0
 20024: u8 [t1 + 0x1] = t2
 20027: u8 [t1 + 0x2] = ra
 20030: u8 [t1 + 0x3] = s1
 20033: s1 = t1 + 0x8
 20036: u8 [t1 + 0x4] = s0
 20039: u8 [t1 + 0x5] = a3
 20042: u8 [t1 + 0x6] = a4
 20045: u8 [t1 + 0x7] = a5
 20048: t1 = s1
 20050: a3 = a2 & 0x4
 20053: jump @1309 if a3 == 0
      : @1308
 20056: a3 = u8 [a1]
 20058: a4 = u8 [a1 + 0x1]
 20061: a5 = u8 [a1 + 0x2]
 20064: s1 = u8 [a1 + 0x3]
 20067: a1 = a1 + 0x4
 20070: s0 = t1 + 0x4
 20073: u8 [t1] = a3
 20075: u8 [t1 + 0x1] = a4
 20078: u8 [t1 + 0x2] = a5
 20081: u8 [t1 + 0x3] = s1
 20084: t1 = s0
 20086: fallthrough
      : @1309
 20087: a3 = a2 & 0x2
 20090: jump @1312 if a3 != 0
      : @1310
 20093: a2 = a2 & 0x1
 20096: jump @1313 if a2 != 0
      : @1311
 20099: ra = u64 [sp + 0x10]
 20102: s0 = u64 [sp + 0x8]
 20105: s1 = u64 [sp]
 20107: sp = sp + 0x18
 20110: ret
      : @1312
 20112: a3 = u8 [a1]
 20114: a4 = u8 [a1 + 0x1]
 20117: a1 = a1 + 0x2
 20120: a5 = t1 + 0x2
 20123: u8 [t1] = a3
 20125: u8 [t1 + 0x1] = a4
 20128: t1 = a5
 20130: a2 = a2 & 0x1
 20133: jump @1311 if a2 == 0
      : @1313
 20136: a1 = u8 [a1]
 20138: u8 [t1] = a1
 20140: ra = u64 [sp + 0x10]
 20143: s0 = u64 [sp + 0x8]
 20146: s1 = u64 [sp]
 20148: sp = sp + 0x18
 20151: ret
      : @1314
 20153: jump @1323 if a2 == 0
      : @1315
 20157: u8 [a0] = a1
 20159: a3 = a0 + a2
 20162: a4 = 0x3
 20165: u8 [a3 + 0xffffffffffffffff] = a1
 20168: jump @1323 if a2 <u a4
      : @1316
 20172: u8 [a0 + 0x1] = a1
 20175: u8 [a0 + 0x2] = a1
 20178: a4 = 0x7
 20181: u8 [a3 + 0xfffffffffffffffd] = a1
 20184: u8 [a3 + 0xfffffffffffffffe] = a1
 20187: jump @1323 if a2 <u a4
      : @1317
 20191: u8 [a0 + 0x3] = a1
 20194: t0 = 0x9
 20197: u8 [a3 + 0xfffffffffffffffc] = a1
 20200: jump @1323 if a2 <u t0
      : @1318
 20204: i32 a3 = -a0
 20206: a5 = a1 << 0x38
 20209: a3 = a3 & 0x3
 20212: a2 = a2 - a3
 20215: a1 = a0 + a3
 20218: a3 = 0x101010100
 20228: a4 = a2 & 0xfffffffffffffffc
 20231: a2 = a5 mulhu a3
 20234: u32 [a1] = a2
 20236: a3 = a1 + a4
 20239: u32 [a3 + 0xfffffffffffffffc] = a2
 20242: jump @1323 if a4 <u 9
      : @1319
 20246: u32 [a1 + 0x4] = a2
 20249: u32 [a1 + 0x8] = a2
 20252: a5 = 0x19
 20255: u32 [a3 + 0xfffffffffffffff4] = a2
 20258: u32 [a3 + 0xfffffffffffffff8] = a2
 20261: jump @1323 if a4 <u a5
      : @1320
 20264: u32 [a1 + 0xc] = a2
 20267: u32 [a1 + 0x10] = a2
 20270: u32 [a1 + 0x14] = a2
 20273: u32 [a1 + 0x18] = a2
 20276: a5 = a1 & 0x4
 20279: t0 = 0x20
 20282: a5 = a5 | 0x18
 20285: a4 = a4 - a5
 20288: u32 [a3 + 0xffffffffffffffe4] = a2
 20291: u32 [a3 + 0xffffffffffffffe8] = a2
 20294: u32 [a3 + 0xffffffffffffffec] = a2
 20297: u32 [a3 + 0xfffffffffffffff0] = a2
 20300: jump @1323 if a4 <u t0
      : @1321
 20303: a2 = a2 << 0x20
 20306: a1 = a1 + a5
 20309: a3 = a2 >> 0x20
 20312: a2 = a2 | a3
 20315: a3 = 0x1f
 20318: fallthrough
      : @1322
 20319: u64 [a1] = a2
 20321: u64 [a1 + 0x8] = a2
 20324: u64 [a1 + 0x10] = a2
 20327: u64 [a1 + 0x18] = a2
 20330: a4 = a4 + 0xffffffffffffffe0
 20333: a1 = a1 + 0x20
 20336: jump @1322 if a3 <u a4
      : @1323
 20339: ret
      : @1324
 20341: a1 = a0 & 0x7
 20344: a2 = a0
 20346: jump @1330 if a1 == 0
      : @1325
 20349: a1 = u8 [a0]
 20351: jump @1334 if a1 == 0
      : @1326
 20354: a2 = a0 + 0x1
 20357: a1 = a0
 20359: fallthrough
      : @1327
 20360: a3 = a1 + 0x1
 20363: a3 = a3 & 0x7
 20366: jump @1330 if a3 == 0
      : @1328
 20369: a3 = u8 [a2]
 20371: a2 = a2 + 0x1
 20374: a1 = a1 + 0x1
 20377: jump @1327 if a3 != 0
      : @1329
 20380: jump @1333
      : @1330
 20382: t0 = 0x101010101010100
 20392: a4 = 0x8080808080808080
 20402: a1 = a2 + 0xfffffffffffffff7
 20405: a2 = a2 + 0xfffffffffffffff8
 20408: fallthrough
      : @1331
 20409: a5 = u64 [a2 + 0x8]
 20412: a2 = a2 + 0x8
 20415: a3 = t0 - a5
 20418: a3 = a3 | a5
 20421: a3 = a3 & a4
 20424: a1 = a1 + 0x8
 20427: jump @1331 if a3 == a4
      : @1332
 20430: a3 = u8 [a2]
 20432: a2 = a2 + 0x1
 20435: a1 = a1 + 0x1
 20438: jump @1332 if a3 != 0
      : @1333
 20441: a0 = a1 - a0
 20444: ret
      : @1334
 20446: a0 = a0 - a0
 20449: ret
      : @1335 [@dyn 235]
 20451: a1 = a0 - s1
 20454: a1 = s0 if a0 == 0
 20457: a0 = a1
 20459: ra = u64 [sp + 0x10]
 20462: s0 = u64 [sp + 0x8]
 20465: s1 = u64 [sp]
 20467: sp = sp + 0x18
 20470: ret
      : @1336
 20472: t1 = 0
 20474: a3 = a0 & 0x7
 20477: a4 = a2 >u 0
 20479: jump @1342 if a3 == 0
      : @1337
 20482: jump @1342 if a2 == 0
      : @1338
 20485: a5 = a0 + 0x1
 20488: t0 = 0x1
 20491: fallthrough
      : @1339
 20492: a4 = u8 [a0]
 20494: a3 = a2
 20496: jump @1349 if a4 == t1
      : @1340
 20499: a0 = a0 + 0x1
 20502: a2 = a3 + 0xffffffffffffffff
 20505: a1 = a5 & 0x7
 20508: a4 = a2 >u 0
 20510: jump @1342 if a1 == 0
      : @1341
 20513: a5 = a5 + 0x1
 20516: jump @1339 if a3 != t0
      : @1342
 20519: jump @1351 if a4 == 0
      : @1343
 20522: a1 = u8 [a0]
 20524: jump @1348 if a1 == t1
      : @1344
 20527: a1 = 0x8
 20530: jump @1348 if a2 <u a1
      : @1345
 20533: t2 = 0x101010101010100
 20543: a4 = 0x8080808080808080
 20553: a1 = 0x101010101010101
 20563: a5 = t1 * a1
 20566: t0 = 0x7
 20569: fallthrough
      : @1346
 20570: a1 = u64 [a0]
 20572: a1 = a1 ^ a5
 20575: a3 = t2 - a1
 20578: a1 = a1 | a3
 20581: a1 = a1 & a4
 20584: jump @1353 if a1 != a4
      : @1347
 20587: a2 = a2 + 0xfffffffffffffff8
 20590: a0 = a0 + 0x8
 20593: jump @1346 if t0 <u a2
      : @1348
 20596: a3 = a2
 20598: jump @1351 if a2 == 0
      : @1349
 20601: a1 = u8 [a0]
 20603: jump @1352 if a1 == t1
      : @1350
 20606: a3 = a3 + 0xffffffffffffffff
 20609: a0 = a0 + 0x1
 20612: jump @1349 if a3 != 0
      : @1351
 20615: a0 = 0
 20617: ret
      : @1352
 20619: ret
      : @1353
 20621: a3 = a2
 20623: a1 = u8 [a0]
 20625: jump @1350 if a1 != t1
      : @1354
 20628: jump @1352
      : @1355
 20630: a3 = i8 [0x3000b]
 20635: jump @207 if a3 == 0
      : @1356
 20639: sp = sp + 0xffffffffffffffd0
 20642: u64 [sp + 0x28] = ra
 20645: u64 [sp + 0x20] = s0
 20648: u64 [sp + 0x18] = s1
 20651: a4 = 0xffffffff80000001
 20657: fallthrough
      : @1357
 20658: a5 = i32 [0x303f0]
 20663: jump @1359 if a5 != 0
      : @1358
 20666: u32 [0x303f0] = 0xffffffff80000001
 20675: fallthrough
      : @1359
 20676: i32 a2 = a5 + 0
 20678: jump @1361 if a3 >=s 0
      : @1360
 20681: u8 [0x3000b] = 0
 20686: fallthrough
      : @1361
 20687: jump @1402 if a2 == 0
      : @1362
 20691: a1 = a2 << 0x2
 20694: s1 = 0xffffffff7fffffff
 20704: a1 = a1 >> 0x21
 20707: i32 a2 = a2 + a1
 20710: a1 = a2 + s1
 20713: i32 a1 = a1 + 0x2
 20716: fallthrough
      : @1363
 20717: a3 = i32 [0x303f0]
 20722: jump @1365 if a3 != a2
      : @1364
 20725: u32 [0x303f0] = a1
 20730: a4 = 0
 20732: fallthrough
      : @1365
 20733: i32 a1 = a3 + 0
 20735: jump @1402 if a1 == a2
      : @1366
 20739: a2 = a1 >> 0x1f
 20742: a2 = a2 & s1
 20745: i32 a2 = a2 + a1
 20748: a1 = s1 + a2
 20751: i32 a1 = a1 + 0x2
 20754: fallthrough
      : @1367
 20755: a3 = i32 [0x303f0]
 20760: jump @1369 if a3 != a2
      : @1368
 20763: u32 [0x303f0] = a1
 20768: a4 = 0
 20770: fallthrough
      : @1369
 20771: i32 a1 = a3 + 0
 20773: jump @1402 if a1 == a2
      : @1370
 20777: a2 = a1 >> 0x1f
 20780: a2 = a2 & s1
 20783: i32 a2 = a2 + a1
 20786: a1 = s1 + a2
 20789: i32 a1 = a1 + 0x2
 20792: fallthrough
      : @1371
 20793: a3 = i32 [0x303f0]
 20798: jump @1373 if a3 != a2
      : @1372
 20801: u32 [0x303f0] = a1
 20806: a4 = 0
 20808: fallthrough
      : @1373
 20809: i32 a1 = a3 + 0
 20811: jump @1402 if a1 == a2
      : @1374
 20815: a2 = a1 >> 0x1f
 20818: a2 = a2 & s1
 20821: i32 a2 = a2 + a1
 20824: a1 = s1 + a2
 20827: i32 a1 = a1 + 0x2
 20830: fallthrough
      : @1375
 20831: a3 = i32 [0x303f0]
 20836: jump @1377 if a3 != a2
      : @1376
 20839: u32 [0x303f0] = a1
 20844: a4 = 0
 20846: fallthrough
      : @1377
 20847: i32 a1 = a3 + 0
 20849: jump @1402 if a1 == a2
      : @1378
 20853: a2 = a1 >> 0x1f
 20856: a2 = a2 & s1
 20859: i32 a2 = a2 + a1
 20862: a1 = s1 + a2
 20865: i32 a1 = a1 + 0x2
 20868: fallthrough
      : @1379
 20869: a3 = i32 [0x303f0]
 20874: jump @1381 if a3 != a2
      : @1380
 20877: u32 [0x303f0] = a1
 20882: a4 = 0
 20884: fallthrough
      : @1381
 20885: i32 a1 = a3 + 0
 20887: jump @1402 if a1 == a2
      : @1382
 20891: a2 = a1 >> 0x1f
 20894: a2 = a2 & s1
 20897: i32 a2 = a2 + a1
 20900: a1 = s1 + a2
 20903: i32 a1 = a1 + 0x2
 20906: fallthrough
      : @1383
 20907: a3 = i32 [0x303f0]
 20912: jump @1385 if a3 != a2
      : @1384
 20915: u32 [0x303f0] = a1
 20920: a4 = 0
 20922: fallthrough
      : @1385
 20923: i32 a1 = a3 + 0
 20925: jump @1402 if a1 == a2
      : @1386
 20929: a2 = a1 >> 0x1f
 20932: a2 = a2 & s1
 20935: i32 a2 = a2 + a1
 20938: a1 = s1 + a2
 20941: i32 a1 = a1 + 0x2
 20944: fallthrough
      : @1387
 20945: a3 = i32 [0x303f0]
 20950: jump @1389 if a3 != a2
      : @1388
 20953: u32 [0x303f0] = a1
 20958: a4 = 0
 20960: fallthrough
      : @1389
 20961: i32 a1 = a3 + 0
 20963: jump @1402 if a1 == a2
      : @1390
 20966: a2 = a1 >> 0x1f
 20969: a2 = a2 & s1
 20972: i32 a2 = a2 + a1
 20975: a1 = s1 + a2
 20978: i32 a1 = a1 + 0x2
 20981: fallthrough
      : @1391
 20982: a3 = i32 [0x303f0]
 20987: jump @1393 if a3 != a2
      : @1392
 20990: u32 [0x303f0] = a1
 20995: a4 = 0
 20997: fallthrough
      : @1393
 20998: i32 a1 = a3 + 0
 21000: jump @1402 if a1 == a2
      : @1394
 21003: a2 = a1 >> 0x1f
 21006: a2 = a2 & s1
 21009: i32 a2 = a2 + a1
 21012: a1 = s1 + a2
 21015: i32 a1 = a1 + 0x2
 21018: fallthrough
      : @1395
 21019: a3 = i32 [0x303f0]
 21024: jump @1397 if a3 != a2
      : @1396
 21027: u32 [0x303f0] = a1
 21032: a4 = 0
 21034: fallthrough
      : @1397
 21035: i32 a1 = a3 + 0
 21037: jump @1402 if a1 == a2
      : @1398
 21040: a2 = a1 >> 0x1f
 21043: a2 = a2 & s1
 21046: i32 a1 = a1 + a2
 21049: a2 = s1 + a1
 21052: i32 a2 = a2 + 0x2
 21055: fallthrough
      : @1399
 21056: a3 = i32 [0x303f0]
 21061: jump @1401 if a3 != a1
      : @1400
 21064: u32 [0x303f0] = a2
 21069: a4 = 0
 21071: fallthrough
      : @1401
 21072: i32 a3 = a3 + 0
 21074: jump @1403 if a3 != a1
      : @1402
 21077: ra = u64 [sp + 0x28]
 21080: s0 = u64 [sp + 0x20]
 21083: s1 = u64 [sp + 0x18]
 21086: sp = sp + 0x30
 21089: ret
      : @1403
 21091: a1 = i32 [a0]
 21093: i32 s0 = a1 + 0x1
 21096: fallthrough
      : @1404
 21097: a2 = i32 [a0]
 21099: jump @1406 if a2 != a1
      : @1405
 21102: u32 [a0] = s0
 21104: a3 = 0
 21106: fallthrough
      : @1406
 21107: i32 a2 = a2 + 0
 21109: jump @1403 if a2 != a1
      : @1407
 21112: a4 = 0xffffffff80000000
 21118: u64 [sp + 0x10] = a0
 21121: jump @1413
      : @1408
 21123: i32 s0 = s0 + s1
 21126: a0 = u64 [sp + 0x10]
 21129: a4 = 0xffffffff80000000
 21135: a1 = s0 | a4
 21138: i32 a2 = s0 + 0
 21140: jump @1410
      : @1409
 21142: a1 = s0 | a4
 21145: i32 a2 = s0 + 0
 21147: fallthrough
      : @1410
 21148: s0 = i32 [a0]
 21150: jump @1412 if s0 != a2
      : @1411
 21153: u32 [a0] = a1
 21155: a3 = 0
 21157: fallthrough
      : @1412
 21158: i32 a1 = s0 + 0
 21160: jump @1402 if a1 == a2
      : @1413
 21163: i32 a3 = s0 + 0
 21165: jump @1409 if a3 >=s 0
      : @1414
 21168: a1 = a0
 21170: a0 = 0x62
 21173: a2 = 0x80
 21177: u64 [sp + 0] = 0
 21179: u64 [sp + 0x8] = a3
 21182: a4 = 0
 21184: a5 = 0
 21186: ra = 472, jump @1737
      : @1415 [@dyn 236]
 21192: jump @1408 if a0 != 4294967258
      : @1416
 21196: a0 = 0x62
 21199: u64 [sp + 0] = 0
 21201: a1 = u64 [sp + 0x10]
 21204: a2 = 0
 21206: a3 = u64 [sp + 0x8]
 21209: a4 = 0
 21211: a5 = 0
 21213: ra = 474, jump @1737
      : @1417 [@dyn 237]
 21219: jump @1408
      : @1418 [@dyn 238]
 21221: ra = u64 [sp + 0x8]
 21224: sp = sp + 0x10
 21227: jump @226
      : @1419
 21230: a1 = 0x32f58
 21235: a0 = 0
 21237: a0 = sbrk a0
 21239: a1 = a1 + 0x1f
 21242: a1 = a1 & 0xffffffffffffffe0
 21245: jump @1423 if a0 >=u a1
      : @1420
 21248: a0 = a1 - a0
 21251: a2 = sbrk a0
 21253: a0 = 0
 21255: jump @1479 if a2 == 0
      : @1421
 21259: jump @1424 if a1 != 0
      : @1422
 21262: jump @1479
      : @1423
 21265: jump @1427 if a1 == 0
      : @1424
 21268: a0 = 0
 21270: a0 = sbrk a0
 21272: a0 = a0 - a1
 21275: jump @1426 if a0 >u 31
      : @1425
 21279: a2 = 0x20 - a0
 21282: a0 = sbrk a2
 21284: jump @1479 if a0 == 0
      : @1426
 21288: a2 = 0x30808
 21293: a2 = a2 + 0x2000
 21297: u64 [a2 + 0x600] = a1
 21301: a3 = u64 [a2 + 0x730]
 21305: a0 = 0x1
 21308: a4 = 0x8000000000000000
 21318: a3 = a3 | a4
 21321: a4 = u64 [a2 + 0x738]
 21325: u32 [a2 + 0x740] = a0
 21329: u64 [a2 + 0x730] = a3
 21333: a3 = 0x2000000000
 21343: a3 = a3 | a4
 21346: u64 [a2 + 0x738] = a3
 21350: u32 [a1 + 0] = 0
 21352: a3 = 0x4000000
 21358: u32 [a1 + 0x4] = a3
 21361: u32 [a1 + 8] = 0
 21364: u32 [a1 + 12] = 0
 21367: u32 [a2 + 0x5fc] = a1
 21371: jump @1479
      : @1427
 21374: a0 = 0
 21376: jump @1479
      : @1428
 21379: sp = sp + 0xffffffffffffff98
 21382: u64 [sp + 0x60] = ra
 21385: u64 [sp + 0x58] = s0
 21388: u64 [sp + 0x50] = s1
 21391: s0 = a0
 21393: i32 a0 = cpop a0
 21395: a3 = 0x1
 21398: jump @1431 if a0 != a3
      : @1429
 21401: t2 = a1
 21403: s1 = 0x30808
 21408: a0 = s1 + 0x2000
 21412: a0 = u64 [a0 + 0x600]
 21416: jump @1478 if a0 == 0
      : @1430
 21420: i32 ra = t2 + 0x1
 21423: jump @1433 if ra != 0
      : @1431
 21426: a0 = 0
 21428: fallthrough
      : @1432
 21429: ra = u64 [sp + 0x60]
 21432: s0 = u64 [sp + 0x58]
 21435: s1 = u64 [sp + 0x50]
 21438: sp = sp + 0x68
 21441: ret
      : @1433
 21443: i32 t1 = t2 + s0
 21446: a1 = 0x2000000
 21452: a0 = 0
 21454: jump @1432 if a1 <u t1
      : @1434
 21457: t0 = s0 + 0xffffffffffffffff
 21460: i32 a1 = ra + t0
 21463: a1 = a1 <u ra
 21466: jump @1432 if a1 != 0
      : @1435
 21469: jump @1438 if t1 == 0
      : @1436
 21472: jump @1439 if t1 >=u 128
      : @1437
 21477: a1 = t1 + 0xffffffffffffffff
 21480: i32 a0 = a1 >> 0x6
 21483: a5 = a1 & 0x3f
 21486: jump @1440
      : @1438
 21488: a5 = 0
 21490: a0 = 0
 21492: a1 = 0
 21494: jump @1440
      : @1439
 21496: i32 a0 = clz t1
 21498: i32 a1 = 0x18 - a0
 21501: i32 a4 = t1 >> a1
 21504: a4 = a4 & 0x7f
 21507: i32 a1 = 0xffffffffffffffff << a1
 21510: a1 = t1 & ~a1
 21513: a5 = a1 >u 0
 21515: a0 = a0 << 0x7
 21518: a4 = a4 - a0
 21521: a0 = a4 + 0x7ff
 21525: a1 = a0 + 0x480
 21529: a5 = a5 + a1
 21532: i32 a0 = a5 >> 0x6
 21535: a5 = a5 & 0x3f
 21538: fallthrough
      : @1440
 21539: a4 = s1 + 0x2000
 21543: a4 = u64 [a4 + 0x738]
 21547: a3 = a4 >> a0
 21550: a3 = a3 & 0x1
 21553: u64 [sp + 0x48] = t2
 21556: jump @1443 if a3 == 0
      : @1441
 21559: a3 = a0 << 0x3
 21562: a3 = a3 + s1
 21565: a3 = a3 + 0x2000
 21569: a3 = u64 [a3 + 0x608]
 21573: a5 = 0xffffffffffffffff << a5
 21576: a5 = a5 & a3
 21579: jump @1443 if a5 == 0
      : @1442
 21582: a1 = ctz a5
 21584: jump @1446
      : @1443
 21586: a0 = a0 + 0x1
 21589: a0 = 0xffffffffffffffff << a0
 21592: a0 = a0 & a4
 21595: jump @1453 if a0 == 0
      : @1444
 21599: a0 = ctz a0
 21601: a1 = a0 << 0x3
 21604: a3 = s1 + 0x2000
 21608: a1 = a1 + a3
 21611: a1 = u64 [a1 + 0x608]
 21615: a1 = ctz a1
 21617: jump @1446
      : @1445
 21619: a1 = ctz a1
 21621: fallthrough
      : @1446
 21622: a3 = a1 << 0x2
 21625: a4 = a0 << 0x8
 21628: a3 = a3 | a4
 21631: t2 = s1 + a3
 21634: s0 = u32 [t2]
 21636: a5 = u32 [s0 + 0x4]
 21639: a5 = a5 >> 0x1
 21642: jump @1431 if a5 <u t1
      : @1447
 21646: u64 [sp + 0x20] = a2
 21649: u64 [sp + 0x28] = s1
 21652: u64 [sp + 0x40] = ra
 21655: ra = s1 + 0x2000
 21659: a3 = u64 [ra + 0x600]
 21663: i32 a2 = s0 - a3
 21666: i32 a2 = a2 >> 0x5
 21669: u64 [sp + 0x30] = a3
 21672: a3 = a3 >> 0x5
 21675: a4 = a3 + t0
 21678: a4 = a4 + a2
 21681: a4 = a4 + 0x1
 21684: a4 = a4 & ~t0
 21687: i32 t0 = a4 - a3
 21690: t1 = t0 + 0xffffffffffffffff
 21693: i32 s1 = t1 - a2
 21696: a3 = u64 [sp + 0x48]
 21699: a2 = s1 + a3
 21702: a2 = a2 ^ 0xffffffffffffffff
 21705: i32 a5 = a5 + a2
 21708: a4 = i32 [ra + 0x740]
 21712: ra = u64 [sp + 0x40]
 21715: a2 = t0 + a3
 21718: u64 [sp + 0x38] = a5
 21721: a3 = a5 >u 0
 21723: i32 a3 = a3 + a2
 21726: u64 [sp + 0x18] = a4
 21729: jump @1451 if a4 >=u a3
      : @1448
 21732: ra = t0
 21734: a2 = 0
 21736: a2 = sbrk a2
 21738: a4 = u64 [sp + 0x30]
 21741: t0 = a2 - a4
 21744: a5 = a3 << 0x25
 21747: a5 = a5 >> 0x20
 21750: jump @1450 if t0 >=u a5
      : @1449
 21753: a2 = a5 - t0
 21756: a2 = sbrk a2
 21758: jump @1431 if a2 == 0
      : @1450
 21762: a4 = u64 [sp + 0x28]
 21765: a2 = a4 + 0x2000
 21769: u32 [a2 + 0x740] = a3
 21773: t0 = ra
 21775: ra = u64 [sp + 0x40]
 21778: fallthrough
      : @1451
 21779: a3 = u32 [s0 + 0x8]
 21782: a5 = i32 [s0]
 21784: t1 = t1 << 0x5
 21787: u32 [t2] = a3
 21789: jump @1457 if a3 == 0
      : @1452
 21792: u32 [a3 + 12] = 0
 21795: jump @1459
      : @1453
 21797: i32 a0 = a1 >> 0x6
 21800: a3 = a4 >> a0
 21803: a3 = a3 & 0x1
 21806: jump @1455 if a3 == 0
      : @1454
 21809: a3 = a0 << 0x3
 21812: a5 = s1 + 0x2000
 21816: a3 = a3 + a5
 21819: a3 = u64 [a3 + 0x608]
 21823: a1 = a1 & 0x3f
 21826: a5 = 0xffffffffffffffff
 21829: a1 = a5 << a1
 21832: a1 = a1 & a3
 21835: jump @1445 if a1 != 0
      : @1455
 21839: a0 = a0 + 0x1
 21842: a1 = 0xffffffffffffffff
 21845: a0 = a1 << a0
 21848: a0 = a0 & a4
 21851: jump @1444 if a0 != 0
      : @1456
 21855: jump @1432
      : @1457
 21858: u64 [sp + 0x10] = t0
 21861: u64 [sp + 0x8] = a5
 21864: u64 [sp] = t1
 21866: jump @1481
      : @1458
 21869: t1 = u64 [sp]
 21871: a5 = u64 [sp + 0x8]
 21874: t0 = u64 [sp + 0x10]
 21877: ra = u64 [sp + 0x40]
 21880: fallthrough
      : @1459
 21881: a0 = u64 [sp + 0x30]
 21884: a0 = a0 + t1
 21887: t1 = u64 [sp + 0x28]
 21890: t2 = u64 [sp + 0x48]
 21893: jump @1462 if s1 == 0
      : @1460
 21896: a1 = 0x2000000
 21902: a3 = minu(s1, a1)
 21905: jump @1463 if s1 >=u 128
      : @1461
 21910: a3 = a3 + 0xffffffffffffffff
 21913: jump @1464
      : @1462
 21915: s1 = a5
 21917: jump @1467
      : @1463
 21919: i32 a1 = clz a3
 21921: i32 a2 = 0x18 - a1
 21924: i32 a2 = a3 >> a2
 21927: a2 = a2 & 0x7f
 21930: a1 = a1 << 0x7
 21933: a2 = a2 - a1
 21936: a1 = a2 + 0x7ff
 21940: a3 = a1 + 0x480
 21944: fallthrough
      : @1464
 21945: i32 a1 = a3 >> 0x6
 21948: a2 = a3 & 0x3f
 21951: a3 = a3 << 0x2
 21954: a4 = t1 + a3
 21957: a3 = u32 [a4]
 21959: u32 [a4] = s0
 21961: a4 = s1 << 0x1
 21964: u32 [s0] = a5
 21966: u32 [s0 + 0x4] = a4
 21969: u32 [s0 + 0x8] = a3
 21972: u32 [s0 + 12] = 0
 21975: jump @1466 if a3 == 0
      : @1465
 21978: u32 [a3 + 0xc] = s0
 21981: fallthrough
      : @1466
 21982: a3 = a1 << 0x3
 21985: a5 = t1 + 0x2000
 21989: a3 = a3 + a5
 21992: a5 = u64 [a3 + 0x608]
 21996: a2 = 0x1 << a2
 21999: a2 = a2 | a5
 22002: u64 [a3 + 0x608] = a2
 22006: a4 = t1 + 0x2000
 22010: a2 = u64 [a4 + 0x738]
 22014: a1 = 0x1 << a1
 22017: a1 = a1 | a2
 22020: u64 [a4 + 0x738] = a1
 22024: fallthrough
      : @1467
 22025: a1 = u64 [sp + 0x18]
 22028: a4 = t0 <u a1
 22031: a2 = ra << 0x1
 22034: a2 = a2 + 0x1
 22037: a3 = a0 << 0x20
 22040: a3 = a3 >> 0x20
 22043: u32 [a3] = s1
 22045: u32 [a3 + 0x4] = a2
 22048: t0 = a0 + 0x20
 22051: t2 = t2 << 0x5
 22054: a0 = t0 + t2
 22057: a2 = u64 [sp + 0x38]
 22060: jump @1474 if a2 == 0
      : @1468
 22064: s1 = a4
 22066: a3 = 0x2000000
 22072: a5 = minu(a2, a3)
 22075: jump @1470 if a2 >=u 128
      : @1469
 22080: a5 = a5 + 0xffffffffffffffff
 22083: jump @1471
      : @1470
 22085: i32 a3 = clz a5
 22087: i32 a4 = 0x18 - a3
 22090: i32 a4 = a5 >> a4
 22093: a4 = a4 & 0x7f
 22096: a3 = a3 << 0x7
 22099: a4 = a4 - a3
 22102: a3 = a4 + 0x7ff
 22106: a5 = a3 + 0x480
 22110: fallthrough
      : @1471
 22111: i32 a3 = a5 >> 0x6
 22114: a4 = a5 & 0x3f
 22117: a5 = a5 << 0x2
 22120: a5 = a5 + t1
 22123: s0 = u32 [a5]
 22125: u32 [a5] = a0
 22127: a5 = a2 << 0x1
 22130: a2 = a0 << 0x20
 22133: a2 = a2 >> 0x20
 22136: u32 [a2] = ra
 22138: u32 [a2 + 0x4] = a5
 22141: u32 [a2 + 0x8] = s0
 22144: u32 [a2 + 12] = 0
 22147: jump @1473 if s0 == 0
      : @1472
 22150: u32 [s0 + 0xc] = a0
 22153: fallthrough
      : @1473
 22154: a2 = a3 << 0x3
 22157: a5 = t1 + 0x2000
 22161: a2 = a2 + a5
 22164: a5 = u64 [a2 + 0x608]
 22168: a4 = 0x1 << a4
 22171: a4 = a4 | a5
 22174: u64 [a2 + 0x608] = a4
 22178: s0 = t1 + 0x2000
 22182: a2 = u64 [s0 + 0x738]
 22186: a1 = 0x1 << a3
 22189: a1 = a1 | a2
 22192: u64 [s0 + 0x738] = a1
 22196: a2 = u64 [sp + 0x38]
 22199: ra = a2
 22201: a4 = s1
 22203: fallthrough
      : @1474
 22204: a1 = t1 + 0x2000
 22208: a1 = i32 [a1 + 0x600]
 22212: a2 = a2 << 0x5
 22215: i32 a2 = a2 + a0
 22218: i32 a0 = a1 + 0x40000000
 22224: a1 = u64 [sp + 0x20]
 22227: a1 = a1 & a4
 22230: jump @1476 if a2 >=u a0
      : @1475
 22233: a2 = a2 << 0x20
 22236: a2 = a2 >> 0x20
 22239: u32 [a2] = ra
 22241: fallthrough
      : @1476
 22242: a0 = t0 << 0x20
 22245: a0 = a0 >> 0x20
 22248: jump @1432 if a1 == 0
      : @1477
 22252: a2 = t2 << 0x20
 22255: a2 = a2 >> 0x20
 22258: a1 = 0
 22260: ra = u64 [sp + 0x60]
 22263: s0 = u64 [sp + 0x58]
 22266: s1 = u64 [sp + 0x50]
 22269: sp = sp + 0x68
 22272: jump @1314
      : @1478
 22275: u64 [sp + 32] = 0
 22278: u64 [sp + 0x48] = t2
 22281: jump @1419
      : @1479
 22284: t2 = u64 [sp + 0x48]
 22287: a2 = u64 [sp + 0x20]
 22290: jump @1430 if a0 != 0
      : @1480
 22294: jump @1432
      : @1481
 22297: a2 = a0 << 0x20
 22300: a4 = a2 >> 0x1d
 22303: a2 = 0x30808
 22308: a5 = a2 + 0x2000
 22312: a5 = a5 + a4
 22315: a3 = u64 [a5 + 0x608]
 22319: a4 = 0xfffffffffffffffe
 22322: a1 = a4 <<r a1
 22325: a1 = a1 & a3
 22328: u64 [a5 + 0x608] = a1
 22332: jump @1483 if a1 == 0
      : @1482
 22335: jump @1458
      : @1483
 22338: a2 = a2 + 0x2000
 22342: a1 = u64 [a2 + 0x738]
 22346: a0 = a4 <<r a0
 22349: a0 = a0 & a1
 22352: u64 [a2 + 0x738] = a0
 22356: jump @1458
      : @1484
 22359: sp = sp + 0xffffffffffffffe8
 22362: u64 [sp + 0x10] = ra
 22365: u64 [sp + 0x8] = s0
 22368: u64 [sp] = s1
 22370: t0 = a0 + 0xffffffffffffffe0
 22373: a1 = t0 << 0x20
 22376: t2 = 0x30808
 22381: a2 = t2 + 0x2000
 22385: a2 = u64 [a2 + 0x600]
 22389: a1 = a1 >> 0x20
 22392: a3 = u32 [a1 + 0x4]
 22395: t1 = i32 [a1]
 22397: i32 a4 = t0 - a2
 22400: a1 = a3 >> 0x1
 22403: jump @1499 if a4 <u 32
      : @1485
 22408: a3 = t1 << 0x5
 22411: i32 a3 = t0 - a3
 22414: a5 = a3 << 0x20
 22417: a5 = a5 >> 0x20
 22420: ra = u32 [a5 + 0x4]
 22423: a4 = ra & 0x1
 22426: jump @1499 if a4 != 0
      : @1486
 22430: a0 = ra >> 0x1
 22433: jump @1489 if ra == 0
      : @1487
 22436: a2 = 0x2000000
 22442: a2 = minu(a0, a2)
 22445: jump @1490 if ra >=u 256
      : @1488
 22450: a2 = a2 + 0xffffffffffffffff
 22453: jump @1491
      : @1489
 22455: a2 = 0
 22457: jump @1491
      : @1490
 22459: i32 a4 = clz a2
 22461: i32 s1 = 0x18 - a4
 22464: i32 a2 = a2 >> s1
 22467: a2 = a2 & 0x7f
 22470: a4 = a4 << 0x7
 22473: a2 = a2 - a4
 22476: a2 = a2 + 0x7ff
 22480: a2 = a2 + 0x480
 22484: fallthrough
      : @1491
 22485: t1 = i32 [a5]
 22487: a4 = a2 << 0x20
 22490: a4 = a4 >> 0x1e
 22493: s1 = t2 + a4
 22496: a4 = i32 [s1]
 22498: s0 = u32 [a5 + 0x8]
 22501: jump @1494 if a4 != a3
      : @1492
 22504: u32 [s1] = s0
 22506: jump @1496 if s0 == 0
      : @1493
 22509: u32 [s0 + 12] = 0
 22512: jump @1498
      : @1494
 22514: a2 = u32 [a5 + 0xc]
 22517: u32 [a2 + 0x8] = s0
 22520: jump @1498 if s0 == 0
      : @1495
 22523: u32 [s0 + 0xc] = a2
 22526: jump @1498
      : @1496
 22528: i32 a3 = a2 >> 0x6
 22531: a4 = a3 << 0x3
 22534: s0 = t2 + 0x2000
 22538: a4 = a4 + s0
 22541: s0 = u64 [a4 + 0x608]
 22545: s1 = a2 & 0x3f
 22548: a2 = 0xfffffffffffffffe
 22551: s1 = a2 <<r s1
 22554: s0 = s0 & s1
 22557: u64 [a4 + 0x608] = s0
 22561: jump @1498 if s0 != 0
      : @1497
 22564: a5 = t2 + 0x2000
 22568: a4 = u64 [a5 + 0x738]
 22572: a2 = a2 <<r a3
 22575: a2 = a2 & a4
 22578: u64 [a5 + 0x738] = a2
 22582: fallthrough
      : @1498
 22583: a2 = t2 + 0x2000
 22587: a2 = u64 [a2 + 0x600]
 22591: i32 a1 = a1 + a0
 22594: ra = ra << 0x4
 22597: i32 t0 = t0 - ra
 22600: fallthrough
      : @1499
 22601: i32 a4 = a2 + 0x40000000
 22607: a5 = a1 << 0x5
 22610: i32 a5 = t0 + a5
 22613: jump @1514 if a5 >=u a4
      : @1500
 22617: a3 = a5 << 0x20
 22620: a3 = a3 >> 0x20
 22623: s1 = u32 [a3 + 0x4]
 22626: a2 = s1 & 0x1
 22629: jump @1514 if a2 != 0
      : @1501
 22633: ra = s1 >> 0x1
 22636: jump @1504 if s1 == 0
      : @1502
 22639: s0 = 0x2000000
 22645: s0 = minu(ra, s0)
 22648: jump @1505 if s1 >=u 256
      : @1503
 22653: a2 = s0 + 0xffffffffffffffff
 22656: jump @1506
      : @1504
 22658: a2 = 0
 22660: jump @1506
      : @1505
 22662: i32 a2 = clz s0
 22664: i32 s1 = 0x18 - a2
 22667: i32 s0 = s0 >> s1
 22670: s0 = s0 & 0x7f
 22673: a2 = a2 << 0x7
 22676: s0 = s0 - a2
 22679: a2 = s0 + 0x7ff
 22683: a2 = a2 + 0x480
 22687: fallthrough
      : @1506
 22688: s0 = a2 << 0x20
 22691: s0 = s0 >> 0x1e
 22694: s1 = t2 + s0
 22697: a0 = i32 [s1]
 22699: s0 = u32 [a3 + 0x8]
 22702: jump @1509 if a0 != a5
      : @1507
 22705: u32 [s1] = s0
 22707: jump @1511 if s0 == 0
      : @1508
 22710: u32 [s0 + 12] = 0
 22713: i32 a1 = ra + a1
 22716: jump @1514
      : @1509
 22718: a2 = u32 [a3 + 0xc]
 22721: u32 [a2 + 0x8] = s0
 22724: jump @1513 if s0 == 0
      : @1510
 22727: u32 [s0 + 0xc] = a2
 22730: i32 a1 = ra + a1
 22733: jump @1514
      : @1511
 22735: i32 a3 = a2 >> 0x6
 22738: a0 = a3 << 0x3
 22741: a5 = 0x2000
 22745: s0 = t2 + a5
 22748: a0 = a0 + s0
 22751: s0 = u64 [a0 + 0x608]
 22755: s1 = a2 & 0x3f
 22758: a2 = 0xfffffffffffffffe
 22761: s1 = a2 <<r s1
 22764: s0 = s0 & s1
 22767: u64 [a0 + 0x608] = s0
 22771: jump @1513 if s0 != 0
      : @1512
 22774: a5 = t2 + 0x2000
 22778: a0 = u64 [a5 + 0x738]
 22782: a2 = a2 <<r a3
 22785: a0 = a0 & a2
 22788: u64 [a5 + 0x738] = a0
 22792: i32 a1 = ra + a1
 22795: jump @1514
      : @1513
 22797: i32 a1 = ra + a1
 22800: fallthrough
      : @1514
 22801: jump @1521 if a1 == 0
      : @1515
 22805: a2 = 0x2000000
 22811: a5 = minu(a1, a2)
 22814: jump @1517 if a1 >=u 128
      : @1516
 22819: a5 = a5 + 0xffffffffffffffff
 22822: jump @1518
      : @1517
 22824: i32 a2 = clz a5
 22826: i32 a3 = 0x18 - a2
 22829: i32 a3 = a5 >> a3
 22832: a3 = a3 & 0x7f
 22835: a2 = a2 << 0x7
 22838: a3 = a3 - a2
 22841: a2 = a3 + 0x7ff
 22845: a5 = a2 + 0x480
 22849: fallthrough
      : @1518
 22850: i32 a2 = a5 >> 0x6
 22853: a3 = a5 & 0x3f
 22856: a5 = a5 << 0x2
 22859: a5 = a5 + t2
 22862: s1 = u32 [a5]
 22864: u32 [a5] = t0
 22866: a5 = a1 << 0x1
 22869: a0 = t0 << 0x20
 22872: a0 = a0 >> 0x20
 22875: u32 [a0] = t1
 22877: u32 [a0 + 0x4] = a5
 22880: u32 [a0 + 0x8] = s1
 22883: u32 [a0 + 12] = 0
 22886: jump @1520 if s1 == 0
      : @1519
 22889: u32 [s1 + 0xc] = t0
 22892: fallthrough
      : @1520
 22893: a0 = a2 << 0x3
 22896: a5 = t2 + 0x2000
 22900: a0 = a0 + a5
 22903: a5 = u64 [a0 + 0x608]
 22907: a3 = 0x1 << a3
 22910: a3 = a3 | a5
 22913: u64 [a0 + 0x608] = a3
 22917: t2 = t2 + 0x2000
 22921: a0 = u64 [t2 + 0x738]
 22925: a2 = 0x1 << a2
 22928: a0 = a0 | a2
 22931: u64 [t2 + 0x738] = a0
 22935: fallthrough
      : @1521
 22936: a0 = a1 << 0x5
 22939: i32 a0 = a0 + t0
 22942: jump @1523 if a0 >=u a4
      : @1522
 22945: a0 = a0 << 0x20
 22948: a0 = a0 >> 0x20
 22951: u32 [a0] = a1
 22953: fallthrough
      : @1523
 22954: ra = u64 [sp + 0x10]
 22957: s0 = u64 [sp + 0x8]
 22960: s1 = u64 [sp]
 22962: sp = sp + 0x18
 22965: ret
      : @1524
 22967: a1 = a0
 22969: sp = sp + 0xffffffffffffffe8
 22972: u64 [sp + 0x10] = ra
 22975: u64 [sp + 0x8] = s0
 22978: a2 = a1
 22980: a1 = 0x8
 22983: u64 [sp + 0] = 0
 22985: a0 = sp
 22987: ra = 0x1de
 22991: sp = sp + 0xffffffffffffffe8
 22994: u64 [sp + 0x10] = ra
 22997: u64 [sp + 0x8] = s0
 23000: u64 [sp] = s1
 23002: s0 = a0
 23004: a0 = 0x16
 23007: jump @1529
      : @1525 [@dyn 239]
 23009: jump @1528 if a0 == 0
      : @1526
 23012: s0 = a0
 23014: ra = 480, jump @230
      : @1527 [@dyn 240]
 23020: u32 [a0] = s0
 23022: fallthrough
      : @1528
 23023: a0 = u64 [sp]
 23025: ra = u64 [sp + 0x10]
 23028: s0 = u64 [sp + 0x8]
 23031: sp = sp + 0x18
 23034: ret
      : @1529
 23036: a3 = cpop a1
 23038: a4 = 0x1
 23041: jump @1537 if a3 != a4
      : @1530
 23044: a0 = a2 <u 0xffffffffffffffe1
 23047: a2 = a2 + 0x1f
 23050: a3 = a2 >> 0x25
 23053: a3 = a3 <u 0x1
 23056: a3 = a3 & a0
 23059: a0 = 0xc
 23062: jump @1537 if a3 == 0
      : @1531
 23065: a1 = a2 >> 0x5
 23068: i32 a1 = a1 + 0
 23070: a0 = 0x1
 23073: s1 = 0x30808
 23078: a2 = s1 + 0x2748
 23082: a2 = a2 & 0xfffffffffffffffc
 23085: a3 = 0x1
 23088: fallthrough
      : @1532
 23089: u64 [0x30000] = t2
 23094: t2 = a3 << 0x20
 23097: t2 = t2 >>a 0x20
 23100: a4 = i32 [a2]
 23102: t2 = a4 | t2
 23105: u32 [a2] = t2
 23107: t2 = u64 [0x30000]
 23112: a4 = a4 & 0xff
 23116: jump @1532 if a4 != 0
      : @1533
 23119: a2 = 0
 23121: ra = 482, jump @1428
      : @1534 [@dyn 241]
 23127: jump @1536 if a0 == 0
      : @1535
 23130: a1 = a0
 23132: a0 = 0
 23134: u64 [s0] = a1
 23136: a1 = s1 + 0x2000
 23140: u8 [a1 + 1864] = 0
 23144: jump @1537
      : @1536
 23146: a0 = 0xc
 23149: a1 = s1 + 0x2000
 23153: u8 [a1 + 1864] = 0
 23157: fallthrough
      : @1537
 23158: ra = u64 [sp + 0x10]
 23161: s0 = u64 [sp + 0x8]
 23164: s1 = u64 [sp]
 23166: sp = sp + 0x18
 23169: ret
      : @1538
 23171: jump @1543 if a0 == 0
      : @1539
 23174: sp = sp + 0xfffffffffffffff0
 23177: u64 [sp + 0x8] = ra
 23180: u64 [sp] = s0
 23182: s0 = 0x30808
 23187: a1 = s0 + 0x2748
 23191: a1 = a1 & 0xfffffffffffffffc
 23194: a2 = 0x1
 23197: fallthrough
      : @1540
 23198: u64 [0x30000] = t2
 23203: t2 = a2 << 0x20
 23206: t2 = t2 >>a 0x20
 23209: a3 = i32 [a1]
 23211: t2 = a3 | t2
 23214: u32 [a1] = t2
 23216: t2 = u64 [0x30000]
 23221: a3 = a3 & 0xff
 23225: jump @1540 if a3 != 0
      : @1541
 23228: ra = 484, jump @1484
      : @1542 [@dyn 242]
 23234: a0 = s0 + 0x2000
 23238: u8 [a0 + 1864] = 0
 23242: ra = u64 [sp + 0x8]
 23245: s0 = u64 [sp]
 23247: sp = sp + 0x10
 23250: ret
      : @1543
 23252: ret
      : @1544
 23254: sp = sp + 0xffffffffffffffd8
 23257: u64 [sp + 0x20] = ra
 23260: u64 [sp + 0x18] = s0
 23263: u64 [sp + 0x10] = s1
 23266: a3 = a0 & 0x7fffffff
 23272: s1 = 0xffffffff80800000
 23278: i32 a5 = a3 + s1
 23281: a4 = a1 & 0x7fffffff
 23287: jump @1548 if a5 <u 2155872257
      : @1545
 23294: i32 a2 = a4 + 0xffffffff80800000
 23300: jump @1548 if a2 <=u 2155872256
      : @1546
 23307: t0 = 0x7fffff
 23312: jump @1550 if a3 <u a4
      : @1547
 23315: s0 = a1
 23317: t2 = a0
 23319: jump @1551
      : @1548
 23321: a2 = 0x7f800001
 23327: jump @1560 if a3 <u a2
      : @1549
 23331: s0 = a0 | 0x400000
 23336: jump @1582
      : @1550
 23339: s0 = a0
 23341: t2 = a1
 23343: fallthrough
      : @1551
 23344: a4 = t2 << 0x21
 23347: a4 = a4 >> 0x38
 23350: s1 = s0 << 0x21
 23353: s1 = s1 >> 0x38
 23356: a5 = t2 & 0x7fffff
 23361: jump @1562 if a4 == 0
      : @1552
 23364: s0 = s0 & 0x7fffff
 23369: jump @1563 if s1 == 0
      : @1553
 23373: t1 = 0xffffffff80000000
 23379: a0 = a0 ^ a1
 23382: i32 a2 = a0 + 0
 23384: i32 a1 = a5 << 0x3
 23387: a5 = 0x4000000
 23393: i32 s0 = s0 << 0x3
 23396: s0 = s0 | a5
 23399: jump @1555 if a4 != s1
      : @1554
 23402: a0 = s0
 23404: jump @1557
      : @1555
 23406: a3 = a4 - s1
 23409: a0 = 0x1
 23412: jump @1557 if a3 >u 31
      : @1556
 23416: i32 a0 = -a3
 23418: i32 a0 = s0 << a0
 23421: a0 = a0 >u 0
 23423: i32 a3 = s0 >> a3
 23426: a0 = a0 | a3
 23429: fallthrough
      : @1557
 23430: s0 = t2 & 0xffffffff80000000
 23436: a1 = a1 | 0x4000000
 23442: jump @1564 if a2 <s 0
      : @1558
 23446: a1 = a1 + a0
 23449: a2 = a1 << 0x24
 23452: jump @1572 if a2 >=s 0
      : @1559
 23456: a0 = a0 & 0x1
 23459: i32 a1 = a1 >> 0x1
 23462: a1 = a1 | a0
 23465: a4 = a4 + 0x1
 23468: jump @1572
      : @1560
 23471: jump @1566 if a4 <u 2139095041
      : @1561
 23479: s0 = a1 | 0x400000
 23484: jump @1582
      : @1562
 23487: a2 = a5 >> 0x1
 23490: a2 = a2 | a5
 23493: a3 = a2 >> 0x2
 23496: a2 = a2 | a3
 23499: a3 = a2 >> 0x4
 23502: a2 = a2 | a3
 23505: a3 = a2 << 0x29
 23508: a4 = a3 >> 0x31
 23511: a2 = a2 | a4
 23514: a3 = a3 >> 0x39
 23517: a2 = a2 | a3
 23520: a2 = a2 ^ 0xffffffffffffffff
 23523: a3 = a2 >> 0x1
 23526: a3 = a3 & 0x55555555
 23532: a2 = a2 - a3
 23535: a4 = a2 & 0x33333333
 23541: a2 = a2 >> 0x2
 23544: a2 = a2 & 0x33333333
 23550: a2 = a2 + a4
 23553: a3 = a2 >> 0x4
 23556: a2 = a2 + a3
 23559: a2 = a2 & 0xf0f0f0f
 23565: a2 = a2 * 0x1010101
 23571: i32 a2 = a2 >> 0x18
 23574: a3 = a2 + 0xfffffffffffffff8
 23577: i32 a5 = a5 << a3
 23580: a4 = 0x9 - a2
 23583: s0 = s0 & 0x7fffff
 23588: jump @1553 if s1 != 0
      : @1563
 23592: a2 = s0 >> 0x1
 23595: a2 = a2 | s0
 23598: a3 = a2 >> 0x2
 23601: a2 = a2 | a3
 23604: a3 = a2 >> 0x4
 23607: a2 = a2 | a3
 23610: s1 = a2 << 0x29
 23613: a3 = s1 >> 0x31
 23616: a2 = a2 | a3
 23619: s1 = s1 >> 0x39
 23622: a2 = a2 | s1
 23625: a2 = a2 ^ 0xffffffffffffffff
 23628: a3 = a2 >> 0x1
 23631: a3 = a3 & 0x55555555
 23637: a2 = a2 - a3
 23640: s1 = a2 & 0x33333333
 23646: a2 = a2 >> 0x2
 23649: a2 = a2 & 0x33333333
 23655: a2 = a2 + s1
 23658: a3 = a2 >> 0x4
 23661: a2 = a2 + a3
 23664: a2 = a2 & 0xf0f0f0f
 23670: a2 = a2 * 0x1010101
 23676: i32 a2 = a2 >> 0x18
 23679: a3 = a2 + 0xfffffffffffffff8
 23682: i32 s0 = s0 << a3
 23685: s1 = 0x9 - a2
 23688: jump @1553
      : @1564
 23691: jump @1570 if a1 != a0
      : @1565
 23694: s0 = 0
 23696: jump @1582
      : @1566
 23699: a2 = 0x7f800000
 23705: jump @1579 if a3 != a2
      : @1567
 23709: a1 = a1 ^ a0
 23712: i32 a1 = a1 + 0
 23714: a2 = 0xffffffff80000000
 23720: jump @1569 if a1 != a2
      : @1568
 23723: s0 = 0x7fc00000
 23729: jump @1582
      : @1569
 23732: s0 = a0
 23734: jump @1582
      : @1570
 23737: i32 a1 = a1 - a0
 23740: i32 a0 = a1 >> 0x1a
 23743: jump @1572 if a0 != 0
      : @1571
 23746: i32 a0 = a1 >> 0x1
 23749: a0 = a0 | a1
 23752: i32 a2 = a0 >> 0x2
 23755: a0 = a0 | a2
 23758: i32 a2 = a0 >> 0x4
 23761: a0 = a0 | a2
 23764: i32 a2 = a0 >> 0x8
 23767: a0 = a0 | a2
 23770: i32 a2 = a0 >> 0x10
 23773: a0 = a0 | a2
 23776: a0 = a0 ^ 0xffffffffffffffff
 23779: a2 = a0 >> 0x1
 23782: a2 = a2 & 0x55555555
 23788: a0 = a0 - a2
 23791: a3 = a0 & 0x33333333
 23797: a0 = a0 >> 0x2
 23800: a0 = a0 & 0x33333333
 23806: a0 = a0 + a3
 23809: a2 = a0 >> 0x4
 23812: a0 = a0 + a2
 23815: a0 = a0 & 0xf0f0f0f
 23821: a0 = a0 * 0x1010101
 23827: i32 a0 = a0 >> 0x18
 23830: a0 = a0 + 0xfffffffffffffffb
 23833: i32 a1 = a1 << a0
 23836: a4 = a4 - a0
 23839: jump @1574
      : @1572
 23841: jump @1574 if a4 <s 255
      : @1573
 23846: s0 = s0 | 0x7f800000
 23852: jump @1582
      : @1574
 23854: jump @1576 if a4 >s 0
      : @1575
 23857: i32 a0 = 0x1 - a4
 23860: a4 = a4 + 0xffffffffffffffff
 23863: i32 a2 = a1 << a4
 23866: a2 = a2 >u 0
 23868: i32 a1 = a1 >> a0
 23871: a1 = a1 | a2
 23874: a4 = 0
 23876: fallthrough
      : @1576
 23877: a0 = a1 & 0x7
 23880: u64 [sp + 0x8] = a0
 23883: i32 s1 = a1 >> 0x3
 23886: a0 = s1 & 0x7fffff
 23891: i32 a1 = a4 << 0x17
 23894: u64 [sp] = s0
 23896: s0 = s0 | a1
 23899: s0 = s0 | a0
 23902: a1 = 0x1
 23905: a2 = u64 [sp + 0x8]
 23908: fallthrough
      : @1577
 23909: jump @1586 if a2 != 4
      : @1578
 23913: s1 = s1 & 0x1
 23916: i32 s0 = s0 + s1
 23919: jump @1582
      : @1579
 23921: jump @1583 if a4 != 2139095040
      : @1580
 23928: s0 = a1
 23930: jump @1582
      : @1581
 23932: jump @1582 if a2 == 0
      : @1582
 23935: a0 = s0
 23937: ra = u64 [sp + 0x20]
 23940: s0 = u64 [sp + 0x18]
 23943: s1 = u64 [sp + 0x10]
 23946: sp = sp + 0x28
 23949: ret
      : @1583
 23951: jump @1587 if a3 == 0
      : @1584
 23954: s0 = a0
 23956: jump @1546 if a4 != 0
      : @1585
 23960: jump @1582
      : @1586
 23962: a0 = a2 <u 0x5
 23965: a0 = a0 ^ 0x1
 23968: i32 s0 = s0 + a0
 23971: jump @1581
      : @1587
 23973: s0 = a1
 23975: jump @1582 if a4 != 0
      : @1588
 23978: s0 = a1 & a0
 23981: jump @1582
      : @1589
 23983: a1 = a0 << 0x29
 23986: a2 = a0 << 0x21
 23989: a2 = a2 >> 0x38
 23992: a1 = a1 >> 0x29
 23995: jump @1592 if a2 == 0
      : @1590
 23998: a3 = 0xff
 24002: jump @1594 if a2 != a3
      : @1591
 24006: a1 = a1 << 0x1d
 24009: a2 = 0x7ff
 24013: jump @1596
      : @1592
 24016: jump @1595 if a1 == 0
      : @1593
 24020: a2 = a1 >> 0x1
 24023: a2 = a2 | a1
 24026: a3 = a2 >> 0x2
 24029: a2 = a2 | a3
 24032: a3 = a2 >> 0x4
 24035: a2 = a2 | a3
 24038: a3 = a2 << 0x29
 24041: a4 = a3 >> 0x31
 24044: a2 = a2 | a4
 24047: a3 = a3 >> 0x39
 24050: a2 = a2 | a3
 24053: a2 = a2 ^ 0xffffffffffffffff
 24056: a3 = a2 >> 0x1
 24059: a3 = a3 & 0x55555555
 24065: a2 = a2 - a3
 24068: a4 = a2 & 0x33333333
 24074: a2 = a2 >> 0x2
 24077: a2 = a2 & 0x33333333
 24083: a2 = a2 + a4
 24086: a3 = a2 >> 0x4
 24089: a2 = a2 + a3
 24092: a2 = a2 & 0xf0f0f0f
 24098: a2 = a2 * 0x1010101
 24104: i32 a3 = a2 >> 0x18
 24107: a2 = 0x389 - a3
 24111: a3 = a3 + 0x15
 24114: a1 = a1 << a3
 24117: a3 = 0x10000000000000
 24127: a1 = a1 ^ a3
 24130: jump @1596
      : @1594
 24132: i32 a2 = a0 >> 0x17
 24135: a2 = a2 & 0xff
 24139: a2 = a2 + 0x380
 24143: a1 = a1 << 0x1d
 24146: jump @1596
      : @1595
 24148: a2 = 0
 24150: fallthrough
      : @1596
 24151: a0 = a0 >> 0x1f
 24154: a0 = a0 << 0x3f
 24157: a2 = a2 << 0x34
 24160: a0 = a0 | a1
 24163: a0 = a0 | a2
 24166: ret
      : @1597
 24168: a4 = 0x7fffffffffffffff
 24178: a3 = a0 & a4
 24181: a5 = 0x7ff0000000000000
 24191: a2 = 0x1
 24194: jump @1603 if a5 <u a3
      : @1598
 24197: a4 = a4 & a1
 24200: jump @1603 if a5 <u a4
      : @1599
 24203: a3 = a3 | a4
 24206: jump @1604 if a3 == 0
      : @1600
 24209: a2 = a1 & a0
 24212: jump @1605 if a2 <s 0
      : @1601
 24215: a2 = 0xffffffffffffffff
 24218: jump @1603 if a0 <s a1
      : @1602
 24221: a0 = a0 ^ a1
 24224: a2 = a0 >u 0
 24226: a0 = a2
 24228: ret
      : @1603
 24230: a0 = a2
 24232: ret
      : @1604
 24234: a0 = 0
 24236: ret
      : @1605
 24238: a2 = 0xffffffffffffffff
 24241: jump @1602 if a1 >=s a0
      : @1606
 24244: jump @1603
      : @1607
 24246: sp = sp + 0xffffffffffffffe0
 24249: u64 [sp + 0x18] = ra
 24252: u64 [sp + 0x10] = s0
 24255: u64 [sp + 0x8] = s1
 24258: a2 = a0
 24260: a3 = 0x7fffff
 24265: a4 = a0 << 0x21
 24268: a4 = a4 >> 0x38
 24271: a0 = a1 << 0x21
 24274: ra = a0 >> 0x38
 24277: a0 = a1 ^ a2
 24280: a0 = a0 & 0xffffffff80000000
 24286: t0 = a2 & a3
 24289: s1 = a4 + 0xffffffffffffff01
 24293: t1 = a1 & a3
 24296: jump @1614 if s1 <u 4294967042
      : @1608
 24301: s1 = ra + 0xffffffffffffff01
 24305: jump @1614 if s1 <=u 4294967041
      : @1609
 24310: t2 = 0
 24312: fallthrough
      : @1610
 24313: a1 = t0 | 0x800000
 24319: t1 = t1 << 0x8
 24322: a2 = t1 | 0xffffffff80000000
 24328: a1 = a1 << 0x20
 24331: a2 = a2 << 0x20
 24334: a2 = a2 mulhu a1
 24337: a1 = a2 >> 0x20
 24340: a4 = a4 + ra
 24343: a4 = a4 + t2
 24346: a5 = a1 << 0x28
 24349: a4 = a4 + 0xffffffffffffff81
 24352: jump @1616 if a5 <s 0
      : @1611
 24355: i32 a5 = a2 >> 0x1f
 24358: a1 = a1 << 0x1
 24361: a1 = a1 | a5
 24364: a2 = a2 << 0x1
 24367: a5 = 0xff
 24371: jump @1617 if a4 >=s a5
      : @1612
 24374: jump @1624 if a4 <=s 0
      : @1613
 24377: a1 = a1 & 0x7fffff
 24382: i32 a3 = a4 << 0x17
 24385: a1 = a1 | a3
 24388: jump @1626
      : @1614
 24391: a5 = 0x7fffffff
 24397: s0 = a2 & a5
 24400: s1 = 0x7f800001
 24406: jump @1619 if s0 <u s1
      : @1615
 24409: a0 = a2 | 0x400000
 24414: jump @1637
      : @1616
 24417: a4 = a4 + 0x1
 24420: a5 = 0xff
 24424: jump @1612 if a4 <s a5
      : @1617
 24427: a1 = 0x7f800000
 24433: a0 = a0 | a1
 24436: jump @1637
      : @1618
 24439: a0 = a0 | 0x7f800000
 24445: jump @1637
      : @1619
 24448: a2 = a1 & 0x7fffffff
 24454: jump @1621 if a2 <u 2139095041
      : @1620
 24461: a0 = a1 | 0x400000
 24466: jump @1637
      : @1621
 24469: a1 = 0x7f800000
 24475: jump @1630 if s0 != a1
      : @1622
 24478: jump @1618 if a2 != 0
      : @1623
 24481: jump @1632
      : @1624
 24483: a3 = 0x1 - a4
 24486: a5 = 0x1f
 24489: jump @1637 if a5 <u a3
      : @1625
 24493: a4 = a4 + 0x1f
 24496: i32 a5 = a2 << a4
 24499: a5 = a5 >u 0
 24501: i32 a4 = a1 << a4
 24504: i32 a2 = a2 >> a3
 24507: a2 = a2 | a4
 24510: a2 = a2 | a5
 24513: i32 a1 = a1 >> a3
 24516: fallthrough
      : @1626
 24517: i32 a2 = a2 + 0
 24519: a3 = 0xffffffff80000000
 24525: a4 = 0xffffffff80000001
 24531: a0 = a0 | a1
 24534: jump @1628 if a2 <u a4
      : @1627
 24537: i32 a0 = a0 + 0x1
 24540: jump @1637
      : @1628
 24543: jump @1637 if a2 != 2147483648
      : @1629
 24551: a1 = a1 & 0x1
 24554: i32 a0 = a0 + a1
 24557: jump @1637
      : @1630
 24560: jump @1633 if a2 != 2139095040
      : @1631
 24567: jump @1618 if s0 != 0
      : @1632
 24570: a0 = 0x7fc00000
 24576: jump @1637
      : @1633
 24578: jump @1637 if s0 == 0
      : @1634
 24581: jump @1637 if a2 == 0
      : @1635
 24584: s0 = s0 >> 0x17
 24587: jump @1638 if s0 != 0
      : @1636
 24590: a1 = t0 >> 0x1
 24593: a1 = t0 | a1
 24596: a5 = a1 >> 0x2
 24599: a1 = a1 | a5
 24602: a5 = a1 >> 0x4
 24605: a1 = a1 | a5
 24608: s1 = a1 << 0x29
 24611: a5 = s1 >> 0x31
 24614: a1 = a1 | a5
 24617: s1 = s1 >> 0x39
 24620: a1 = a1 | s1
 24623: a1 = a1 ^ 0xffffffffffffffff
 24626: a5 = a1 >> 0x1
 24629: a5 = a5 & 0x55555555
 24635: a1 = a1 - a5
 24638: s1 = a1 & 0x33333333
 24644: a1 = a1 >> 0x2
 24647: a1 = a1 & 0x33333333
 24653: a1 = a1 + s1
 24656: a5 = a1 >> 0x4
 24659: a1 = a1 + a5
 24662: a1 = a1 & 0xf0f0f0f
 24668: a1 = a1 * 0x1010101
 24674: i32 a1 = a1 >> 0x18
 24677: a5 = a1 + 0xfffffffffffffff8
 24680: i32 t0 = t0 << a5
 24683: t2 = 0x9 - a1
 24686: jump @1639
      : @1637
 24688: ra = u64 [sp + 0x18]
 24691: s0 = u64 [sp + 0x10]
 24694: s1 = u64 [sp + 0x8]
 24697: sp = sp + 0x20
 24700: ret
      : @1638
 24702: t2 = 0
 24704: fallthrough
      : @1639
 24705: a2 = a2 >> 0x17
 24708: jump @1610 if a2 != 0
      : @1640
 24712: a1 = t1 >> 0x1
 24715: a1 = t1 | a1
 24718: a2 = a1 >> 0x2
 24721: a1 = a1 | a2
 24724: a2 = a1 >> 0x4
 24727: a1 = a1 | a2
 24730: a2 = a1 << 0x29
 24733: a5 = a2 >> 0x31
 24736: a1 = a1 | a5
 24739: a2 = a2 >> 0x39
 24742: a1 = a1 | a2
 24745: a1 = a1 ^ 0xffffffffffffffff
 24748: a2 = a1 >> 0x1
 24751: a2 = a2 & 0x55555555
 24757: a1 = a1 - a2
 24760: a5 = a1 & 0x33333333
 24766: a1 = a1 >> 0x2
 24769: a1 = a1 & 0x33333333
 24775: a1 = a1 + a5
 24778: a2 = a1 >> 0x4
 24781: a1 = a1 + a2
 24784: a1 = a1 & 0xf0f0f0f
 24790: a1 = a1 * 0x1010101
 24796: i32 a1 = a1 >> 0x18
 24799: a2 = a1 + 0xfffffffffffffff8
 24802: i32 t1 = t1 << a2
 24805: t2 = t2 - a1
 24808: t2 = t2 + 0x9
 24811: jump @1610
      : @1641
 24814: sp = sp + 0xffffffffffffffe0
 24817: u64 [sp + 0x18] = ra
 24820: u64 [sp + 0x10] = s0
 24823: u64 [sp + 0x8] = s1
 24826: a3 = 0x800000
 24832: t0 = 0x7fffff
 24837: a5 = a0 << 0x21
 24840: a5 = a5 >> 0x38
 24843: a2 = a1 << 0x21
 24846: a2 = a2 >> 0x38
 24849: s1 = a1 ^ a0
 24852: t2 = s1 & 0xffffffff80000000
 24858: ra = a0 & t0
 24861: s1 = a5 + 0xffffffffffffff01
 24865: t1 = a1 & t0
 24868: jump @1648 if s1 <u 4294967042
      : @1642
 24874: s1 = a2 + 0xffffffffffffff01
 24878: jump @1648 if s1 <=u 4294967041
      : @1643
 24884: a1 = 0
 24886: fallthrough
      : @1644
 24887: a3 = ra | 0x800000
 24893: a0 = t1 | 0x800000
 24899: a5 = a5 - a2
 24902: a1 = a1 + a5
 24905: i32 a2 = a0 << 0x8
 24908: a5 = 0x7504f333 - a2
 24914: s1 = a2 << 0x20
 24917: a2 = s1 >> 0x20
 24920: a2 = a5 * a2
 24923: a2 = a2 >> 0x20
 24926: i32 a2 = -a2
 24928: a2 = a2 << 0x20
 24931: a2 = a2 >> 0x20
 24934: a2 = a2 * a5
 24937: a2 = a2 >> 0x1f
 24940: a2 = a2 << 0x20
 24943: a5 = a2 mulhu s1
 24946: a5 = a5 >> 0x20
 24949: i32 a5 = -a5
 24951: a5 = a5 << 0x20
 24954: a2 = a5 mulhu a2
 24957: a2 = a2 >> 0x1f
 24960: a2 = a2 << 0x20
 24963: a5 = a2 mulhu s1
 24966: a5 = a5 >> 0x20
 24969: i32 a5 = -a5
 24971: a5 = a5 << 0x20
 24974: a2 = a5 mulhu a2
 24977: a2 = a2 >> 0x1f
 24980: a2 = a2 + 0xfffffffffffffff4
 24983: a4 = a3 << 0x1
 24986: a2 = a2 << 0x20
 24989: a5 = a4 << 0x20
 24992: a2 = a2 mulhu a5
 24995: a5 = a2 >> 0x38
 24998: a2 = a2 >> 0x20
 25001: jump @1650 if a5 != 0
      : @1645
 25004: ra = ra << 0x18
 25007: a3 = a0 * a2
 25010: i32 s0 = ra - a3
 25013: a1 = a1 + 0x7e
 25016: a3 = 0xff
 25020: jump @1651 if a1 >=s a3
      : @1646
 25023: jump @1657 if a1 <=s 0
      : @1647
 25027: a2 = a2 & 0x7fffff
 25032: a1 = a1 << 0x17
 25035: a1 = a1 | a2
 25038: s0 = s0 << 0x1
 25041: jump @1662
      : @1648
 25044: a4 = 0x7fffffff
 25050: s1 = a0 & a4
 25053: s0 = 0x7f800001
 25059: jump @1652 if s1 <u s0
      : @1649
 25062: a1 = 0x400000
 25067: a0 = a0 | a1
 25070: jump @1663
      : @1650
 25073: a1 = a1 + 0x7f
 25076: a2 = a2 >> 0x1
 25079: ra = ra << 0x17
 25082: a4 = a2 * a0
 25085: i32 s0 = ra - a4
 25088: a4 = a3
 25090: a3 = 0xff
 25094: jump @1646 if a1 <s a3
      : @1651
 25097: a0 = t2 | 0x7f800000
 25103: jump @1663
      : @1652
 25105: a3 = t2
 25107: t2 = a1 & 0x7fffffff
 25113: jump @1654 if t2 <u 2139095041
      : @1653
 25120: a0 = a1 | 0x400000
 25125: jump @1663
      : @1654
 25127: a1 = 0x7f800000
 25133: jump @1659 if s1 != a1
      : @1655
 25136: a0 = 0x7fc00000
 25142: jump @1663 if t2 == 2139095040
      : @1656
 25149: a0 = a3 | 0x7f800000
 25155: jump @1663
      : @1657
 25157: a3 = 0xffffffffffffffe8
 25160: jump @1661 if a3 <s a1
      : @1658
 25163: a0 = t2
 25165: jump @1663
      : @1659
 25167: jump @1664 if t2 != 2139095040
      : @1660
 25174: a0 = a3
 25176: jump @1663
      : @1661
 25178: a3 = a1 + 0x17
 25181: i32 a5 = 0x1 - a1
 25184: i32 a1 = a2 >> a5
 25187: i32 a2 = a4 << a3
 25190: a3 = a0 * a1
 25193: a3 = a3 << 0x1
 25196: i32 s0 = a2 - a3
 25199: fallthrough
      : @1662
 25200: a2 = a1 & 0x1
 25203: i32 a2 = a2 + s0
 25206: a0 = a0 <u a2
 25209: i32 a0 = a0 + a1
 25212: a0 = a0 | t2
 25215: fallthrough
      : @1663
 25216: ra = u64 [sp + 0x18]
 25219: s0 = u64 [sp + 0x10]
 25222: s1 = u64 [sp + 0x8]
 25225: sp = sp + 0x20
 25228: ret
      : @1664
 25230: jump @1668 if s1 == 0
      : @1665
 25233: jump @1656 if t2 == 0
      : @1666
 25236: s1 = s1 >> 0x17
 25239: jump @1670 if s1 != 0
      : @1667
 25242: a0 = ra >> 0x1
 25245: a0 = ra | a0
 25248: a1 = a0 >> 0x2
 25251: a0 = a0 | a1
 25254: a1 = a0 >> 0x4
 25257: a0 = a0 | a1
 25260: a1 = a0 << 0x29
 25263: a4 = a1 >> 0x31
 25266: a0 = a0 | a4
 25269: a1 = a1 >> 0x39
 25272: a0 = a0 | a1
 25275: a0 = a0 ^ 0xffffffffffffffff
 25278: a1 = a0 >> 0x1
 25281: a1 = a1 & 0x55555555
 25287: a0 = a0 - a1
 25290: a4 = a0 & 0x33333333
 25296: a0 = a0 >> 0x2
 25299: a0 = a0 & 0x33333333
 25305: a0 = a0 + a4
 25308: a1 = a0 >> 0x4
 25311: a0 = a0 + a1
 25314: a0 = a0 & 0xf0f0f0f
 25320: a0 = a0 * 0x1010101
 25326: i32 a0 = a0 >> 0x18
 25329: a1 = a0 + 0xfffffffffffffff8
 25332: i32 ra = ra << a1
 25335: a1 = 0x9 - a0
 25338: jump @1671
      : @1668
 25340: jump @1660 if t2 != 0
      : @1669
 25344: a3 = 0x7fc00000
 25350: a0 = a3
 25352: jump @1663
      : @1670
 25355: a1 = 0
 25357: fallthrough
      : @1671
 25358: a0 = t2 >> 0x17
 25361: jump @1673 if a0 != 0
      : @1672
 25364: a0 = t1 >> 0x1
 25367: a0 = t1 | a0
 25370: a4 = a0 >> 0x2
 25373: a0 = a0 | a4
 25376: a4 = a0 >> 0x4
 25379: a0 = a0 | a4
 25382: s1 = a0 << 0x29
 25385: a4 = s1 >> 0x31
 25388: a0 = a0 | a4
 25391: s1 = s1 >> 0x39
 25394: a0 = a0 | s1
 25397: a0 = a0 ^ 0xffffffffffffffff
 25400: a4 = a0 >> 0x1
 25403: a4 = a4 & 0x55555555
 25409: a0 = a0 - a4
 25412: s1 = a0 & 0x33333333
 25418: a0 = a0 >> 0x2
 25421: a0 = a0 & 0x33333333
 25427: a0 = a0 + s1
 25430: a4 = a0 >> 0x4
 25433: a0 = a0 + a4
 25436: a0 = a0 & 0xf0f0f0f
 25442: a0 = a0 * 0x1010101
 25448: i32 a0 = a0 >> 0x18
 25451: a4 = a0 + 0xfffffffffffffff8
 25454: i32 t1 = t1 << a4
 25457: a0 = a0 + a1
 25460: a1 = a0 + 0xfffffffffffffff7
 25463: t2 = a3
 25465: jump @1644
      : @1673
 25468: t2 = a3
 25470: jump @1644
      : @1674
 25473: a2 = a0
 25475: a4 = 0x7fffffff
 25481: a3 = a0 & a4
 25484: a5 = 0x7f800000
 25490: a0 = 0x1
 25493: jump @1680 if a5 <u a3
      : @1675
 25496: a4 = 0x800000
 25502: fallthrough
      : @1676
 25503: a3 = a3 | 0x800000
 25509: jump @1681 if a3 == 0
      : @1677
 25512: i32 a2 = a2 + 0
 25514: a1 = 0x800000
 25520: a0 = a1 & a2
 25523: jump @1682 if a0 <s 0
      : @1678
 25526: a0 = 0xffffffffffffffff
 25529: jump @1680 if a2 <s 8388608
      : @1679
 25536: a1 = a2 ^ 0x800000
 25542: a0 = a1 >u 0
 25544: ret
      : @1680
 25546: ret
      : @1681
 25548: a0 = 0
 25550: ret
      : @1682
 25552: a0 = 0xffffffffffffffff
 25555: jump @1679 if a2 <=s 8388608
      : @1683
 25562: jump @1680
      : @1684
 25564: a2 = a0
 25566: a4 = 0x7fffffff
 25572: a3 = a0 & a4
 25575: a5 = 0x7f800000
 25581: a0 = 0xffffffffffffffff
 25584: jump @1830 if a5 <u a3
      : @1685
 25588: a4 = 0
 25590: fallthrough
      : @1686
 25591: a3 = a3 | 0
 25593: jump @1690 if a3 == 0
      : @1687
 25596: i32 a2 = a2 + 0
 25598: a1 = 0
 25600: a3 = 0
 25602: fallthrough
      : @1688
 25603: jump @1830 if a2 <s 0
      : @1689
 25607: a1 = a2 ^ 0
 25609: a0 = a1 >u 0
 25611: jump @1830
      : @1690
 25614: a0 = 0
 25616: jump @1830
      : @1691 [@dyn 243]
 25619: ra = 0x1e8
 25623: sp = sp + 0xffffffffffffff90
 25626: u64 [sp + 0x68] = ra
 25629: u64 [sp + 0x60] = s0
 25632: s0 = sp + 0x70
 25635: a0 = s0 + 0xffffffffffffff90
 25638: ra = 0x21e
 25642: sp = sp + 0xffffffffffffffe8
 25645: u64 [sp + 0x10] = ra
 25648: u64 [sp + 0x8] = s0
 25651: s0 = sp + 0x18
 25654: u64 [s0 + 0xffffffffffffffe8] = a0
 25657: ra = 0x220
 25661: sp = sp + 0xffffffffffffffe0
 25664: u64 [sp + 0x18] = ra
 25667: u64 [sp + 0x10] = s0
 25670: s0 = sp + 0x20
 25673: a2 = a0
 25675: u64 [s0 + 0xffffffffffffffe8] = a2
 25678: u64 [s0 + 4294967264] = 0xffffffffffffffff
 25682: a0 = u64 [s0 + 0xffffffffffffffe0]
 25685: a1 = a2
 25687: ra = 0x222
 25691: sp = sp + 0xffffffffffffffe0
 25694: u64 [sp + 0x18] = ra
 25697: u64 [sp + 0x10] = s0
 25700: s0 = sp + 0x20
 25703: u64 [s0 + 0xffffffffffffffe8] = a0
 25706: u64 [s0 + 0xffffffffffffffe0] = a1
 25709: a0 = u64 [s0 + 0xffffffffffffffe8]
 25712: a1 = u64 [s0 + 0xffffffffffffffe0]
 25715: ra = 0x208
 25719: sp = sp + 0xffffffffffffffd0
 25722: u64 [sp + 0x28] = ra
 25725: u64 [sp + 0x20] = s0
 25728: s0 = sp + 0x30
 25731: u64 [s0 + 0xffffffffffffffe8] = a0
 25734: u64 [s0 + 0xffffffffffffffe0] = a1
 25737: u64 [s0 + 4294967256] = 0
 25740: u64 [s0 + 4294967248] = 0x60
 25744: a0 = u64 [s0 + 0xffffffffffffffe8]
 25747: a1 = u64 [s0 + 0xffffffffffffffe0]
 25750: a2 = u64 [s0 + 0xffffffffffffffd8]
 25753: a3 = u64 [s0 + 0xffffffffffffffd0]
 25756: ecalli 5 // '_jb_host_info_untyped'
 25758: ra = u64 [sp + 0x28]
 25761: s0 = u64 [sp + 0x20]
 25764: sp = sp + 0x30
 25767: ret
      : @1692 [@dyn 244]
 25769: s1 = a0
 25771: ra = 490, jump @1729
      : @1693 [@dyn 245]
 25777: a2 = a0
 25779: a0 = 0x10056
 25784: a1 = s1
 25786: ra = 492, jump @82
      : @1694 [@dyn 246]
 25792: a0 = s0 + 0xffffffffffffffb8
 25795: ra = 0x1ee
 25799: sp = sp + 0xffffffffffffffe8
 25802: u64 [sp + 0x10] = ra
 25805: u64 [sp + 0x8] = s0
 25808: s0 = sp + 0x18
 25811: u64 [s0 + 0xffffffffffffffe8] = a0
 25814: a0 = u64 [s0 + 0xffffffffffffffe8]
 25817: a2 = 0x20
 25820: a3 = 0x1
 25823: ra = 0x21a
 25827: jump @1711
      : @1695 [@dyn 247]
 25830: u32 [s0 + 4294967220] = 0
 25833: fallthrough
      : @1696
 25834: a0 = i32 [s0 + 0xffffffffffffffb4]
 25837: jump @1699 if a0 >s 31
      : @1697
 25841: a0 = i32 [s0 + 0xffffffffffffffb4]
 25844: a1 = s0 + 0xffffffffffffffb8
 25847: a0 = a0 + a1
 25850: a1 = u8 [a0]
 25852: a0 = 0x10792
 25857: ra = 496, jump @82
      : @1698 [@dyn 248]
 25863: a0 = i32 [s0 + 0xffffffffffffffb4]
 25866: i32 a0 = a0 + 0x1
 25869: u32 [s0 + 0xffffffffffffffb4] = a0
 25872: jump @1696
      : @1699
 25874: a0 = 0x10113
 25879: ra = 498, jump @84
      : @1700 [@dyn 249]
 25885: a0 = 0x3e8
 25889: ra = 500, jump @1524
      : @1701 [@dyn 250]
 25895: u64 [s0 + 0xffffffffffffffa8] = a0
 25898: a0 = u64 [s0 + 0xffffffffffffffa8]
 25901: jump @1703 if a0 != 0
      : @1702
 25904: a0 = 0x10530
 25909: a1 = 0x10588
 25914: ra = 502, jump @1857
      : @1703 [@dyn 251]
 25920: a0 = u64 [s0 + 0xffffffffffffffa8]
 25923: u8 [a0 + 0] = 0xffffffffffffffe8
 25926: a0 = s0 + 0xffffffffffffff22
 25930: ra = 0x1f8
 25934: sp = sp + 0xffffffffffffffe8
 25937: u64 [sp + 0x10] = ra
 25940: u64 [sp + 0x8] = s0
 25943: s0 = sp + 0x18
 25946: u64 [s0 + 0xffffffffffffffe8] = a0
 25949: a2 = 0x86
 25953: a3 = 0
 25955: ra = 0x218
 25959: jump @1711
      : @1704 [@dyn 252]
 25962: a1 = u64 [s0 + 0xffffffffffffffa8]
 25965: a0 = s0 + 0xffffffffffffff22
 25969: ra = 0x1fa
 25973: sp = sp + 0xfffffffffffffe08
 25977: u64 [sp + 0x1f0] = ra
 25981: u64 [sp + 0x1e8] = s0
 25985: u64 [sp + 0x1e0] = s1
 25989: s0 = sp + 0x1f8
 25993: u64 [s0 + 0xffffffffffffffe0] = a0
 25996: u64 [s0 + 0xffffffffffffffd8] = a1
 25999: u64 [s0 + 4294967248] = 0x3e8
 26004: a0 = u64 [s0 + 0xffffffffffffffd8]
 26007: u64 [s0 + 0xffffffffffffffc8] = a0
 26010: a0 = u64 [s0 + 0xffffffffffffffd0]
 26013: u64 [s0 + 0xffffffffffffffc0] = a0
 26016: a2 = u64 [s0 + 0xffffffffffffffe0]
 26019: a0 = u8 [a2]
 26021: a1 = u8 [a2 + 0x1]
 26024: a1 = a1 << 0x8
 26027: a0 = a0 | a1
 26030: a1 = u8 [a2 + 0x2]
 26033: a1 = a1 << 0x10
 26036: a3 = u8 [a2 + 0x3]
 26039: a3 = a3 << 0x18
 26042: a1 = a1 | a3
 26045: a0 = a0 | a1
 26048: a1 = u8 [a2 + 0x4]
 26051: a3 = u8 [a2 + 0x5]
 26054: i32 a3 = a3 << 0x8
 26057: a1 = a1 | a3
 26060: a3 = u8 [a2 + 0x6]
 26063: i32 a3 = a3 << 0x10
 26066: a4 = u8 [a2 + 0x7]
 26069: i32 a4 = a4 << 0x18
 26072: a3 = a3 | a4
 26075: a1 = a1 | a3
 26078: a1 = a1 << 0x20
 26081: a0 = a0 | a1
 26084: u64 [s0 + 0xffffffffffffffb8] = a0
 26087: a0 = u8 [a2 + 0x8]
 26090: a1 = u8 [a2 + 0x9]
 26093: a1 = a1 << 0x8
 26096: a0 = a0 | a1
 26099: a1 = u8 [a2 + 0xa]
 26102: a1 = a1 << 0x10
 26105: a3 = u8 [a2 + 0xb]
 26108: a3 = a3 << 0x18
 26111: a1 = a1 | a3
 26114: a0 = a0 | a1
 26117: a1 = u8 [a2 + 0xc]
 26120: a3 = u8 [a2 + 0xd]
 26123: i32 a3 = a3 << 0x8
 26126: a1 = a1 | a3
 26129: a3 = u8 [a2 + 0xe]
 26132: i32 a3 = a3 << 0x10
 26135: a4 = u8 [a2 + 0xf]
 26138: i32 a4 = a4 << 0x18
 26141: a3 = a3 | a4
 26144: a1 = a1 | a3
 26147: a1 = a1 << 0x20
 26150: a0 = a0 | a1
 26153: u64 [s0 + 0xffffffffffffffb0] = a0
 26156: a0 = u8 [a2 + 0x10]
 26159: a1 = u8 [a2 + 0x11]
 26162: a1 = a1 << 0x8
 26165: a0 = a0 | a1
 26168: a1 = u8 [a2 + 0x12]
 26171: a1 = a1 << 0x10
 26174: a3 = u8 [a2 + 0x13]
 26177: a3 = a3 << 0x18
 26180: a1 = a1 | a3
 26183: a0 = a0 | a1
 26186: a1 = u8 [a2 + 0x14]
 26189: a3 = u8 [a2 + 0x15]
 26192: i32 a3 = a3 << 0x8
 26195: a1 = a1 | a3
 26198: a3 = u8 [a2 + 0x16]
 26201: i32 a3 = a3 << 0x10
 26204: a4 = u8 [a2 + 0x17]
 26207: i32 a4 = a4 << 0x18
 26210: a3 = a3 | a4
 26213: a1 = a1 | a3
 26216: a1 = a1 << 0x20
 26219: a0 = a0 | a1
 26222: u64 [s0 + 0xffffffffffffffa8] = a0
 26225: a0 = u8 [a2 + 0x18]
 26228: a1 = u8 [a2 + 0x19]
 26231: a1 = a1 << 0x8
 26234: a0 = a0 | a1
 26237: u64 [s0 + 0xffffffffffffff98] = a0
 26240: a0 = u8 [a2 + 0x1a]
 26243: a1 = u8 [a2 + 0x1b]
 26246: a1 = a1 << 0x8
 26249: a0 = a0 | a1
 26252: a1 = u8 [a2 + 0x1c]
 26255: a1 = a1 << 0x10
 26258: a3 = u8 [a2 + 0x1d]
 26261: a3 = a3 << 0x18
 26264: a1 = a1 | a3
 26267: a0 = a0 | a1
 26270: u64 [s0 + 0xffffffffffffffa0] = a0
 26273: a0 = u8 [a2 + 0x1e]
 26276: a1 = u8 [a2 + 0x1f]
 26279: a1 = a1 << 0x8
 26282: a0 = a0 | a1
 26285: a1 = u8 [a2 + 0x20]
 26288: a1 = a1 << 0x10
 26291: a3 = u8 [a2 + 0x21]
 26294: a3 = a3 << 0x18
 26297: a1 = a1 | a3
 26300: a0 = a0 | a1
 26303: u64 [s0 + 0xffffffffffffff90] = a0
 26306: a0 = u8 [a2 + 0x22]
 26309: a1 = u8 [a2 + 0x23]
 26312: a1 = a1 << 0x8
 26315: a0 = a0 | a1
 26318: a1 = u8 [a2 + 0x24]
 26321: a1 = a1 << 0x10
 26324: a3 = u8 [a2 + 0x25]
 26327: a3 = a3 << 0x18
 26330: a1 = a1 | a3
 26333: a0 = a0 | a1
 26336: a1 = u8 [a2 + 0x26]
 26339: a3 = u8 [a2 + 0x27]
 26342: i32 a3 = a3 << 0x8
 26345: a1 = a1 | a3
 26348: a3 = u8 [a2 + 0x28]
 26351: i32 a3 = a3 << 0x10
 26354: a4 = u8 [a2 + 0x29]
 26357: i32 a4 = a4 << 0x18
 26360: a3 = a3 | a4
 26363: a1 = a1 | a3
 26366: a1 = a1 << 0x20
 26369: a0 = a0 | a1
 26372: u64 [s0 + 0xffffffffffffff88] = a0
 26375: a0 = u8 [a2 + 0x2a]
 26378: a1 = u8 [a2 + 0x2b]
 26381: a1 = a1 << 0x8
 26384: a0 = a0 | a1
 26387: a1 = u8 [a2 + 0x2c]
 26390: a1 = a1 << 0x10
 26393: a3 = u8 [a2 + 0x2d]
 26396: a3 = a3 << 0x18
 26399: a1 = a1 | a3
 26402: a0 = a0 | a1
 26405: a1 = u8 [a2 + 0x2e]
 26408: a3 = u8 [a2 + 0x2f]
 26411: i32 a3 = a3 << 0x8
 26414: a1 = a1 | a3
 26417: a3 = u8 [a2 + 0x30]
 26420: i32 a3 = a3 << 0x10
 26423: a4 = u8 [a2 + 0x31]
 26426: i32 a4 = a4 << 0x18
 26429: a3 = a3 | a4
 26432: a1 = a1 | a3
 26435: a1 = a1 << 0x20
 26438: a0 = a0 | a1
 26441: u64 [s0 + 0xffffffffffffff80] = a0
 26444: a0 = u8 [a2 + 0x32]
 26447: a1 = u8 [a2 + 0x33]
 26450: a1 = a1 << 0x8
 26453: a0 = a0 | a1
 26456: a1 = u8 [a2 + 0x34]
 26459: a1 = a1 << 0x10
 26462: a3 = u8 [a2 + 0x35]
 26465: a3 = a3 << 0x18
 26468: a1 = a1 | a3
 26471: a0 = a0 | a1
 26474: a1 = u8 [a2 + 0x36]
 26477: a3 = u8 [a2 + 0x37]
 26480: i32 a3 = a3 << 0x8
 26483: a1 = a1 | a3
 26486: a3 = u8 [a2 + 0x38]
 26489: i32 a3 = a3 << 0x10
 26492: a4 = u8 [a2 + 0x39]
 26495: i32 a4 = a4 << 0x18
 26498: a3 = a3 | a4
 26501: a1 = a1 | a3
 26504: a1 = a1 << 0x20
 26507: a0 = a0 | a1
 26510: u64 [s0 + 0xffffffffffffff78] = a0
 26514: a0 = u8 [a2 + 0x3a]
 26517: a1 = u8 [a2 + 0x3b]
 26520: a1 = a1 << 0x8
 26523: a0 = a0 | a1
 26526: a1 = u8 [a2 + 0x3c]
 26529: a1 = a1 << 0x10
 26532: a3 = u8 [a2 + 0x3d]
 26535: a3 = a3 << 0x18
 26538: a1 = a1 | a3
 26541: a0 = a0 | a1
 26544: a1 = u8 [a2 + 0x3e]
 26547: a3 = u8 [a2 + 0x3f]
 26550: i32 a3 = a3 << 0x8
 26553: a1 = a1 | a3
 26556: a3 = u8 [a2 + 0x40]
 26559: i32 a3 = a3 << 0x10
 26562: a4 = u8 [a2 + 0x41]
 26565: i32 a4 = a4 << 0x18
 26568: a3 = a3 | a4
 26571: a1 = a1 | a3
 26574: a1 = a1 << 0x20
 26577: a0 = a0 | a1
 26580: u64 [s0 + 0xffffffffffffff70] = a0
 26584: a0 = u8 [a2 + 0x42]
 26587: a1 = u8 [a2 + 0x43]
 26590: a1 = a1 << 0x8
 26593: a0 = a0 | a1
 26596: u64 [s0 + 0xffffffffffffff68] = a0
 26600: a0 = u8 [a2 + 0x44]
 26603: a1 = u8 [a2 + 0x45]
 26606: a1 = a1 << 0x8
 26609: a0 = a0 | a1
 26612: u64 [s0 + 0xffffffffffffff60] = a0
 26616: a0 = u8 [a2 + 0x46]
 26619: a1 = u8 [a2 + 0x47]
 26622: a1 = a1 << 0x8
 26625: a0 = a0 | a1
 26628: u64 [s0 + 0xffffffffffffff58] = a0
 26632: a0 = u8 [a2 + 0x48]
 26635: a1 = u8 [a2 + 0x49]
 26638: a1 = a1 << 0x8
 26641: a0 = a0 | a1
 26644: u64 [s0 + 0xffffffffffffff48] = a0
 26648: a0 = u8 [a2 + 0x4a]
 26651: a1 = u8 [a2 + 0x4b]
 26654: a1 = a1 << 0x8
 26657: a0 = a0 | a1
 26660: a1 = u8 [a2 + 0x4c]
 26663: a1 = a1 << 0x10
 26666: a3 = u8 [a2 + 0x4d]
 26669: a3 = a3 << 0x18
 26672: a1 = a1 | a3
 26675: a0 = a0 | a1
 26678: u64 [s0 + 0xffffffffffffff50] = a0
 26682: a0 = u8 [a2 + 0x4e]
 26685: a1 = u8 [a2 + 0x4f]
 26688: a1 = a1 << 0x8
 26691: a0 = a0 | a1
 26694: u64 [s0 + 0xffffffffffffff40] = a0
 26698: a0 = u8 [a2 + 0x50]
 26701: a1 = u8 [a2 + 0x51]
 26704: a1 = a1 << 0x8
 26707: a0 = a0 | a1
 26710: u64 [s0 + 0xffffffffffffff38] = a0
 26714: a0 = u8 [a2 + 0x52]
 26717: a1 = u8 [a2 + 0x53]
 26720: a1 = a1 << 0x8
 26723: a0 = a0 | a1
 26726: u64 [s0 + 0xffffffffffffff30] = a0
 26730: a0 = u8 [a2 + 0x54]
 26733: a1 = u8 [a2 + 0x55]
 26736: a1 = a1 << 0x8
 26739: a0 = a0 | a1
 26742: u64 [s0 + 0xffffffffffffff28] = a0
 26746: a0 = u8 [a2 + 0x56]
 26749: a1 = u8 [a2 + 0x57]
 26752: a1 = a1 << 0x8
 26755: a0 = a0 | a1
 26758: u64 [s0 + 0xffffffffffffff20] = a0
 26762: a0 = u8 [a2 + 0x58]
 26765: a1 = u8 [a2 + 0x59]
 26768: a1 = a1 << 0x8
 26771: a0 = a0 | a1
 26774: u64 [s0 + 0xffffffffffffff10] = a0
 26778: a0 = u8 [a2 + 0x5a]
 26781: a1 = u8 [a2 + 0x5b]
 26784: a1 = a1 << 0x8
 26787: a0 = a0 | a1
 26790: u64 [s0 + 0xffffffffffffff08] = a0
 26794: a0 = u8 [a2 + 0x5c]
 26797: a1 = u8 [a2 + 0x5d]
 26800: a1 = a1 << 0x8
 26803: a0 = a0 | a1
 26806: u64 [s0 + 0xfffffffffffffef8] = a0
 26810: a0 = u8 [a2 + 0x5e]
 26813: a1 = u8 [a2 + 0x5f]
 26816: a1 = a1 << 0x8
 26819: a0 = a0 | a1
 26822: a1 = u8 [a2 + 0x60]
 26825: a1 = a1 << 0x10
 26828: a3 = u8 [a2 + 0x61]
 26831: a3 = a3 << 0x18
 26834: a1 = a1 | a3
 26837: a0 = a0 | a1
 26840: u64 [s0 + 0xffffffffffffff18] = a0
 26844: a0 = u8 [a2 + 0x62]
 26847: a1 = u8 [a2 + 0x63]
 26850: a1 = a1 << 0x8
 26853: a0 = a0 | a1
 26856: a1 = u8 [a2 + 0x64]
 26859: a1 = a1 << 0x10
 26862: a3 = u8 [a2 + 0x65]
 26865: a3 = a3 << 0x18
 26868: a1 = a1 | a3
 26871: a0 = a0 | a1
 26874: u64 [s0 + 0xffffffffffffff00] = a0
 26878: a0 = u8 [a2 + 0x66]
 26881: a1 = u8 [a2 + 0x67]
 26884: a1 = a1 << 0x8
 26887: a0 = a0 | a1
 26890: a1 = u8 [a2 + 0x68]
 26893: a1 = a1 << 0x10
 26896: a3 = u8 [a2 + 0x69]
 26899: a3 = a3 << 0x18
 26902: a1 = a1 | a3
 26905: t2 = a1 | a0
 26908: a0 = u8 [a2 + 0x6a]
 26911: a1 = u8 [a2 + 0x6b]
 26914: a1 = a1 << 0x8
 26917: a0 = a0 | a1
 26920: a1 = u8 [a2 + 0x6c]
 26923: a1 = a1 << 0x10
 26926: a3 = u8 [a2 + 0x6d]
 26929: a3 = a3 << 0x18
 26932: a1 = a1 | a3
 26935: t1 = a1 | a0
 26938: a0 = u8 [a2 + 0x6e]
 26941: a1 = u8 [a2 + 0x6f]
 26944: a1 = a1 << 0x8
 26947: a0 = a0 | a1
 26950: a1 = u8 [a2 + 0x70]
 26953: a1 = a1 << 0x10
 26956: a3 = u8 [a2 + 0x71]
 26959: a3 = a3 << 0x18
 26962: a1 = a1 | a3
 26965: t0 = a1 | a0
 26968: a0 = u8 [a2 + 0x72]
 26971: a1 = u8 [a2 + 0x73]
 26974: a1 = a1 << 0x8
 26977: a0 = a0 | a1
 26980: a1 = u8 [a2 + 0x74]
 26983: a1 = a1 << 0x10
 26986: a3 = u8 [a2 + 0x75]
 26989: a3 = a3 << 0x18
 26992: a1 = a1 | a3
 26995: a4 = a1 | a0
 26998: a0 = u8 [a2 + 0x76]
 27001: a1 = u8 [a2 + 0x77]
 27004: a1 = a1 << 0x8
 27007: a0 = a0 | a1
 27010: a1 = u8 [a2 + 0x78]
 27013: a1 = a1 << 0x10
 27016: a3 = u8 [a2 + 0x79]
 27019: a3 = a3 << 0x18
 27022: a1 = a1 | a3
 27025: a3 = a1 | a0
 27028: a0 = u8 [a2 + 0x7a]
 27031: a1 = u8 [a2 + 0x7b]
 27034: a1 = a1 << 0x8
 27037: a0 = a0 | a1
 27040: a1 = u8 [a2 + 0x7c]
 27043: a1 = a1 << 0x10
 27046: ra = u8 [a2 + 0x7d]
 27049: ra = ra << 0x18
 27052: a1 = ra | a1
 27055: a1 = a1 | a0
 27058: a0 = u8 [a2 + 0x7e]
 27061: s1 = u8 [a2 + 0x7f]
 27064: s1 = s1 << 0x8
 27067: a0 = a0 | s1
 27070: s1 = u8 [a2 + 0x80]
 27074: s1 = s1 << 0x10
 27077: a5 = u8 [a2 + 0x81]
 27081: a5 = a5 << 0x18
 27084: a5 = a5 | s1
 27087: a0 = a0 | a5
 27090: a5 = u8 [a2 + 0x82]
 27094: s1 = u8 [a2 + 0x83]
 27098: s1 = s1 << 0x8
 27101: a5 = a5 | s1
 27104: s1 = u8 [a2 + 0x84]
 27108: s1 = s1 << 0x10
 27111: a2 = u8 [a2 + 0x85]
 27115: a2 = a2 << 0x18
 27118: a2 = a2 | s1
 27121: a2 = a2 | a5
 27124: a5 = u64 [s0 + 0xfffffffffffffef8]
 27128: u64 [sp + 0x98] = a5
 27132: a5 = u64 [s0 + 0xffffffffffffff08]
 27136: u64 [sp + 0x90] = a5
 27140: a5 = u64 [s0 + 0xffffffffffffff10]
 27144: u64 [sp + 0x88] = a5
 27148: a5 = u64 [s0 + 0xffffffffffffff20]
 27152: u64 [sp + 0x80] = a5
 27156: a5 = u64 [s0 + 0xffffffffffffff28]
 27160: u64 [sp + 0x78] = a5
 27163: a5 = u64 [s0 + 0xffffffffffffff30]
 27167: u64 [sp + 0x70] = a5
 27170: a5 = u64 [s0 + 0xffffffffffffff38]
 27174: u64 [sp + 0x68] = a5
 27177: a5 = u64 [s0 + 0xffffffffffffff40]
 27181: u64 [sp + 0x60] = a5
 27184: a5 = u64 [s0 + 0xffffffffffffff48]
 27188: u64 [sp + 0x50] = a5
 27191: a5 = u64 [s0 + 0xffffffffffffff58]
 27195: u64 [sp + 0x48] = a5
 27198: a5 = u64 [s0 + 0xffffffffffffff60]
 27202: u64 [sp + 0x40] = a5
 27205: a5 = u64 [s0 + 0xffffffffffffff68]
 27209: u64 [sp + 0x38] = a5
 27212: a5 = u64 [s0 + 0xffffffffffffff98]
 27215: u64 [sp] = a5
 27217: u64 [sp + 0xe8] = a2
 27221: u64 [sp + 0xe0] = a0
 27225: u64 [sp + 0xd8] = a1
 27229: u64 [sp + 0xd0] = a3
 27233: u64 [sp + 0xc8] = a4
 27237: u64 [sp + 0xc0] = t0
 27241: u64 [sp + 0xb8] = t1
 27245: u64 [sp + 0xb0] = t2
 27249: a0 = u64 [s0 + 0xffffffffffffff00]
 27253: u64 [sp + 0xa8] = a0
 27257: a0 = u64 [s0 + 0xffffffffffffff18]
 27261: u64 [sp + 0xa0] = a0
 27265: a0 = u64 [s0 + 0xffffffffffffff50]
 27269: u64 [sp + 0x58] = a0
 27272: a0 = u64 [s0 + 0xffffffffffffff90]
 27275: u64 [sp + 0x10] = a0
 27278: a0 = u64 [s0 + 0xffffffffffffffa0]
 27281: u64 [sp + 0x8] = a0
 27284: a0 = u64 [s0 + 0xffffffffffffff70]
 27288: u64 [sp + 0x30] = a0
 27291: a0 = u64 [s0 + 0xffffffffffffff78]
 27295: u64 [sp + 0x28] = a0
 27298: a0 = u64 [s0 + 0xffffffffffffff80]
 27301: u64 [sp + 0x20] = a0
 27304: a0 = u64 [s0 + 0xffffffffffffff88]
 27307: u64 [sp + 0x18] = a0
 27310: a2 = 0x10233
 27315: a0 = u64 [s0 + 0xffffffffffffffc8]
 27318: a1 = u64 [s0 + 0xffffffffffffffc0]
 27321: a3 = u64 [s0 + 0xffffffffffffffb8]
 27324: a4 = u64 [s0 + 0xffffffffffffffb0]
 27327: a5 = u64 [s0 + 0xffffffffffffffa8]
 27330: ra = 0x2b6
 27334: jump @221
      : @1705 [@dyn 253]
 27337: a1 = u64 [s0 + 0xffffffffffffffa8]
 27340: a0 = 0x10116
 27345: ra = 508, jump @82
      : @1706 [@dyn 254]
 27351: a0 = u64 [s0 + 0xffffffffffffffa8]
 27354: ra = 510, jump @1538
      : @1707 [@dyn 255]
 27360: ra = 512, jump @1729
      : @1708 [@dyn 256]
 27366: a1 = a0
 27368: a0 = 0x10646
 27373: ra = 514, jump @82
      : @1709 [@dyn 257]
 27379: ra = u64 [sp + 0xd8]
 27383: s0 = u64 [sp + 0xd0]
 27387: s1 = u64 [sp + 0xc8]
 27391: sp = sp + 0xe0
 27395: ret
      : @1710 [@dyn 258]
 27397: ra = u64 [sp + 0x8]
 27400: s0 = u64 [sp]
 27402: sp = sp + 0x10
 27405: ret
      : @1711
 27407: sp = sp + 0xffffffffffffffc0
 27410: u64 [sp + 0x38] = ra
 27413: u64 [sp + 0x30] = s0
 27416: s0 = sp + 0x40
 27419: u64 [s0 + 0xffffffffffffffe8] = a0
 27422: u64 [s0 + 4294967264] = 0
 27425: u64 [s0 + 0xffffffffffffffd8] = a2
 27428: u64 [s0 + 0xffffffffffffffd0] = a3
 27431: u64 [s0 + 4294967240] = 0
 27434: u64 [s0 + 4294967232] = 0
 27437: a0 = u64 [s0 + 0xffffffffffffffe8]
 27440: a1 = u64 [s0 + 0xffffffffffffffe0]
 27443: a2 = u64 [s0 + 0xffffffffffffffd8]
 27446: a3 = u64 [s0 + 0xffffffffffffffd0]
 27449: a4 = u64 [s0 + 0xffffffffffffffc8]
 27452: a5 = u64 [s0 + 0xffffffffffffffc0]
 27455: ra = 518, jump @1715
      : @1712 [@dyn 259]
 27460: ra = u64 [sp + 0x38]
 27463: s0 = u64 [sp + 0x30]
 27466: sp = sp + 0x40
 27469: ret
      : @1713 [@dyn 260]
 27471: ra = u64 [sp + 0x18]
 27474: s0 = u64 [sp + 0x10]
 27477: sp = sp + 0x20
 27480: ret
      : @1714 [@dyn 261]
 27482: ra = u64 [sp + 0x30]
 27485: s0 = u64 [sp + 0x28]
 27488: sp = sp + 0x38
 27491: ret
      : @1715
 27493: sp = sp + 0xffffffffffffffc0
 27496: u64 [sp + 0x38] = ra
 27499: u64 [sp + 0x30] = s0
 27502: s0 = sp + 0x40
 27505: u64 [s0 + 0xffffffffffffffe8] = a0
 27508: u64 [s0 + 0xffffffffffffffe0] = a1
 27511: u64 [s0 + 0xffffffffffffffd8] = a2
 27514: u64 [s0 + 0xffffffffffffffd0] = a3
 27517: u64 [s0 + 0xffffffffffffffc8] = a4
 27520: u64 [s0 + 0xffffffffffffffc0] = a5
 27523: a0 = u64 [s0 + 0xffffffffffffffe8]
 27526: a1 = u64 [s0 + 0xffffffffffffffe0]
 27529: a2 = u64 [s0 + 0xffffffffffffffd8]
 27532: a3 = u64 [s0 + 0xffffffffffffffd0]
 27535: a4 = u64 [s0 + 0xffffffffffffffc8]
 27538: a5 = u64 [s0 + 0xffffffffffffffc0]
 27541: ecalli 1 // '_jb_host_fetch_untyped'
 27543: ra = u64 [sp + 0x38]
 27546: s0 = u64 [sp + 0x30]
 27549: sp = sp + 0x40
 27552: ret
      : @1716
 27554: sp = sp + 0xffffffffffffffc8
 27557: u64 [sp + 0x30] = ra
 27560: u64 [sp + 0x28] = s0
 27563: s0 = sp + 0x38
 27566: u64 [s0 + 0xffffffffffffffe8] = a0
 27569: u64 [s0 + 0xffffffffffffffe0] = a1
 27572: u64 [s0 + 0xffffffffffffffd8] = a2
 27575: u64 [s0 + 0xffffffffffffffd0] = a3
 27578: u64 [s0 + 0xffffffffffffffc8] = a4
 27581: a0 = u64 [s0 + 0xffffffffffffffe8]
 27584: a1 = u64 [s0 + 0xffffffffffffffe0]
 27587: a2 = u64 [s0 + 0xffffffffffffffd8]
 27590: a3 = u64 [s0 + 0xffffffffffffffd0]
 27593: a4 = u64 [s0 + 0xffffffffffffffc8]
 27596: ecalli 100 // '_jb_host_log_untyped'
 27598: ra = u64 [sp + 0x30]
 27601: s0 = u64 [sp + 0x28]
 27604: sp = sp + 0x38
 27607: ret
      : @1717 [export #0: '_jb_hook_accumulate']
 27609: sp = sp + 0xfffffffffffffff0
 27612: u64 [sp + 0x8] = ra
 27615: u64 [sp] = s0
 27617: s0 = sp + 0x10
 27620: ra = 0x20c
 27624: sp = sp + 0xfffffffffffffff0
 27627: u64 [sp + 0x8] = ra
 27630: u64 [sp] = s0
 27632: ra = u64 [sp + 0x8]
 27635: s0 = u64 [sp]
 27637: sp = sp + 0x10
 27640: ret
      : @1718 [@dyn 262]
 27642: ra = u64 [sp + 0x8]
 27645: s0 = u64 [sp]
 27647: sp = sp + 0x10
 27650: ret
      : @1719 [export #1: '_jb_hook_refine']
 27652: sp = sp + 0xfffffffffffffff0
 27655: u64 [sp + 0x8] = ra
 27658: u64 [sp] = s0
 27660: s0 = sp + 0x10
 27663: ra = 0x20e
 27667: sp = sp + 0xfffffffffffffff0
 27670: u64 [sp + 0x8] = ra
 27673: u64 [sp] = s0
 27675: ra = u64 [sp + 0x8]
 27678: s0 = u64 [sp]
 27680: sp = sp + 0x10
 27683: ret
      : @1720 [@dyn 263]
 27685: ra = u64 [sp + 0x8]
 27688: s0 = u64 [sp]
 27690: sp = sp + 0x10
 27693: ret
      : @1721 [export #2: '_jb_hook_is_authorized']
 27695: sp = sp + 0xfffffffffffffff0
 27698: u64 [sp + 0x8] = ra
 27701: u64 [sp] = s0
 27703: s0 = sp + 0x10
 27706: ra = 0x210
 27710: sp = sp + 0xfffffffffffffff0
 27713: u64 [sp + 0x8] = ra
 27716: u64 [sp] = s0
 27718: ra = u64 [sp + 0x8]
 27721: s0 = u64 [sp]
 27723: sp = sp + 0x10
 27726: ret
      : @1722 [@dyn 264]
 27728: ra = u64 [sp + 0x8]
 27731: s0 = u64 [sp]
 27733: sp = sp + 0x10
 27736: ret
      : @1723 [export #3: '_jb_hook_on_transfer']
 27738: sp = sp + 0xffffffffffffffa8
 27741: u64 [sp + 0x50] = ra
 27744: u64 [sp + 0x48] = s0
 27747: s0 = sp + 0x58
 27750: u64 [s0 + 4294967264] = 0x109ab
 27756: u64 [s0 + 4294967272] = 0
 27759: u64 [s0 + 4294967256] = 0
 27762: u64 [s0 + 4294967248] = 0x1000
 27767: u64 [s0 + 4294967240] = 0x6
 27771: u64 [s0 + 4294967208] = 0x1
 27775: a0 = s0 + 0xffffffffffffffe0
 27778: u64 [s0 + 0xffffffffffffffb0] = a0
 27781: u64 [s0 + 4294967224] = 0
 27784: a0 = s0 + 0xffffffffffffffc8
 27787: u64 [s0 + 0xffffffffffffffc0] = a0
 27790: a0 = s0 + 0xffffffffffffffa8
 27793: ra = 0x212
 27797: a1 = i32 [a0]
 27799: a3 = 0x2
 27802: a4 = 0x24
 27805: a2 = a0 + 0x8
 27808: a0 = 0x224
 27812: a5 = 0
 27814: sp = sp + 0xffffffffffffffe0
 27817: u64 [sp + 0x18] = ra
 27820: u64 [sp + 0x10] = s0
 27823: u64 [sp + 0x8] = s1
 27826: s0 = a2
 27828: s1 = a1
 27830: u64 [sp] = a0
 27832: a1 = u64 [a2]
 27834: a0 = s1 << 0x3
 27837: a0 = a0 + a2
 27840: a0 = a0 + 0x8
 27843: ra = 0x12
 27846: sp = sp + 0xfffffffffffffe88
 27850: u64 [sp + 0x170] = ra
 27854: u64 [sp + 0x168] = s0
 27858: u64 [sp + 0x160] = s1
 27862: s0 = a1
 27864: s1 = a0
 27866: a0 = sp + 0x30
 27869: a2 = 0x130
 27873: a1 = 0
 27875: ra = 0x4
 27878: jump @1314
      : @1724 [@dyn 265]
 27881: ra = u64 [sp + 0x50]
 27884: s0 = u64 [sp + 0x48]
 27887: sp = sp + 0x58
 27890: ret
      : @1725 [@dyn 266]
 27892: ra = 0x216
 27896: sp = sp + 0xfffffffffffffff0
 27899: u64 [sp + 0x8] = ra
 27902: u64 [sp] = s0
 27904: s0 = sp + 0x10
 27907: ra = 0x23a
 27911: sp = sp + 0xfffffffffffffff0
 27914: u64 [sp + 0x8] = ra
 27917: u64 [sp] = s0
 27919: s0 = sp + 0x10
 27922: a2 = 0x10182
 27927: a0 = 0x1
 27930: a1 = 0x1
 27933: ra = 0x244
 27937: jump @1784
      : @1726 [@dyn 267]
 27940: ra = u64 [sp + 0x10]
 27943: s0 = u64 [sp + 0x8]
 27946: sp = sp + 0x18
 27949: ret
      : @1727 [@dyn 268]
 27951: ra = u64 [sp + 0x10]
 27954: s0 = u64 [sp + 0x8]
 27957: sp = sp + 0x18
 27960: ret
      : @1728 [@dyn 269]
 27962: ra = u64 [sp + 0x10]
 27965: s0 = u64 [sp + 0x8]
 27968: sp = sp + 0x18
 27971: ret
      : @1729
 27973: sp = sp + 0xfffffffffffffff0
 27976: u64 [sp + 0x8] = ra
 27979: u64 [sp] = s0
 27981: s0 = sp + 0x10
 27984: ra = 0x21c
 27988: sp = sp + 0xfffffffffffffff0
 27991: u64 [sp + 0x8] = ra
 27994: u64 [sp] = s0
 27996: s0 = sp + 0x10
 27999: ra = 0x204
 28003: sp = sp + 0xfffffffffffffff0
 28006: u64 [sp + 0x8] = ra
 28009: u64 [sp] = s0
 28011: ecalli 0 // '_jb_host_gas_untyped'
 28012: ra = u64 [sp + 0x8]
 28015: s0 = u64 [sp]
 28017: sp = sp + 0x10
 28020: ret
      : @1730 [@dyn 270]
 28022: ra = u64 [sp + 0x8]
 28025: s0 = u64 [sp]
 28027: sp = sp + 0x10
 28030: ret
      : @1731 [@dyn 271]
 28032: a0 = u8 [s0 + 0xffffffffffffffb1]
 28035: a0 = a0 << 0x8
 28038: a1 = u8 [s0 + 0xffffffffffffffb0]
 28041: a0 = a0 | a1
 28044: a1 = u8 [s0 + 0xffffffffffffffb2]
 28047: a1 = a1 << 0x10
 28050: a2 = u8 [s0 + 0xffffffffffffffb3]
 28053: a2 = a2 << 0x18
 28056: a1 = a1 | a2
 28059: a0 = a0 | a1
 28062: a1 = u8 [s0 + 0xffffffffffffffb5]
 28065: i32 a1 = a1 << 0x8
 28068: a2 = u8 [s0 + 0xffffffffffffffb4]
 28071: a1 = a1 | a2
 28074: a2 = u8 [s0 + 0xffffffffffffffb6]
 28077: i32 a2 = a2 << 0x10
 28080: a3 = u8 [s0 + 0xffffffffffffffb7]
 28083: i32 a3 = a3 << 0x18
 28086: a2 = a2 | a3
 28089: a1 = a1 | a2
 28092: a1 = a1 << 0x20
 28095: a0 = a0 | a1
 28098: ra = u64 [sp + 0x68]
 28101: s0 = u64 [sp + 0x60]
 28104: sp = sp + 0x70
 28107: ret
      : @1732 [@dyn 272]
 28109: ra = u64 [sp + 0x10]
 28112: s0 = u64 [sp + 0x8]
 28115: sp = sp + 0x18
 28118: ret
      : @1733 [@dyn 273]
 28120: ra = u64 [sp + 0x18]
 28123: s0 = u64 [sp + 0x10]
 28126: sp = sp + 0x20
 28129: ret
      : @1734 [@dyn 274]
 28131: sp = sp + 0xffffffffffffffd0
 28134: u64 [sp + 0x28] = ra
 28137: u64 [sp + 0x20] = s0
 28140: s0 = sp + 0x30
 28143: u32 [s0 + 4294967276] = 0
 28146: u32 [s0 + 0xffffffffffffffe8] = a0
 28149: u64 [s0 + 0xffffffffffffffe0] = a1
 28152: u64 [s0 + 4294967256] = 0
 28155: u64 [s0 + 4294967248] = 0
 28158: a0 = s0 + 0xffffffffffffffd8
 28161: a1 = s0 + 0xffffffffffffffd0
 28164: ra = 0x226
 28168: sp = sp + 0xffffffffffffff20
 28172: u64 [sp + 0xd8] = ra
 28176: u64 [sp + 0xd0] = s0
 28180: u64 [sp + 0xc8] = s1
 28184: s0 = sp + 0xe0
 28188: u64 [s0 + 0xffffffffffffffe0] = a0
 28191: u64 [s0 + 0xffffffffffffffd8] = a1
 28194: a0 = 0x101e1
 28199: ra = 0x1e6
 28203: sp = sp + 0xffffffffffffffe8
 28206: u64 [sp + 0x10] = ra
 28209: u64 [sp + 0x8] = s0
 28212: s0 = sp + 0x18
 28215: u64 [s0 + 0xffffffffffffffe8] = a0
 28218: a0 = u64 [s0 + 0xffffffffffffffe8]
 28221: a1 = 0x10537
 28226: ra = 0x214
 28230: sp = sp + 0xffffffffffffffe0
 28233: u64 [sp + 0x18] = ra
 28236: u64 [sp + 0x10] = s0
 28239: s0 = sp + 0x20
 28242: u64 [s0 + 0xffffffffffffffe8] = a0
 28245: u64 [s0 + 0xffffffffffffffe0] = a1
 28248: a1 = u64 [s0 + 0xffffffffffffffe8]
 28251: a2 = u64 [s0 + 0xffffffffffffffe0]
 28254: a0 = 0x2
 28257: ra = 0x2b0
 28261: jump @1851
      : @1735 [@dyn 275]
 28264: a0 = u64 [s0 + 0xffffffffffffffd8]
 28267: a1 = u64 [s0 + 0xffffffffffffffd0]
 28270: ra = 0x228
 28274: sp = sp + 0xffffffffffffffe0
 28277: u64 [sp + 0x18] = ra
 28280: u64 [sp + 0x10] = s0
 28283: s0 = sp + 0x20
 28286: u64 [s0 + 0xffffffffffffffe8] = a0
 28289: u64 [s0 + 0xffffffffffffffe0] = a1
 28292: a2 = u64 [s0 + 0xffffffffffffffe8]
 28295: a3 = u64 [s0 + 0xffffffffffffffe0]
 28298: a0 = a2
 28300: a1 = a3
 28302: ra = u64 [sp + 0x18]
 28305: s0 = u64 [sp + 0x10]
 28308: sp = sp + 0x20
 28311: ret
      : @1736 [@dyn 276]
 28313: a0 = 0
 28315: ra = u64 [sp + 0x28]
 28318: s0 = u64 [sp + 0x20]
 28321: sp = sp + 0x30
 28324: ret
      : @1737
 28326: sp = sp + 0xfffffffffffffee8
 28330: u64 [sp + 0x110] = ra
 28334: u64 [sp + 0x108] = s0
 28338: s0 = sp + 0x118
 28342: t0 = u64 [s0]
 28344: u64 [s0 + 0xffffffffffffffe0] = a0
 28347: u64 [s0 + 0xffffffffffffffd8] = a1
 28350: u64 [s0 + 0xffffffffffffffd0] = a2
 28353: u64 [s0 + 0xffffffffffffffc8] = a3
 28356: u64 [s0 + 0xffffffffffffffc0] = a4
 28359: u64 [s0 + 0xffffffffffffffb8] = a5
 28362: a0 = u64 [s0 + 0xffffffffffffffe0]
 28365: jump @1744 if a0 == 29
      : @1738
 28369: a1 = 0x42
 28372: jump @1747 if a0 == a1
      : @1739
 28375: jump @1768 if a0 == 93
      : @1740
 28380: jump @1767 if a0 == 94
      : @1741
 28385: jump @1766 if a0 == 96
      : @1742
 28390: a1 = 0x71
 28393: jump @1769 if a0 == a1
      : @1743
 28397: jump @1770
      : @1744
 28400: a0 = u64 [s0 + 0xffffffffffffffd8]
 28403: u64 [s0 + 0xffffffffffffffb0] = a0
 28406: a0 = u64 [s0 + 0xffffffffffffffd0]
 28409: u64 [s0 + 0xffffffffffffffa8] = a0
 28412: a0 = u64 [s0 + 0xffffffffffffffc8]
 28415: u64 [s0 + 0xffffffffffffffa0] = a0
 28418: a0 = u64 [s0 + 0xffffffffffffffa8]
 28421: a1 = 0x5413
 28425: jump @1746 if a0 != a1
      : @1745
 28428: a0 = u64 [s0 + 0xffffffffffffffa0]
 28431: u64 [s0 + 0xffffffffffffff98] = a0
 28434: a0 = u64 [s0 + 0xffffffffffffff98]
 28437: u16 [a0 + 0] = 0x50
 28440: a0 = u64 [s0 + 0xffffffffffffff98]
 28443: a1 = 0x18
 28446: u16 [a0 + 0x2] = a1
 28449: a0 = u64 [s0 + 0xffffffffffffff98]
 28452: u16 [a0 + 4] = 0
 28455: a0 = u64 [s0 + 0xffffffffffffff98]
 28458: u16 [a0 + 6] = 0
 28461: u64 [s0 + 4294967272] = 0
 28464: jump @1773
      : @1746
 28467: u64 [s0 + 4294967272] = 0xffffffffffffffda
 28471: jump @1773
      : @1747
 28474: a0 = u64 [s0 + 0xffffffffffffffd8]
 28477: u64 [s0 + 0xffffffffffffff90] = a0
 28480: a0 = u64 [s0 + 0xffffffffffffffd0]
 28483: u64 [s0 + 0xffffffffffffff88] = a0
 28486: a0 = u64 [s0 + 0xffffffffffffffc8]
 28489: u64 [s0 + 0xffffffffffffff80] = a0
 28492: a0 = u64 [s0 + 0xffffffffffffff80]
 28495: jump @1749 if a0 == 0
      : @1748
 28498: a0 = u64 [s0 + 0xffffffffffffff80]
 28501: a1 = 0x401
 28505: jump @1750 if a0 <u a1
      : @1749
 28508: u64 [s0 + 4294967272] = 0xffffffffffffffea
 28512: jump @1773
      : @1750
 28515: u64 [s0 + 4294967160] = 0
 28519: u64 [s0 + 4294967152] = 0
 28523: fallthrough
      : @1751
 28524: a0 = u64 [s0 + 0xffffffffffffff70]
 28528: a1 = u64 [s0 + 0xffffffffffffff80]
 28531: jump @1765 if a0 >=u a1
      : @1752
 28535: a0 = u64 [s0 + 0xffffffffffffff88]
 28538: a1 = u64 [s0 + 0xffffffffffffff70]
 28542: a1 = a1 << 0x4
 28545: a0 = a0 + a1
 28548: a0 = u64 [a0]
 28550: u64 [s0 + 0xffffffffffffff68] = a0
 28554: a0 = u64 [s0 + 0xffffffffffffff88]
 28557: a1 = u64 [s0 + 0xffffffffffffff70]
 28561: a1 = a1 << 0x4
 28564: a0 = a0 + a1
 28567: a0 = u64 [a0 + 0x8]
 28570: u64 [s0 + 0xffffffffffffff60] = a0
 28574: a0 = u64 [s0 + 0xffffffffffffff90]
 28577: jump @1755 if a0 == 1
      : @1753
 28581: a0 = u64 [s0 + 0xffffffffffffff90]
 28584: a1 = 0x2
 28587: jump @1755 if a0 == a1
      : @1754
 28590: u64 [s0 + 4294967272] = 0xfffffffffffffff7
 28594: jump @1773
      : @1755
 28597: a0 = u64 [s0 + 0xffffffffffffff68]
 28601: u64 [s0 + 0xffffffffffffff58] = a0
 28605: a0 = u64 [s0 + 0xffffffffffffff60]
 28609: jump @1758 if a0 <u 2
      : @1756
 28613: a0 = u64 [s0 + 0xffffffffffffff58]
 28617: a1 = u64 [s0 + 0xffffffffffffff60]
 28621: a0 = a0 + a1
 28624: a0 = u8 [a0 + 0xffffffffffffffff]
 28627: jump @1758 if a0 != 10
      : @1757
 28631: a0 = u64 [s0 + 0xffffffffffffff60]
 28635: a0 = a0 + 0xffffffffffffffff
 28638: u64 [s0 + 0xffffffffffffff60] = a0
 28642: a0 = u64 [s0 + 0xffffffffffffff78]
 28646: a0 = a0 + 0x1
 28649: u64 [s0 + 0xffffffffffffff78] = a0
 28653: fallthrough
      : @1758
 28654: a0 = u64 [s0 + 0xffffffffffffff70]
 28658: a1 = u64 [s0 + 0xffffffffffffff80]
 28661: a1 = a1 + 0xffffffffffffffff
 28664: jump @1762 if a0 != a1
      : @1759
 28667: a0 = u64 [s0 + 0xffffffffffffff60]
 28671: jump @1762 if a0 != 1
      : @1760
 28675: a0 = u64 [s0 + 0xffffffffffffff58]
 28679: a0 = u8 [a0]
 28681: jump @1762 if a0 != 10
      : @1761
 28685: a0 = u64 [s0 + 0xffffffffffffff60]
 28689: a1 = u64 [s0 + 0xffffffffffffff78]
 28693: a0 = a0 + a1
 28696: u64 [s0 + 0xffffffffffffff78] = a0
 28700: jump @1764
      : @1762
 28702: a0 = u64 [s0 + 0xffffffffffffff90]
 28705: a0 = a0 + 0xffffffffffffffff
 28708: a0 = a0 <u 0x1
 28711: a0 = a0 << 0x1
 28714: u64 [s0 + 0xffffffffffffff50] = a0
 28718: a0 = u64 [s0 + 0xffffffffffffff50]
 28722: a3 = u64 [s0 + 0xffffffffffffff58]
 28726: a4 = u64 [s0 + 0xffffffffffffff60]
 28730: a1 = 0x10195
 28735: a2 = 0x6
 28738: ra = 554, jump @1716
      : @1763 [@dyn 277]
 28744: a0 = u64 [s0 + 0xffffffffffffff60]
 28748: a1 = u64 [s0 + 0xffffffffffffff78]
 28752: a0 = a0 + a1
 28755: u64 [s0 + 0xffffffffffffff78] = a0
 28759: fallthrough
      : @1764
 28760: a0 = u64 [s0 + 0xffffffffffffff70]
 28764: a0 = a0 + 0x1
 28767: u64 [s0 + 0xffffffffffffff70] = a0
 28771: jump @1751
      : @1765
 28774: a0 = u64 [s0 + 0xffffffffffffff78]
 28778: u64 [s0 + 0xffffffffffffffe8] = a0
 28781: jump @1773
      : @1766
 28783: a0 = u64 [s0 + 0xffffffffffffffd8]
 28786: a1 = 0x1
 28789: u64 [a0] = a1
 28791: u64 [s0 + 0xffffffffffffffe8] = a1
 28794: jump @1773
      : @1767
 28796: trap
      : @1768
 28797: trap
      : @1769
 28798: u64 [s0 + 4294967272] = 0
 28801: jump @1773
      : @1770
 28803: a3 = u64 [s0 + 0xffffffffffffffe0]
 28806: a2 = 0x1067a
 28811: a0 = s0 + 0xfffffffffffffeec
 28815: a1 = 0x64
 28818: ra = 556, jump @221
      : @1771 [@dyn 278]
 28824: a0 = 0x101fb
 28829: a1 = s0 + 0xfffffffffffffeec
 28833: ra = 0x22e
 28837: sp = sp + 0xffffffffffffffe0
 28840: u64 [sp + 0x18] = ra
 28843: u64 [sp + 0x10] = s0
 28846: s0 = sp + 0x20
 28849: u64 [s0 + 0xffffffffffffffe8] = a0
 28852: u64 [s0 + 0xffffffffffffffe0] = a1
 28855: a1 = u64 [s0 + 0xffffffffffffffe8]
 28858: a2 = u64 [s0 + 0xffffffffffffffe0]
 28861: a0 = 0x1
 28864: ra = 0x2b2
 28868: jump @1851
      : @1772 [@dyn 279]
 28871: u64 [s0 + 4294967272] = 0xffffffffffffffff
 28875: fallthrough
      : @1773
 28876: a0 = u64 [s0 + 0xffffffffffffffe8]
 28879: ra = u64 [sp + 0x110]
 28883: s0 = u64 [sp + 0x108]
 28887: sp = sp + 0x118
 28891: ret
      : @1774
 28893: sp = sp + 0xffffffffffffffe8
 28896: u64 [sp + 0x10] = ra
 28899: u64 [sp + 0x8] = s0
 28902: s0 = sp + 0x18
 28905: u64 [s0 + 0xffffffffffffffe8] = a0
 28908: a1 = u64 [s0 + 0xffffffffffffffe8]
 28911: a0 = 0x10797
 28916: ra = 560, jump @1857
      : @1775 [@dyn 280]
 28922: trap
      : @1776
 28923: sp = sp + 0xffffffffffffffe0
 28926: u64 [sp + 0x18] = ra
 28929: u64 [sp + 0x10] = s0
 28932: s0 = sp + 0x20
 28935: u64 [s0 + 0xffffffffffffffe8] = a0
 28938: u64 [s0 + 0xffffffffffffffe0] = a1
 28941: a0 = u64 [s0 + 0xffffffffffffffe8]
 28944: a1 = u64 [s0 + 0xffffffffffffffe0]
 28947: ra = 562, jump @1778
      : @1777 [@dyn 281]
 28952: ra = u64 [sp + 0x18]
 28955: s0 = u64 [sp + 0x10]
 28958: sp = sp + 0x20
 28961: ret
      : @1778
 28963: sp = sp + 0xffffffffffffffe0
 28966: u64 [sp + 0x18] = ra
 28969: u64 [sp + 0x10] = s0
 28972: s0 = sp + 0x20
 28975: u64 [s0 + 0xffffffffffffffe8] = a0
 28978: u64 [s0 + 0xffffffffffffffe0] = a1
 28981: a0 = u64 [s0 + 0xffffffffffffffe8]
 28984: jump @1780 if a0 != 0
      : @1779
 28987: a0 = u64 [s0 + 0xffffffffffffffe0]
 28990: ra = 564, jump @1774
      : @1780 [@dyn 282]
 28995: ra = u64 [sp + 0x18]
 28998: s0 = u64 [sp + 0x10]
 29001: sp = sp + 0x20
 29004: ret
      : @1781
 29006: sp = sp + 0xffffffffffffffe0
 29009: u64 [sp + 0x18] = ra
 29012: u64 [sp + 0x10] = s0
 29015: s0 = sp + 0x20
 29018: u64 [s0 + 0xffffffffffffffe8] = a0
 29021: u64 [s0 + 0xffffffffffffffe0] = a1
 29024: a0 = u64 [s0 + 0xffffffffffffffe8]
 29027: jump @1783 if a0 == 0
      : @1782
 29030: a0 = u64 [s0 + 0xffffffffffffffe0]
 29033: ra = 566, jump @1774
      : @1783 [@dyn 283]
 29039: ra = u64 [sp + 0x18]
 29042: s0 = u64 [sp + 0x10]
 29045: sp = sp + 0x20
 29048: ret
      : @1784
 29050: sp = sp + 0xffffffffffffffd8
 29053: u64 [sp + 0x20] = ra
 29056: u64 [sp + 0x18] = s0
 29059: s0 = sp + 0x28
 29062: u64 [s0 + 0xffffffffffffffe8] = a0
 29065: u64 [s0 + 0xffffffffffffffe0] = a1
 29068: u64 [s0 + 0xffffffffffffffd8] = a2
 29071: a0 = u64 [s0 + 0xffffffffffffffe8]
 29074: a1 = u64 [s0 + 0xffffffffffffffe0]
 29077: jump @1786 if a0 == a1
      : @1785
 29080: a0 = u64 [s0 + 0xffffffffffffffd8]
 29083: ra = 568, jump @1774
      : @1786 [@dyn 284]
 29089: ra = u64 [sp + 0x20]
 29092: s0 = u64 [sp + 0x18]
 29095: sp = sp + 0x28
 29098: ret
      : @1787 [@dyn 285]
 29100: ra = 0x23c
 29104: sp = sp + 0xffffffffffffffe8
 29107: u64 [sp + 0x10] = ra
 29110: u64 [sp + 0x8] = s0
 29113: s0 = sp + 0x18
 29116: a0 = 0
 29118: a1 = 0
 29120: a2 = 0
 29122: a3 = 0
 29124: a4 = 0
 29126: a5 = 0
 29128: ra = 0x262
 29132: jump @1715
      : @1788 [@dyn 286]
 29135: ra = 0x23e
 29139: sp = sp + 0xffffffffffffffc8
 29142: u64 [sp + 0x30] = ra
 29145: u64 [sp + 0x28] = s0
 29148: u64 [sp + 0x20] = s1
 29151: s0 = sp + 0x38
 29154: a1 = 0x101bb
 29159: a0 = 0x1
 29162: ra = 0x266
 29166: jump @1776
      : @1789 [@dyn 287]
 29169: ra = 0x240
 29173: sp = sp + 0xffffffffffffffd8
 29176: u64 [sp + 0x20] = ra
 29179: u64 [sp + 0x18] = s0
 29182: s0 = sp + 0x28
 29185: a0 = 0x2710
 29189: u32 [s0 + 0xffffffffffffffec] = a0
 29192: ra = 0x29a
 29196: jump @1524
      : @1790 [@dyn 288]
 29199: ra = 0x242
 29203: sp = sp + 0xffffffffffffffe0
 29206: u64 [sp + 0x18] = ra
 29209: u64 [sp + 0x10] = s0
 29212: s0 = sp + 0x20
 29215: ra = 0x2a4
 29219: jump @1850
      : @1791 [@dyn 289]
 29222: ra = u64 [sp + 0x8]
 29225: s0 = u64 [sp]
 29227: sp = sp + 0x10
 29230: ret
      : @1792 [@dyn 290]
 29232: a2 = 0x10209
 29237: a0 = 0x2
 29240: a1 = 0x2
 29243: ra = 582, jump @1784
      : @1793 [@dyn 291]
 29249: a2 = 0x105ea
 29254: a0 = 0x4
 29257: a1 = 0x4
 29260: ra = 584, jump @1784
      : @1794 [@dyn 292]
 29266: a2 = 0x105a2
 29271: a0 = 0x8
 29274: a1 = 0x8
 29277: ra = 586, jump @1784
      : @1795 [@dyn 293]
 29283: a2 = 0x10080
 29288: a0 = 0x8
 29291: a1 = 0x8
 29294: ra = 588, jump @1784
      : @1796 [@dyn 294]
 29300: a2 = 0x106d5
 29305: a0 = 0x8
 29308: a1 = 0x8
 29311: ra = 590, jump @1784
      : @1797 [@dyn 295]
 29317: a2 = 0x1068e
 29322: a0 = 0x1
 29325: a1 = 0x1
 29328: ra = 592, jump @1784
      : @1798 [@dyn 296]
 29334: a2 = 0x1074c
 29339: a0 = 0x2
 29342: a1 = 0x2
 29345: ra = 594, jump @1784
      : @1799 [@dyn 297]
 29351: a2 = 0x1000a
 29356: a0 = 0x4
 29359: a1 = 0x4
 29362: ra = 596, jump @1784
      : @1800 [@dyn 298]
 29368: a2 = 0x105b6
 29373: a0 = 0x8
 29376: a1 = 0x8
 29379: ra = 598, jump @1784
      : @1801 [@dyn 299]
 29385: a2 = 0x105fd
 29390: a0 = 0x60
 29393: a1 = 0x60
 29396: ra = 600, jump @1784
      : @1802 [@dyn 300]
 29402: a2 = 0x10022
 29407: a0 = 0x86
 29411: a1 = 0x86
 29415: ra = 602, jump @1784
      : @1803 [@dyn 301]
 29421: a2 = 0x10631
 29426: a0 = 0x4
 29429: a1 = 0x4
 29432: ra = 604, jump @1784
      : @1804 [@dyn 302]
 29438: a2 = 0x106bb
 29443: a0 = 0x8
 29446: a1 = 0x8
 29449: ra = 606, jump @1784
      : @1805 [@dyn 303]
 29455: a2 = 0x10126
 29460: a0 = 0x10
 29463: a1 = 0x10
 29466: ra = 608, jump @1784
      : @1806 [@dyn 304]
 29472: ra = u64 [sp + 0x8]
 29475: s0 = u64 [sp]
 29477: sp = sp + 0x10
 29480: ret
      : @1807 [@dyn 305]
 29482: u64 [s0 + 0xffffffffffffffe8] = a0
 29485: a0 = u64 [s0 + 0xffffffffffffffe8]
 29488: a2 = 0x10142
 29493: a1 = 0x86
 29497: ra = 612, jump @1784
      : @1808 [@dyn 306]
 29503: ra = u64 [sp + 0x10]
 29506: s0 = u64 [sp + 0x8]
 29509: sp = sp + 0x18
 29512: ret
      : @1809 [@dyn 307]
 29514: u32 [s0 + 4294967268] = 0x40000000
 29521: u32 [s0 + 4294967264] = 0x40400000
 29528: u32 [s0 + 4294967260] = 0x40a00000
 29535: a0 = i32 [s0 + 0xffffffffffffffe4]
 29538: a1 = i32 [s0 + 0xffffffffffffffe0]
 29541: ra = 616, jump @1544
      : @1810 [@dyn 308]
 29547: a1 = i32 [s0 + 0xffffffffffffffdc]
 29550: ra = 0x26a
 29554: a1 = a1 ^ 0xffffffff80000000
 29560: jump @1544
      : @1811 [@dyn 309]
 29563: a0 = a0 << 0x20
 29566: a0 = a0 >> 0x20
 29569: ra = 620, jump @1589
      : @1812 [@dyn 310]
 29575: a1 = 0x7fffffffffffffff
 29585: u64 [s0 + 0xffffffffffffffc8] = a1
 29588: a0 = a0 & a1
 29591: s1 = 0x7d
 29594: a1 = 0x3e80000000000000
 29604: u64 [s0 + 0xffffffffffffffd0] = a1
 29607: ra = 622, jump @1597
      : @1813 [@dyn 311]
 29613: a0 = a0 <s 0
 29615: a1 = 0x10547
 29620: ra = 624, jump @1776
      : @1814 [@dyn 312]
 29626: a0 = i32 [s0 + 0xffffffffffffffdc]
 29629: a1 = i32 [s0 + 0xffffffffffffffe0]
 29632: ra = 0x272
 29636: a1 = a1 ^ 0xffffffff80000000
 29642: jump @1544
      : @1815 [@dyn 313]
 29645: a1 = i32 [s0 + 0xffffffffffffffe4]
 29648: ra = 0x274
 29652: a1 = a1 ^ 0xffffffff80000000
 29658: jump @1544
      : @1816 [@dyn 314]
 29661: a0 = a0 << 0x20
 29664: a0 = a0 >> 0x20
 29667: ra = 630, jump @1589
      : @1817 [@dyn 315]
 29673: s1 = u64 [s0 + 0xffffffffffffffc8]
 29676: a0 = a0 & s1
 29679: a1 = u64 [s0 + 0xffffffffffffffd0]
 29682: ra = 632, jump @1597
      : @1818 [@dyn 316]
 29688: a0 = a0 <s 0
 29690: a1 = 0x100c5
 29695: ra = 634, jump @1776
      : @1819 [@dyn 317]
 29701: a0 = i32 [s0 + 0xffffffffffffffe4]
 29704: a1 = i32 [s0 + 0xffffffffffffffe0]
 29707: ra = 636, jump @1607
      : @1820 [@dyn 318]
 29713: a1 = 0xffffffffc0c00000
 29719: ra = 638, jump @1544
      : @1821 [@dyn 319]
 29725: a0 = a0 << 0x20
 29728: a0 = a0 >> 0x20
 29731: ra = 640, jump @1589
      : @1822 [@dyn 320]
 29737: a0 = a0 & s1
 29740: s1 = u64 [s0 + 0xffffffffffffffd0]
 29743: a1 = s1
 29745: ra = 642, jump @1597
      : @1823 [@dyn 321]
 29751: a0 = a0 <s 0
 29753: a1 = 0x106ea
 29758: ra = 644, jump @1776
      : @1824 [@dyn 322]
 29764: a0 = i32 [s0 + 0xffffffffffffffdc]
 29767: a1 = i32 [s0 + 0xffffffffffffffe4]
 29770: ra = 646, jump @1641
      : @1825 [@dyn 323]
 29776: a1 = 0xffffffffc0200000
 29782: ra = 648, jump @1544
      : @1826 [@dyn 324]
 29788: a0 = a0 << 0x20
 29791: a0 = a0 >> 0x20
 29794: ra = 650, jump @1589
      : @1827 [@dyn 325]
 29800: a1 = u64 [s0 + 0xffffffffffffffc8]
 29803: a0 = a0 & a1
 29806: a1 = s1
 29808: ra = 652, jump @1597
      : @1828 [@dyn 326]
 29814: a0 = a0 <s 0
 29816: a1 = 0x10764
 29821: ra = 654, jump @1776
      : @1829 [@dyn 327]
 29827: u32 [s0 + 4294967256] = 0x400000
 29833: a0 = i32 [s0 + 0xffffffffffffffd8]
 29836: a1 = 0
 29838: jump @1684
      : @1830
 29841: jump @1836 if a0 <=s 0
      : @1831
 29844: a0 = i32 [s0 + 0xffffffffffffffd8]
 29847: a1 = 0x800000
 29853: ra = 656, jump @1674
      : @1832 [@dyn 328]
 29859: a0 = a0 <s 0
 29861: a1 = 0x10706
 29866: ra = 658, jump @1776
      : @1833 [@dyn 329]
 29872: a0 = i32 [s0 + 0xffffffffffffffd8]
 29875: a1 = a0
 29877: ra = 660, jump @1544
      : @1834 [@dyn 330]
 29883: a1 = 0x800000
 29889: ra = 662, jump @1674
      : @1835 [@dyn 331]
 29895: a0 = a0 <u 0x1
 29898: a1 = 0x105ce
 29903: ra = 664, jump @1776
      : @1836 [@dyn 332]
 29909: ra = u64 [sp + 0x30]
 29912: s0 = u64 [sp + 0x28]
 29915: s1 = u64 [sp + 0x20]
 29918: sp = sp + 0x38
 29921: ret
      : @1837 [@dyn 333]
 29923: u64 [s0 + 0xffffffffffffffe0] = a0
 29926: a0 = u64 [s0 + 0xffffffffffffffe0]
 29929: a0 = a0 >u 0
 29931: a1 = 0x10105
 29936: ra = 668, jump @1776
      : @1838 [@dyn 334]
 29942: u64 [s0 + 4294967256] = 0
 29945: fallthrough
      : @1839
 29946: a0 = u64 [s0 + 0xffffffffffffffd8]
 29949: a0 = a0 >> 0x4
 29952: a1 = 0x270
 29956: jump @1843 if a1 <u a0
      : @1840
 29959: a0 = u64 [s0 + 0xffffffffffffffe0]
 29962: a1 = u64 [s0 + 0xffffffffffffffd8]
 29965: a0 = a0 + a1
 29968: a0 = u8 [a0]
 29970: a1 = 0x1019c
 29975: ra = 670, jump @1781
      : @1841 [@dyn 335]
 29981: a0 = u64 [s0 + 0xffffffffffffffd8]
 29984: a1 = u64 [s0 + 0xffffffffffffffe0]
 29987: a2 = u64 [s0 + 0xffffffffffffffd8]
 29990: a1 = a1 + a2
 29993: u8 [a1] = a0
 29995: a0 = u64 [s0 + 0xffffffffffffffe0]
 29998: a1 = u64 [s0 + 0xffffffffffffffd8]
 30001: a0 = a0 + a1
 30004: a0 = u8 [a0]
 30006: a1 = a1 & 0xff
 30010: a2 = 0x1077a
 30015: ra = 672, jump @1784
      : @1842 [@dyn 336]
 30021: a0 = u64 [s0 + 0xffffffffffffffd8]
 30024: a0 = a0 + 0x1
 30027: u64 [s0 + 0xffffffffffffffd8] = a0
 30030: jump @1839
      : @1843
 30032: a0 = u64 [s0 + 0xffffffffffffffe0]
 30035: ra = 674, jump @1538
      : @1844 [@dyn 337]
 30041: ra = u64 [sp + 0x20]
 30044: s0 = u64 [sp + 0x18]
 30047: sp = sp + 0x28
 30050: ret
      : @1845 [@dyn 338]
 30052: u64 [s0 + 0xffffffffffffffe8] = a0
 30055: ra = 678, jump @1850
      : @1846 [@dyn 339]
 30060: u64 [s0 + 0xffffffffffffffe0] = a0
 30063: a1 = u64 [s0 + 0xffffffffffffffe8]
 30066: a2 = u64 [s0 + 0xffffffffffffffe0]
 30069: a0 = 0
 30071: jump @1848 if a1 != a2
      : @1847
 30074: a0 = u64 [s0 + 0xffffffffffffffe8]
 30077: a0 = a0 >u 0
 30079: fallthrough
      : @1848
 30080: a0 = a0 & 0x1
 30083: a1 = 0x1055d
 30088: ra = 680, jump @1776
      : @1849 [@dyn 340]
 30094: ra = u64 [sp + 0x18]
 30097: s0 = u64 [sp + 0x10]
 30100: sp = sp + 0x20
 30103: ret
      : @1850
 30105: sp = sp + 0xffffffffffffffe0
 30108: u64 [sp + 0x18] = ra
 30111: u64 [sp + 0x10] = s0
 30114: s0 = sp + 0x20
 30117: u64 [s0 + 4294967272] = 0
 30120: a0 = u64 [s0 + 0xffffffffffffffe8]
 30123: a0 = sbrk a0
 30125: u64 [s0 + 0xffffffffffffffe0] = a0
 30128: a0 = u64 [s0 + 0xffffffffffffffe0]
 30131: ra = u64 [sp + 0x18]
 30134: s0 = u64 [sp + 0x10]
 30137: sp = sp + 0x20
 30140: ret
      : @1851
 30142: sp = sp + 0xffffffffffffffb8
 30145: u64 [sp + 0x40] = ra
 30148: u64 [sp + 0x38] = s0
 30151: u64 [sp + 0x30] = s1
 30154: s0 = sp + 0x48
 30157: u64 [s0 + 0xffffffffffffffe0] = a0
 30160: u64 [s0 + 0xffffffffffffffd8] = a1
 30163: u64 [s0 + 0xffffffffffffffd0] = a2
 30166: a0 = u64 [s0 + 0xffffffffffffffe0]
 30169: u64 [s0 + 0xffffffffffffffc8] = a0
 30172: a0 = u64 [s0 + 0xffffffffffffffd8]
 30175: u64 [s0 + 0xffffffffffffffc0] = a0
 30178: ra = 682, jump @1324
      : @1852 [@dyn 341]
 30184: u64 [s0 + 0xffffffffffffffb8] = a0
 30187: s1 = u64 [s0 + 0xffffffffffffffd0]
 30190: a0 = s1
 30192: ra = 684, jump @1324
      : @1853 [@dyn 342]
 30198: a4 = a0
 30200: a0 = u64 [s0 + 0xffffffffffffffc8]
 30203: a1 = u64 [s0 + 0xffffffffffffffc0]
 30206: a2 = u64 [s0 + 0xffffffffffffffb8]
 30209: a3 = s1
 30211: ra = 0x2ae
 30215: sp = sp + 0xffffffffffffffc8
 30218: u64 [sp + 0x30] = ra
 30221: u64 [sp + 0x28] = s0
 30224: s0 = sp + 0x38
 30227: u64 [s0 + 0xffffffffffffffe8] = a0
 30230: u64 [s0 + 0xffffffffffffffe0] = a1
 30233: u64 [s0 + 0xffffffffffffffd8] = a2
 30236: u64 [s0 + 0xffffffffffffffd0] = a3
 30239: u64 [s0 + 0xffffffffffffffc8] = a4
 30242: a0 = u64 [s0 + 0xffffffffffffffe8]
 30245: a1 = u64 [s0 + 0xffffffffffffffe0]
 30248: a2 = u64 [s0 + 0xffffffffffffffd8]
 30251: a3 = u64 [s0 + 0xffffffffffffffd0]
 30254: a4 = u64 [s0 + 0xffffffffffffffc8]
 30257: ra = 0x20a
 30261: jump @1716
      : @1854 [@dyn 343]
 30264: ra = u64 [sp + 0x40]
 30267: s0 = u64 [sp + 0x38]
 30270: s1 = u64 [sp + 0x30]
 30273: sp = sp + 0x48
 30276: ret
      : @1855 [@dyn 344]
 30278: ra = u64 [sp + 0x18]
 30281: s0 = u64 [sp + 0x10]
 30284: sp = sp + 0x20
 30287: ret
      : @1856 [@dyn 345]
 30289: ra = u64 [sp + 0x18]
 30292: s0 = u64 [sp + 0x10]
 30295: sp = sp + 0x20
 30298: ret
      : @1857
 30300: sp = sp + 0xffffffffffffffe0
 30303: u64 [sp + 0x18] = ra
 30306: u64 [sp + 0x10] = s0
 30309: s0 = sp + 0x20
 30312: u64 [s0 + 0xffffffffffffffe8] = a0
 30315: u64 [s0 + 0xffffffffffffffe0] = a1
 30318: a1 = u64 [s0 + 0xffffffffffffffe8]
 30321: a2 = u64 [s0 + 0xffffffffffffffe0]
 30324: a0 = 0
 30326: ra = 692, jump @1851
      : @1858 [@dyn 346]
 30332: ra = u64 [sp + 0x18]
 30335: s0 = u64 [sp + 0x10]
 30338: sp = sp + 0x20
 30341: ret
      : @1859 [@dyn 347]
 30343: ra = u64 [sp + 0x1f0]
 30347: s0 = u64 [sp + 0x1e8]
 30351: s1 = u64 [sp + 0x1e0]
 30355: sp = sp + 0x1f8
 30359: ret
